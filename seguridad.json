[
    {
        "id": "aba8d67a3351a1b7",
        "type": "tab",
        "label": "SEGURIDAD",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "90b8bd624d969ce7",
        "type": "tab",
        "label": "Zonas - Centros",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7b10dc16446eb4a7",
        "type": "tab",
        "label": "Ast-Seguridad",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4764728e59dc3fdd",
        "type": "tab",
        "label": "GMT-Seguridad",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "73720112d2633680",
        "type": "tab",
        "label": "Mowi-Seguridad",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1883ce515f2f379c",
        "type": "tab",
        "label": "AquaChile-Seguridad",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "db3871cde3e51b44",
        "type": "tab",
        "label": "SalmonesAustral-Seguridad",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8a778912adb6cc84",
        "type": "subflow",
        "name": "AQUACHILE2-SEGURIDAD",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 320,
                "wires": [
                    {
                        "id": "f9cb3ab2dd93d94f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1160,
                "y": 200,
                "wires": [
                    {
                        "id": "47dac0f18d69cbfa",
                        "port": 0
                    },
                    {
                        "id": "56314581fd4c1e08",
                        "port": 0
                    },
                    {
                        "id": "f261f8f2067bdf8c",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1160,
                "y": 380,
                "wires": [
                    {
                        "id": "abf7637f394b8f36",
                        "port": 0
                    },
                    {
                        "id": "5ac55edc4ee318ea",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "29f79c2cce5e4644",
        "type": "subflow",
        "name": "AQUACHILE1-SEGURIDAD",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1080,
                "y": 1200,
                "wires": [
                    {
                        "id": "500ab2549cfb46ed",
                        "port": 0
                    },
                    {
                        "id": "d1b3ad73219a3c24",
                        "port": 0
                    },
                    {
                        "id": "96698966b89c79fb",
                        "port": 0
                    },
                    {
                        "id": "48e203b988045090",
                        "port": 0
                    },
                    {
                        "id": "8540255729f22585",
                        "port": 0
                    },
                    {
                        "id": "38addcc6fa6b0e61",
                        "port": 0
                    },
                    {
                        "id": "e73d44e9e480c344",
                        "port": 0
                    },
                    {
                        "id": "633436af59996991",
                        "port": 0
                    },
                    {
                        "id": "d19afc334977e8ad",
                        "port": 0
                    },
                    {
                        "id": "8cefd55562458a7c",
                        "port": 0
                    },
                    {
                        "id": "59bf1d19f2d3d046",
                        "port": 0
                    },
                    {
                        "id": "cb625baadfc926ea",
                        "port": 0
                    },
                    {
                        "id": "dd923ad3bf5bd189",
                        "port": 0
                    },
                    {
                        "id": "e64915bab1c8cb38",
                        "port": 0
                    },
                    {
                        "id": "7df45472d0a54de0",
                        "port": 0
                    },
                    {
                        "id": "27351f1bb1e982d4",
                        "port": 0
                    },
                    {
                        "id": "64ad99098241077c",
                        "port": 0
                    },
                    {
                        "id": "87105ad144aba5b5",
                        "port": 0
                    },
                    {
                        "id": "02b4a3a32cd0fa33",
                        "port": 0
                    },
                    {
                        "id": "867605bbfbd1e5b5",
                        "port": 0
                    },
                    {
                        "id": "4acd1d8f87f1193c",
                        "port": 0
                    },
                    {
                        "id": "ce80e467c834bfdf",
                        "port": 0
                    },
                    {
                        "id": "d37352c5d819511e",
                        "port": 0
                    },
                    {
                        "id": "03a1c360a58917d9",
                        "port": 0
                    },
                    {
                        "id": "136181058622ebb2",
                        "port": 0
                    },
                    {
                        "id": "31aa5b30d26214dd",
                        "port": 0
                    },
                    {
                        "id": "a10cc6d8caa07ee0",
                        "port": 0
                    },
                    {
                        "id": "ccb5e961a5742c40",
                        "port": 0
                    },
                    {
                        "id": "c6920295d23ab141",
                        "port": 0
                    },
                    {
                        "id": "e268f1251efc4404",
                        "port": 0
                    },
                    {
                        "id": "37fd4b9011f79095",
                        "port": 0
                    },
                    {
                        "id": "bccd356e77aa96c1",
                        "port": 0
                    },
                    {
                        "id": "416f85baf105ab5f",
                        "port": 0
                    },
                    {
                        "id": "c567b5df56b199ce",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "8deaac46fb363040",
        "type": "subflow",
        "name": "SALMONES_A2-SEGURIDAD",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 300,
                "wires": [
                    {
                        "id": "343ea65850b6dc76"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1220,
                "y": 200,
                "wires": [
                    {
                        "id": "80512428097eb871",
                        "port": 0
                    },
                    {
                        "id": "7c9cdb43f01fbd8d",
                        "port": 0
                    },
                    {
                        "id": "493ecf9fee409f23",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1220,
                "y": 340,
                "wires": [
                    {
                        "id": "9fe0322e61cc5ac2",
                        "port": 0
                    },
                    {
                        "id": "75a9a734e28df764",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f2220fabc259fc22",
        "type": "subflow",
        "name": "SALMONES_A1-SEGURIDAD",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1160,
                "y": 520,
                "wires": [
                    {
                        "id": "152c6001a530b435",
                        "port": 0
                    },
                    {
                        "id": "58b0bc9668ac8917",
                        "port": 0
                    },
                    {
                        "id": "ada6205b91d42366",
                        "port": 0
                    },
                    {
                        "id": "3b5fdb9d94c0c5b6",
                        "port": 0
                    },
                    {
                        "id": "5808c6da8584b11a",
                        "port": 0
                    },
                    {
                        "id": "fa9c6acdb86b3b98",
                        "port": 0
                    },
                    {
                        "id": "7de0433f3f5f8d93",
                        "port": 0
                    },
                    {
                        "id": "7a263a00db846c55",
                        "port": 0
                    },
                    {
                        "id": "7f72432e9b2bc4e1",
                        "port": 0
                    },
                    {
                        "id": "8c147594069c1b2a",
                        "port": 0
                    },
                    {
                        "id": "0973de7f78fa0e78",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "9205ecf7ceb34237",
        "type": "subflow",
        "name": "GMT2-SEGURIDAD",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 320,
                "wires": [
                    {
                        "id": "cb186135d96952e1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1320,
                "y": 240,
                "wires": [
                    {
                        "id": "73686455d61e48e9",
                        "port": 0
                    },
                    {
                        "id": "719bdba72ba75ea8",
                        "port": 0
                    },
                    {
                        "id": "4383fb5316667a97",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1320,
                "y": 380,
                "wires": [
                    {
                        "id": "7f00835464cd70c7",
                        "port": 0
                    },
                    {
                        "id": "8fa97719c77d25be",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "e4c6aa3eb68f5823",
        "type": "subflow",
        "name": "GMT1-SEGURIDAD",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 920,
                "y": 260,
                "wires": [
                    {
                        "id": "20de039575004312",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "5437e6e6763a541f",
        "type": "subflow",
        "name": "AST2-SEGURIDAD",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 300,
                "wires": [
                    {
                        "id": "df5d9d9730c18859"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1220,
                "y": 220,
                "wires": [
                    {
                        "id": "584d11cf2e7ac8fe",
                        "port": 0
                    },
                    {
                        "id": "e6aa1d5bc06da177",
                        "port": 0
                    },
                    {
                        "id": "40a34b36356b5517",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1220,
                "y": 340,
                "wires": [
                    {
                        "id": "524e32720f49c577",
                        "port": 0
                    },
                    {
                        "id": "b567431178c1b0b3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "9bbcb6f5ba9c78ab",
        "type": "subflow",
        "name": "AST1-SEGURIDAD",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 900,
                "y": 220,
                "wires": [
                    {
                        "id": "60ce1766d9e1101c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "6319dc34dc989120",
        "type": "subflow",
        "name": "MOWI2-SEGURIDAD",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 320,
                "wires": [
                    {
                        "id": "1337e76dae606bbb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1320,
                "y": 280,
                "wires": [
                    {
                        "id": "a15720320fb7d685",
                        "port": 0
                    },
                    {
                        "id": "fe6f447c735200ab",
                        "port": 0
                    },
                    {
                        "id": "54e8e0bdc29c48f0",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1280,
                "y": 440,
                "wires": [
                    {
                        "id": "2528c569f7bda3d3",
                        "port": 0
                    },
                    {
                        "id": "51ae36f6d4523343",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "63df8b5eec27f8fd",
        "type": "subflow",
        "name": "MOWI1-SEGURIDAD",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1240,
                "y": 340,
                "wires": [
                    {
                        "id": "37be1a913895158d",
                        "port": 0
                    },
                    {
                        "id": "e5de644242f3bf8b",
                        "port": 0
                    },
                    {
                        "id": "b7e4ca66218aa22e",
                        "port": 0
                    },
                    {
                        "id": "9a9ad6898e371a57",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "e72ed24ed95ca6a6",
        "type": "subflow",
        "name": "AQUACHILE2-SEGURIDAD (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 320,
                "wires": [
                    {
                        "id": "a5080a5d7c1888f3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1160,
                "y": 200,
                "wires": [
                    {
                        "id": "a13a3c0106652283",
                        "port": 0
                    },
                    {
                        "id": "931f4985809328d5",
                        "port": 0
                    },
                    {
                        "id": "71cfe9c59b3a2aeb",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1160,
                "y": 380,
                "wires": [
                    {
                        "id": "82eb229e4876edb3",
                        "port": 0
                    },
                    {
                        "id": "c028d85ac8fa79b0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "6971f32f5bf576d7",
        "type": "subflow",
        "name": "AQUACHILE1-SEGURIDAD (2)",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1100,
                "y": 1840,
                "wires": [
                    {
                        "id": "db0406203416e0a0",
                        "port": 0
                    },
                    {
                        "id": "d8bce1c04efd54e3",
                        "port": 0
                    },
                    {
                        "id": "27346c8c7c12555c",
                        "port": 0
                    },
                    {
                        "id": "8b675576a7d9140a",
                        "port": 0
                    },
                    {
                        "id": "cda477b2d40a5223",
                        "port": 0
                    },
                    {
                        "id": "22350e942072259f",
                        "port": 0
                    },
                    {
                        "id": "2d7c066ad5490aff",
                        "port": 0
                    },
                    {
                        "id": "25fc684fbd32b547",
                        "port": 0
                    },
                    {
                        "id": "beb22585cc3e01e7",
                        "port": 0
                    },
                    {
                        "id": "7eb170c0ba590bf7",
                        "port": 0
                    },
                    {
                        "id": "2715c96427ee03ee",
                        "port": 0
                    },
                    {
                        "id": "d4a78c297dbdca54",
                        "port": 0
                    },
                    {
                        "id": "6a7584cf3111e6f5",
                        "port": 0
                    },
                    {
                        "id": "2a97a22818d2dc5e",
                        "port": 0
                    },
                    {
                        "id": "a908ca72522ce735",
                        "port": 0
                    },
                    {
                        "id": "de579533252f7785",
                        "port": 0
                    },
                    {
                        "id": "17f7dd301547dc47",
                        "port": 0
                    },
                    {
                        "id": "53bc1f4cc5e1db4c",
                        "port": 0
                    },
                    {
                        "id": "ab8a3f6f0ce946a7",
                        "port": 0
                    },
                    {
                        "id": "3eb1a225b7448ed8",
                        "port": 0
                    },
                    {
                        "id": "d7357bf36b8c26ab",
                        "port": 0
                    },
                    {
                        "id": "d1470fc36b50b133",
                        "port": 0
                    },
                    {
                        "id": "3db24510188119c8",
                        "port": 0
                    },
                    {
                        "id": "f90c0b3583ce1358",
                        "port": 0
                    },
                    {
                        "id": "3ddfd57812f26288",
                        "port": 0
                    },
                    {
                        "id": "a9cd579aa43ba5c7",
                        "port": 0
                    },
                    {
                        "id": "92c99f55df0f4370",
                        "port": 0
                    },
                    {
                        "id": "5053291a085ef007",
                        "port": 0
                    },
                    {
                        "id": "3e6c1dea1467721d",
                        "port": 0
                    },
                    {
                        "id": "18a326d618fb0f65",
                        "port": 0
                    },
                    {
                        "id": "41939316f45b2bd0",
                        "port": 0
                    },
                    {
                        "id": "81b53f2077b43315",
                        "port": 0
                    },
                    {
                        "id": "716bb59540728407",
                        "port": 0
                    },
                    {
                        "id": "d304e5e0859b72b7",
                        "port": 0
                    },
                    {
                        "id": "da07e0e7a21105a8",
                        "port": 0
                    },
                    {
                        "id": "b6bcf84bc4939fcc",
                        "port": 0
                    },
                    {
                        "id": "152ab950301d0f43",
                        "port": 0
                    },
                    {
                        "id": "fb2fdf4e268d06e5",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c8614afdb1f3cea5",
        "type": "subflow",
        "name": "SALMONES_A2-SEGURIDAD (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 300,
                "wires": [
                    {
                        "id": "3da3ac53112246ed"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1220,
                "y": 200,
                "wires": [
                    {
                        "id": "ce2036558e63b5cc",
                        "port": 0
                    },
                    {
                        "id": "d8882062f85f778f",
                        "port": 0
                    },
                    {
                        "id": "585643ee51b28af0",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1220,
                "y": 340,
                "wires": [
                    {
                        "id": "e9e25f431d6275b4",
                        "port": 0
                    },
                    {
                        "id": "6c95ac5094def319",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "05ea73d60decce22",
        "type": "subflow",
        "name": "SALMONES_A1-SEGURIDAD (2)",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1160,
                "y": 600,
                "wires": [
                    {
                        "id": "207cc1c2fa372361",
                        "port": 0
                    },
                    {
                        "id": "15058e55eb255cac",
                        "port": 0
                    },
                    {
                        "id": "ae56eec225e7893b",
                        "port": 0
                    },
                    {
                        "id": "8eec53010daee96d",
                        "port": 0
                    },
                    {
                        "id": "d283183fd5a1afde",
                        "port": 0
                    },
                    {
                        "id": "3a0b7a65f406e6f2",
                        "port": 0
                    },
                    {
                        "id": "394ff6c569061c73",
                        "port": 0
                    },
                    {
                        "id": "9c696f09133fedb9",
                        "port": 0
                    },
                    {
                        "id": "b499fdc310b2ddba",
                        "port": 0
                    },
                    {
                        "id": "4c261b382120c9a9",
                        "port": 0
                    },
                    {
                        "id": "0e5f2005e2e15701",
                        "port": 0
                    },
                    {
                        "id": "b8b1b38386fc1e08",
                        "port": 0
                    },
                    {
                        "id": "a872ec01a70da66f",
                        "port": 0
                    },
                    {
                        "id": "864c060b12c1d25b",
                        "port": 0
                    },
                    {
                        "id": "ecc2853f1d63919c",
                        "port": 0
                    },
                    {
                        "id": "2361b8c955e3e3ed",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "153316fb6b2b756a",
        "type": "subflow",
        "name": "GMT2-SEGURIDAD (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 320,
                "wires": [
                    {
                        "id": "423f0ff1b45110c0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1320,
                "y": 240,
                "wires": [
                    {
                        "id": "71d6a0ac8b348aae",
                        "port": 0
                    },
                    {
                        "id": "bf55f38c0ba7e986",
                        "port": 0
                    },
                    {
                        "id": "6bf6a2ee49b7e790",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1320,
                "y": 380,
                "wires": [
                    {
                        "id": "618b5c32a4a9e7ae",
                        "port": 0
                    },
                    {
                        "id": "1ee6e7ad95269c09",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "38e350e3eaea542d",
        "type": "subflow",
        "name": "AST2-SEGURIDAD (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 300,
                "wires": [
                    {
                        "id": "44f6b7e58503eda1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1220,
                "y": 140,
                "wires": [
                    {
                        "id": "39754b30f69dd2c7",
                        "port": 0
                    },
                    {
                        "id": "2d81024f85f9a9f3",
                        "port": 0
                    },
                    {
                        "id": "6f57d0f39abacfb5",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1220,
                "y": 340,
                "wires": [
                    {
                        "id": "0e5097d086b105d2",
                        "port": 0
                    },
                    {
                        "id": "21ed5e7aaf9ea62e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f07ffa8adc2a1039",
        "type": "subflow",
        "name": "MOWI2-SEGURIDAD (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 320,
                "wires": [
                    {
                        "id": "0f06e6fad4ba45c0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1320,
                "y": 280,
                "wires": [
                    {
                        "id": "a66a34b452e08e30",
                        "port": 0
                    },
                    {
                        "id": "3056ced952afe6fb",
                        "port": 0
                    },
                    {
                        "id": "bcdae15578006618",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1280,
                "y": 440,
                "wires": [
                    {
                        "id": "3cf3b06f789f1b98",
                        "port": 0
                    },
                    {
                        "id": "52fcc0fbcb1e288e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "9e220e3691a02102",
        "type": "subflow",
        "name": "MOWI1-SEGURIDAD (2)",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1200,
                "y": 460,
                "wires": [
                    {
                        "id": "7bb5ac9e915a145a",
                        "port": 0
                    },
                    {
                        "id": "da9a620736339ad7",
                        "port": 0
                    },
                    {
                        "id": "5bdfde647635d588",
                        "port": 0
                    },
                    {
                        "id": "eab23034631bc411",
                        "port": 0
                    },
                    {
                        "id": "6da207b66f8309a4",
                        "port": 0
                    },
                    {
                        "id": "7f0bdd43cb235c36",
                        "port": 0
                    },
                    {
                        "id": "88008e846e5718f0",
                        "port": 0
                    },
                    {
                        "id": "ce4f925ee0f0215b",
                        "port": 0
                    },
                    {
                        "id": "e2c94ef487601d23",
                        "port": 0
                    },
                    {
                        "id": "7b48b53ef98bd80f",
                        "port": 0
                    },
                    {
                        "id": "7e86372d6b3b7862",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1bb16629c0f9499d",
        "type": "subflow",
        "name": "AQUACHILE2-SEGURIDAD (3)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 320,
                "wires": [
                    {
                        "id": "c91be36c9f53df94"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1380,
                "y": 140,
                "wires": [
                    {
                        "id": "0983b109ae1d81ad",
                        "port": 0
                    },
                    {
                        "id": "2b2478724f677f24",
                        "port": 0
                    },
                    {
                        "id": "39cfe5cd48f3ae0c",
                        "port": 0
                    },
                    {
                        "id": "e548a42239dcbb38",
                        "port": 0
                    },
                    {
                        "id": "6696c8eb01101e73",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1140,
                "y": 560,
                "wires": [
                    {
                        "id": "05d4c81b20dabc4f",
                        "port": 0
                    },
                    {
                        "id": "a4cc9ac5c9e56622",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0640bd3b67d5f3d7",
        "type": "subflow",
        "name": "AQUACHILE1-SEGURIDAD (3)",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1100,
                "y": 1840,
                "wires": [
                    {
                        "id": "735b0913b16129ec",
                        "port": 0
                    },
                    {
                        "id": "d4e17d3727183937",
                        "port": 0
                    },
                    {
                        "id": "a6875d91a5419644",
                        "port": 0
                    },
                    {
                        "id": "faabca561a16305e",
                        "port": 0
                    },
                    {
                        "id": "b37f9814cc01aa19",
                        "port": 0
                    },
                    {
                        "id": "312361a6cd5c16be",
                        "port": 0
                    },
                    {
                        "id": "d7113fdb9b513250",
                        "port": 0
                    },
                    {
                        "id": "9e373a43f113e59d",
                        "port": 0
                    },
                    {
                        "id": "568dde4a5125973f",
                        "port": 0
                    },
                    {
                        "id": "06b267813843b5c9",
                        "port": 0
                    },
                    {
                        "id": "5a09e72d5cba68a1",
                        "port": 0
                    },
                    {
                        "id": "33e3e40f6b73855f",
                        "port": 0
                    },
                    {
                        "id": "a43ec37a35174d18",
                        "port": 0
                    },
                    {
                        "id": "f30e97a89cb01123",
                        "port": 0
                    },
                    {
                        "id": "e4c8be0598e89117",
                        "port": 0
                    },
                    {
                        "id": "a189fbfe74168d14",
                        "port": 0
                    },
                    {
                        "id": "cde0590a0ac3df17",
                        "port": 0
                    },
                    {
                        "id": "31c0349739c11f06",
                        "port": 0
                    },
                    {
                        "id": "34f5d3d12d5d02b3",
                        "port": 0
                    },
                    {
                        "id": "99f005d77e4146de",
                        "port": 0
                    },
                    {
                        "id": "b5e86fbd1c73e8cf",
                        "port": 0
                    },
                    {
                        "id": "2564ebee7a2ba77f",
                        "port": 0
                    },
                    {
                        "id": "ef1ee834942d4927",
                        "port": 0
                    },
                    {
                        "id": "3ec9e15513d88935",
                        "port": 0
                    },
                    {
                        "id": "73d7bd82c957e763",
                        "port": 0
                    },
                    {
                        "id": "df6b59e4479853a9",
                        "port": 0
                    },
                    {
                        "id": "d3d7a3d9186d42e0",
                        "port": 0
                    },
                    {
                        "id": "736d57c14134c993",
                        "port": 0
                    },
                    {
                        "id": "77a75b794b70d82b",
                        "port": 0
                    },
                    {
                        "id": "4373d026b60e7907",
                        "port": 0
                    },
                    {
                        "id": "8ef46ded230e75b6",
                        "port": 0
                    },
                    {
                        "id": "07599d4f82694fe5",
                        "port": 0
                    },
                    {
                        "id": "436de84da27f456c",
                        "port": 0
                    },
                    {
                        "id": "9cbdc382f5b28ce4",
                        "port": 0
                    },
                    {
                        "id": "027ff8115225ceb0",
                        "port": 0
                    },
                    {
                        "id": "46a8127f73fc16b3",
                        "port": 0
                    },
                    {
                        "id": "63fd41165e44f7e2",
                        "port": 0
                    },
                    {
                        "id": "9ea84322d143ba33",
                        "port": 0
                    },
                    {
                        "id": "379b942da7088eff",
                        "port": 0
                    },
                    {
                        "id": "7d25cdfad5d62a4e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f97af136a24da3eb",
        "type": "subflow",
        "name": "SALMONES_A2-SEGURIDAD (3)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 300,
                "wires": [
                    {
                        "id": "8cf717787010b592"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1440,
                "y": 120,
                "wires": [
                    {
                        "id": "25e65b5d421bfe25",
                        "port": 0
                    },
                    {
                        "id": "1005bb1e946d69f8",
                        "port": 0
                    },
                    {
                        "id": "adaae2bdba726caa",
                        "port": 0
                    },
                    {
                        "id": "15658010311f856c",
                        "port": 0
                    },
                    {
                        "id": "47aad2381b65cec4",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1220,
                "y": 340,
                "wires": [
                    {
                        "id": "9ebac280569d32fd",
                        "port": 0
                    },
                    {
                        "id": "ef762981d1f6cb14",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#87A980"
    },
    {
        "id": "a2593de2bc0b6b95",
        "type": "subflow",
        "name": "SALMONES_A1-SEGURIDAD (3)",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1160,
                "y": 600,
                "wires": [
                    {
                        "id": "7dfdbafdd1078482",
                        "port": 0
                    },
                    {
                        "id": "de91a8676c534839",
                        "port": 0
                    },
                    {
                        "id": "d422653e21d90423",
                        "port": 0
                    },
                    {
                        "id": "b528a0dae8304a2f",
                        "port": 0
                    },
                    {
                        "id": "53fc40c063dcb14a",
                        "port": 0
                    },
                    {
                        "id": "3ccd218c7c3ef610",
                        "port": 0
                    },
                    {
                        "id": "aa7ae3f97f1245da",
                        "port": 0
                    },
                    {
                        "id": "a5fed14bd26f2c0d",
                        "port": 0
                    },
                    {
                        "id": "b39711c8f83349da",
                        "port": 0
                    },
                    {
                        "id": "1419efe24797cdee",
                        "port": 0
                    },
                    {
                        "id": "ea2d206ef78b8a6b",
                        "port": 0
                    },
                    {
                        "id": "36b3d442b7f6202a",
                        "port": 0
                    },
                    {
                        "id": "9f5509b2a3b9bbfa",
                        "port": 0
                    },
                    {
                        "id": "98de5bc63adc556b",
                        "port": 0
                    },
                    {
                        "id": "3ad22be497846dbb",
                        "port": 0
                    },
                    {
                        "id": "fa08a8423e917141",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "d9169b1be4365f62",
        "type": "subflow",
        "name": "GMT2-SEGURIDAD (3)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 320,
                "wires": [
                    {
                        "id": "32f70377dbedb5bd"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1320,
                "y": 240,
                "wires": [
                    {
                        "id": "3f8505c9ae252d91",
                        "port": 0
                    },
                    {
                        "id": "7217d7f61222499b",
                        "port": 0
                    },
                    {
                        "id": "8e54329415e76fb8",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1320,
                "y": 380,
                "wires": [
                    {
                        "id": "ca050111dd6c9155",
                        "port": 0
                    },
                    {
                        "id": "8700a03599ceeb3c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b856591a365fb64c",
        "type": "subflow",
        "name": "AST2-SEGURIDAD (3)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 300,
                "wires": [
                    {
                        "id": "e4800c250caa7f96"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1220,
                "y": 140,
                "wires": [
                    {
                        "id": "8296221ed2da1075",
                        "port": 0
                    },
                    {
                        "id": "537b98603096716f",
                        "port": 0
                    },
                    {
                        "id": "83b8725ed08b2b24",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1220,
                "y": 340,
                "wires": [
                    {
                        "id": "ec3256b58741f20e",
                        "port": 0
                    },
                    {
                        "id": "0df2ae9f5e59b4f2",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "9c7e0c66e2ba9e8c",
        "type": "subflow",
        "name": "MOWI2-SEGURIDAD (3)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 320,
                "wires": [
                    {
                        "id": "132f1a57f4c0cfb7"
                    },
                    {
                        "id": "bdd29d70679c7423"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1320,
                "y": 160,
                "wires": [
                    {
                        "id": "ef35fec29158d827",
                        "port": 0
                    },
                    {
                        "id": "1221861055fd5997",
                        "port": 0
                    },
                    {
                        "id": "dfaa87768f99507d",
                        "port": 0
                    },
                    {
                        "id": "eb6fe6e11ec7f5ed",
                        "port": 0
                    },
                    {
                        "id": "6d9b5c888b23f6b6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1280,
                "y": 440,
                "wires": [
                    {
                        "id": "9d331c3a724eec53",
                        "port": 0
                    },
                    {
                        "id": "a94ca7d99dde3577",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#3FADB5"
    },
    {
        "id": "d66f3889b2818ed0",
        "type": "subflow",
        "name": "MOWI1-SEGURIDAD (3)",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1200,
                "y": 460,
                "wires": [
                    {
                        "id": "6c6192a96da51443",
                        "port": 0
                    },
                    {
                        "id": "ece5b32a5a26623c",
                        "port": 0
                    },
                    {
                        "id": "286c866ab1056fdb",
                        "port": 0
                    },
                    {
                        "id": "f8a80dfa23709c9a",
                        "port": 0
                    },
                    {
                        "id": "9a0c738c4a9894cc",
                        "port": 0
                    },
                    {
                        "id": "b302954274eddd7f",
                        "port": 0
                    },
                    {
                        "id": "394d9b4fac4ba426",
                        "port": 0
                    },
                    {
                        "id": "0ce913160e45f8d0",
                        "port": 0
                    },
                    {
                        "id": "4a81a5ae85138a93",
                        "port": 0
                    },
                    {
                        "id": "3c80bb37cac90da0",
                        "port": 0
                    },
                    {
                        "id": "774dc2920045e43a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "7cdcd7390ec48dd3",
        "type": "mongodb-config",
        "name": "mowi_seguridad",
        "host": "127.0.0.1",
        "port": "27017",
        "database": "wisensor_mowi",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "9f945835b1447245",
        "type": "mqtt-broker",
        "name": "MQTT_SEGURIDAD",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "cdca32ccd5479dae",
        "type": "mongodb-config",
        "name": "wisensor_ast",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_ast",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "aea86e27262eaf28",
        "type": "mongodb-config",
        "name": "wisensor_gmt",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_gmt",
        "collections": [
            {
                "name": "clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "energia",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "biomasa",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "sensores-iot",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "pasadores",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "alertas_clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_zona",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "1551226ba6a8882c",
        "type": "mqtt-broker",
        "name": "MQTT_SEGURIDAD",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "d64cdf1766584c60",
        "type": "mongodb-config",
        "name": "aquachile_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_aquachile",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "1e80dd705822c452",
        "type": "mongodb-config",
        "name": "salmonesaustral_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_salmonesaustral",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "a8d89e3e914c9b81",
        "type": "mongodb2",
        "uri": "mongodb://10.10.7.41:27017/wisensor_gmt",
        "name": "Zona gmt",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "1e79621dc82ae388",
        "type": "mongodb2",
        "uri": "mongodb://10.10.7.41:27017/wisensor_ast",
        "name": "Zona ast",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "c94a89c8f3025b77",
        "type": "mongodb2",
        "uri": "mongodb://10.10.7.41:27017/wisensor_salmonesaustral",
        "name": "Zona SalmonesAustral",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "8011183b04709ce1",
        "type": "mongodb2",
        "uri": "mongodb://10.10.7.41:27017/wisensor_mowi",
        "name": "zona mowi",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "badfc10f611b08ef",
        "type": "mongodb2",
        "uri": "mongodb://10.10.7.41:27017/wisensor_aquachile",
        "name": "zona AquaChile",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "9a637bc47da08485",
        "type": "mongodb-config",
        "name": "wisensor_ast",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_ast",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "8adbc572bc30a6cb",
        "type": "mongodb-config",
        "name": "aquachile_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_aquachile",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "bc071b1aac74a34c",
        "type": "mongodb-config",
        "name": "salmonesaustral_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_salmonesaustral",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "b5587ba37f39ce74",
        "type": "mongodb-config",
        "name": "salmonesaustral_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_salmonesaustral",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "397a5e9afba07f12",
        "type": "mongodb-config",
        "name": "wisensor_ast",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_ast",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "1308372fb9408059",
        "type": "mongodb-config",
        "name": "aquachile_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_aquachile",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "7e9b2628b33bca20",
        "type": "mongodb-config",
        "name": "salmonesaustral_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_salmonesaustral",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "90e0dc7690ddd45f",
        "type": "mongodb-config",
        "name": "wisensor_ast",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_ast",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_movil",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "5f9bbe83046a3fce",
        "type": "mongodb-config",
        "name": "aquachile_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_aquachile",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_movil",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "9addc59c88d87879",
        "type": "mongodb-config",
        "name": "salmonesaustral_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_salmonesaustral",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_movil",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "a8a0986ad141db62",
        "type": "mongodb-config",
        "name": "aquachile_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_aquachile",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_movil",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "0ccd2bd305ce2ded",
        "type": "mongodb-config",
        "name": "salmonesaustral_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_salmonesaustral",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_movil",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "83755d55243443a2",
        "type": "mongodb-config",
        "name": "wisensor_ast",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_ast",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_movil",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "71ca3921bbd01887",
        "type": "mongodb-config",
        "name": "aquachile_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_aquachile",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_movil",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "ca9cd28b2860ccaa",
        "type": "mongodb-config",
        "name": "salmonesaustral_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_salmonesaustral",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_movil",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "a38213bec911688e",
        "type": "mongodb-config",
        "name": "wisensor_ast",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_ast",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_movil",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "87df758bfb208a90",
        "type": "mongodb3",
        "z": "1bb16629c0f9499d",
        "uri": "mongodb://10.10.8.60:27017/",
        "name": "backup",
        "options": "seguridad",
        "parallelism": "-1"
    },
    {
        "id": "1e274b74f8a99371",
        "type": "mongodb-config",
        "z": "1bb16629c0f9499d",
        "name": "aquachilebk_seguridad",
        "host": "10.10.8.60",
        "port": "27017",
        "database": "aquachile",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "49886df584836a48",
        "type": "mongodb-config",
        "name": "aquachile_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_aquachile",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_movil",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "74e5c9ce9a3a5ca7",
        "type": "mongodb-config",
        "z": "f97af136a24da3eb",
        "name": "salmonesaustralbk_seguridad",
        "host": "10.10.8.60",
        "port": "27017",
        "database": "salmonesaustral",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "7f4abdf7264f2705",
        "type": "mongodb-config",
        "name": "salmonesaustral_seguridad",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_salmonesaustral",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_movil",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "b8acc1fb86b8949f",
        "type": "mongodb",
        "z": "d9169b1be4365f62",
        "hostname": "10.10.8.60",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "seguridad",
        "name": ""
    },
    {
        "id": "569de601959fb505",
        "type": "mongodb-config",
        "name": "wisensor_ast",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_ast",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_movil",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "5b290119f7084a91",
        "type": "mongodb3",
        "z": "9c7e0c66e2ba9e8c",
        "uri": "mongodb://10.10.8.60:27017/",
        "name": "backup",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "97a6ac313177f8a4",
        "type": "mongodb-config",
        "z": "9c7e0c66e2ba9e8c",
        "name": "mowibk_seguridad",
        "host": "10.10.8.60",
        "port": "27017",
        "database": "mowi",
        "collections": [
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "da8904e58ce9d727",
        "type": "mongodb4-client",
        "z": "9c7e0c66e2ba9e8c",
        "name": "",
        "protocol": "mongodb",
        "hostname": "10.10.8.60",
        "port": "27017",
        "dbName": "seguridad",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "510b77c245ec4e11",
        "type": "change",
        "z": "8a778912adb6cc84",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 320,
        "wires": [
            [
                "bbf21ee888c973fc"
            ]
        ]
    },
    {
        "id": "bbf21ee888c973fc",
        "type": "switch",
        "z": "8a778912adb6cc84",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 320,
        "wires": [
            [
                "47dac0f18d69cbfa",
                "abf7637f394b8f36"
            ],
            [
                "47dac0f18d69cbfa",
                "56314581fd4c1e08",
                "5ac55edc4ee318ea",
                "abf7637f394b8f36",
                "f261f8f2067bdf8c"
            ]
        ]
    },
    {
        "id": "56314581fd4c1e08",
        "type": "mongodb-collection",
        "z": "8a778912adb6cc84",
        "name": "insert_seguridad",
        "config": "a8a0986ad141db62",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 990,
        "y": 200,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "f9cb3ab2dd93d94f",
        "type": "mongodb-collection",
        "z": "8a778912adb6cc84",
        "name": "findDB",
        "config": "a8a0986ad141db62",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 130,
        "y": 320,
        "wires": [
            [
                "b68d4ea30d3be818"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "47dac0f18d69cbfa",
        "type": "mongodb-collection",
        "z": "8a778912adb6cc84",
        "name": "insert_seguridad_detalle",
        "config": "a8a0986ad141db62",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 970,
        "y": 160,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "b68d4ea30d3be818",
        "type": "function",
        "z": "8a778912adb6cc84",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 320,
        "wires": [
            [
                "7bb7e1750bd33fe3"
            ]
        ]
    },
    {
        "id": "7bb7e1750bd33fe3",
        "type": "switch",
        "z": "8a778912adb6cc84",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 320,
        "wires": [
            [
                "510b77c245ec4e11"
            ],
            [
                "510b77c245ec4e11"
            ]
        ]
    },
    {
        "id": "abf7637f394b8f36",
        "type": "change",
        "z": "8a778912adb6cc84",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "f261f8f2067bdf8c",
        "type": "mongodb-collection",
        "z": "8a778912adb6cc84",
        "name": "insert_seguridad_movil",
        "config": "a8a0986ad141db62",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 970,
        "y": 240,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "5ac55edc4ee318ea",
        "type": "change",
        "z": "8a778912adb6cc84",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "cf97ea6e251c3e6e",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/amparogrande",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "fec94bce8e41ab87"
            ]
        ]
    },
    {
        "id": "fec94bce8e41ab87",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 80,
        "wires": [
            [
                "066e86235d1f0e76"
            ]
        ]
    },
    {
        "id": "500ab2549cfb46ed",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "066e86235d1f0e76",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Amparo Grande",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "118",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 80,
        "wires": [
            [
                "9c96dab1c2f0e8f1"
            ]
        ]
    },
    {
        "id": "9c96dab1c2f0e8f1",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'abf76d76-ca23-4375-442f-1acf321ccb10') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '375b49b7-4590-4179-7636-5d04ad56541e') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '30e955bf-3dad-482b-63c3-1a78e1f6ca99') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'ab3ee495-3bb7-45f7-5fcd-c09bdf7dfca1') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil,\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 80,
        "wires": [
            [
                "500ab2549cfb46ed"
            ]
        ]
    },
    {
        "id": "e3ca99c949de53fd",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "AMPAROGRANDE🐟 🟢",
        "info": "",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "73723ec5bcc9d1d4",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/angostura",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 160,
        "wires": [
            [
                "fcb0fb80bb6ba095"
            ]
        ]
    },
    {
        "id": "fcb0fb80bb6ba095",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 160,
        "wires": [
            [
                "2816e58520250483"
            ]
        ]
    },
    {
        "id": "d1b3ad73219a3c24",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "2816e58520250483",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Angostura",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "119",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 160,
        "wires": [
            [
                "6a8f91dceabfbbcb"
            ]
        ]
    },
    {
        "id": "6a8f91dceabfbbcb",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'd6fd449c-5f8d-4d86-6c71-946af104099f') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '72b15177-6a01-48c0-69ad-921f55454151') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '4f39df0d-c1d2-40b7-7781-5f21cc4998c7') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '50d50de5-0a71-4753-7284-95e70ee5aa06') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 160,
        "wires": [
            [
                "d1b3ad73219a3c24"
            ]
        ]
    },
    {
        "id": "b5697b6cdf79ddc5",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "ANGOSTURA 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 120,
        "wires": []
    },
    {
        "id": "2e25feae97b50ad1",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/aysen4",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 240,
        "wires": [
            [
                "cd2bdb204b1e4e7a"
            ]
        ]
    },
    {
        "id": "cd2bdb204b1e4e7a",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 240,
        "wires": [
            [
                "a2a052b3fd387844"
            ]
        ]
    },
    {
        "id": "96698966b89c79fb",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "a2a052b3fd387844",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Aysen 4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "120",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 240,
        "wires": [
            [
                "4312d97b07d8cc24"
            ]
        ]
    },
    {
        "id": "4312d97b07d8cc24",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '5df3c5ca-15eb-47ea-671e-6140d106f5a7') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '3c9e92ae-70ef-4aad-4b40-58cde9bec7a7') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '77e131de-8d26-4c8d-7c01-ef1ae3f3ac30') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'af3a2f73-528e-4b91-5c98-6a5b5b4d32ee') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 240,
        "wires": [
            [
                "96698966b89c79fb"
            ]
        ]
    },
    {
        "id": "643082634e82e032",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "AYSEN 4 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 200,
        "wires": []
    },
    {
        "id": "69224a9a277ef85c",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/brazoguardramiro",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "113fd990dda2f862"
            ]
        ]
    },
    {
        "id": "113fd990dda2f862",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 320,
        "wires": [
            [
                "b4ea97cc45c05afa"
            ]
        ]
    },
    {
        "id": "48e203b988045090",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "b4ea97cc45c05afa",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Brazo Guardramiro",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "121",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 320,
        "wires": [
            [
                "61864f11e8df18cf"
            ]
        ]
    },
    {
        "id": "61864f11e8df18cf",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '56205a75-6858-472e-7601-627ec18e7b83') {\n            nombreModuloZona = '100';\n        }else if (currentItem.zones[0] === '17773584-6548-4b87-7fc8-4c0cf807e391') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '55493518-c15c-4baa-5374-89ebff3b5383') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === '2ab030cf-91af-4ca1-57c4-4ae3d1778ff7') {\n            nombreModuloZona = 'EXTERIOR100';\n        }else if (currentItem.zones[0] === '3c9e92ae-70ef-4aad-4b40-58cde9bec7a7') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === '04dbfc8a-ff43-4a8b-72dd-d9e806d2844c') {\n            nombreModuloZona = 'EXTERIOR200';\n        } else if (currentItem.zones[0] === '905e5a0d-f566-427d-63a8-520c9d827b5a') {\n            nombreModuloZona = 'ACTIVE_TRACKING100';\n        } else if (currentItem.zones[0] === '69b95b43-bb84-4019-6596-9c1b25a2757d') {\n            nombreModuloZona = 'ACTIVE_TRACKING200';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING100' o 'ACTIVE_TRACKING200'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING100' && nombreModuloZona !== 'ACTIVE_TRACKING200') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100'\n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || ''\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100'\n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100'\n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 320,
        "wires": [
            [
                "48e203b988045090"
            ]
        ]
    },
    {
        "id": "28d2ebb8bd1a36e9",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "BRAZO GUARDRAMIRO 🐟 🟢",
        "info": "",
        "x": 170,
        "y": 280,
        "wires": []
    },
    {
        "id": "52e8006aba210de2",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/brazohojeda",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "78c270750a054d24"
            ]
        ]
    },
    {
        "id": "78c270750a054d24",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 400,
        "wires": [
            [
                "4f7025641efa87aa"
            ]
        ]
    },
    {
        "id": "8540255729f22585",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "4f7025641efa87aa",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Brazo Hojeda",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "122",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 400,
        "wires": [
            [
                "0b93cd92ceaf9a11"
            ]
        ]
    },
    {
        "id": "0b93cd92ceaf9a11",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'b116b092-70e9-4fac-6d93-a460f9a215f7') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'e08f3cde-c985-4864-67be-63574509c569') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '2f80be27-755a-44a4-4340-b75d62f80b00') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '9061fc6e-0b49-4185-6388-18051d93eabc') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 400,
        "wires": [
            [
                "8540255729f22585"
            ]
        ]
    },
    {
        "id": "fbfd5ea9b14f5235",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "BRAZO HOJEDA 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 360,
        "wires": []
    },
    {
        "id": "5bad66a59738fdca",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/brazohojeda2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 480,
        "wires": [
            [
                "ad47e282cedf3bd0"
            ]
        ]
    },
    {
        "id": "ad47e282cedf3bd0",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 480,
        "wires": [
            [
                "0ece052783a770b2"
            ]
        ]
    },
    {
        "id": "38addcc6fa6b0e61",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "0ece052783a770b2",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Brazo Hojeda 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "123",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 480,
        "wires": [
            [
                "54ee2bcc1c4ac0b2"
            ]
        ]
    },
    {
        "id": "54ee2bcc1c4ac0b2",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'f2c061fc-7780-4229-41ef-3a1fa11f53cb') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '91fef178-7b26-4bb7-5e47-0ffbe0934987') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'f9059498-ce8a-49dd-58dd-fe2e0ace3fab') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 480,
        "wires": [
            [
                "38addcc6fa6b0e61"
            ]
        ]
    },
    {
        "id": "aed2e8bb926aa4ae",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "BRAZO HOJEDA 2 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 440,
        "wires": []
    },
    {
        "id": "80f9c3cb77bd3c03",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/caceres",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 560,
        "wires": [
            [
                "cd014d91ae29690e"
            ]
        ]
    },
    {
        "id": "cd014d91ae29690e",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 560,
        "wires": [
            [
                "57ad472511d1a458"
            ]
        ]
    },
    {
        "id": "e73d44e9e480c344",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "57ad472511d1a458",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Caceres",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "124",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 560,
        "wires": [
            [
                "48625463832790b9"
            ]
        ]
    },
    {
        "id": "48625463832790b9",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'ac4a5b41-2a1c-4a47-65d5-a0781e66416f') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '1de453f2-0ebb-4230-796c-4b637ed70e8b') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '3cc88abe-5031-4799-4aee-3ff56c3c2260') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '4767e03a-9866-4483-5787-a02998aaedc2') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 560,
        "wires": [
            [
                "e73d44e9e480c344"
            ]
        ]
    },
    {
        "id": "a2877ed4028a60e4",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "CACERES 🐟 🔴",
        "info": "",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "28b965ec106517cc",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/canalad6",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 640,
        "wires": [
            [
                "1c9baec1095eca4b"
            ]
        ]
    },
    {
        "id": "1c9baec1095eca4b",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 640,
        "wires": [
            [
                "a11a3e3f61bf491f"
            ]
        ]
    },
    {
        "id": "633436af59996991",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "a11a3e3f61bf491f",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Canalad 6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "125",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 640,
        "wires": [
            [
                "4b2599ba93e8f0ab"
            ]
        ]
    },
    {
        "id": "4b2599ba93e8f0ab",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '85e04d09-ff07-4239-43ba-e468c1770f6d') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'aa23ea56-01b3-4049-4e29-e4066c0dd5b2') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '12cad551-a9e5-46f5-4313-291356539a59') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '2fed287c-55e4-4ef6-4654-fb0a9694f1e6') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 640,
        "wires": [
            [
                "633436af59996991"
            ]
        ]
    },
    {
        "id": "cee5858dbe1b630f",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "CANALAD 6 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 600,
        "wires": []
    },
    {
        "id": "757c2aba2d7a6daf",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/canalpereznorte",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "b7769c4c02016a0b"
            ]
        ]
    },
    {
        "id": "b7769c4c02016a0b",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 720,
        "wires": [
            [
                "63dde7e13de08e56"
            ]
        ]
    },
    {
        "id": "d19afc334977e8ad",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "63dde7e13de08e56",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Canal Perez Norte",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "126",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 720,
        "wires": [
            [
                "95dcb50f76ad6f3f"
            ]
        ]
    },
    {
        "id": "95dcb50f76ad6f3f",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '30fa9ca3-ea8f-4db0-70cd-2aaccd2ea0ac') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '3bfe21da-dd0a-44b1-719f-8e1beaba1c63') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'ec251a7a-04ea-49e0-6f73-572fcb06f382') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '9b80128f-7d2c-4f71-43ac-e07755549c38') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 720,
        "wires": [
            [
                "d19afc334977e8ad"
            ]
        ]
    },
    {
        "id": "a36340a29a7512df",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "CANAL PEREZ NORTE 🐟 🟢",
        "info": "",
        "x": 170,
        "y": 680,
        "wires": []
    },
    {
        "id": "a91aa41d3f1435b7",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/cascada",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 800,
        "wires": [
            [
                "b92662876ff3bcf0"
            ]
        ]
    },
    {
        "id": "b92662876ff3bcf0",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 800,
        "wires": [
            [
                "b7086229b82f5c28"
            ]
        ]
    },
    {
        "id": "8cefd55562458a7c",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "b7086229b82f5c28",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Cascada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "127",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 800,
        "wires": [
            [
                "a13984ae5ed35d9f"
            ]
        ]
    },
    {
        "id": "a13984ae5ed35d9f",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '96bf214d-0740-4a6d-7022-cbf0ffd9926a') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'f374ff18-d4f2-4996-578a-8accfbab932d') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'f0c6dd98-c1ab-4c54-782e-4d1660211cb4') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '0e72211e-fd79-42ea-5bb2-6afc7b82ae30') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 800,
        "wires": [
            [
                "8cefd55562458a7c"
            ]
        ]
    },
    {
        "id": "241ead74f7e4f0b1",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "CASCADA 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 760,
        "wires": []
    },
    {
        "id": "8d123e7cd50749dd",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/concoto",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 880,
        "wires": [
            [
                "0c4e91084c7d55bd"
            ]
        ]
    },
    {
        "id": "0c4e91084c7d55bd",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 880,
        "wires": [
            [
                "4b373b140338fa46"
            ]
        ]
    },
    {
        "id": "59bf1d19f2d3d046",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "4b373b140338fa46",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Concoto",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "128",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 880,
        "wires": [
            [
                "9e92972f5d8a494c"
            ]
        ]
    },
    {
        "id": "9e92972f5d8a494c",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '28758ea6-fb87-4bc1-4ab0-84632cde4b76') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '31214ae2-24c7-4c6a-68fd-f7e8931c4d07') {\n            nombreModuloZona = '200';\n        }else if (currentItem.zones[0] === '7d2328ac-10fa-497c-6d2a-5a065e239243') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '08ea1613-14c6-4a05-54f1-a653e522af58') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '46ad6750-1e40-458f-418b-e30000d7c6eb') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 880,
        "wires": [
            [
                "59bf1d19f2d3d046"
            ]
        ]
    },
    {
        "id": "65c197099c8b486c",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "CONCOTO 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 840,
        "wires": []
    },
    {
        "id": "69dcd0d38d5638c5",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/elefante",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 960,
        "wires": [
            [
                "f3b47fcc18624bdb"
            ]
        ]
    },
    {
        "id": "f3b47fcc18624bdb",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 960,
        "wires": [
            [
                "47d2f898e499a312"
            ]
        ]
    },
    {
        "id": "cb625baadfc926ea",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "47d2f898e499a312",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Elefante",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "129",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 960,
        "wires": [
            [
                "05be84fee4a6147d"
            ]
        ]
    },
    {
        "id": "05be84fee4a6147d",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '23cdfdad-c460-4973-504a-de3b911308f8') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '2a0e3b9e-7e88-48dc-72b2-1859a7ee3325') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'bd2364a8-ba4d-4348-748f-7857d49e8791') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '472da4a1-d244-413c-7707-a83375aa760d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        \n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 960,
        "wires": [
            [
                "cb625baadfc926ea"
            ]
        ]
    },
    {
        "id": "f152a62cb97854b9",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "ELEFANTE 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 920,
        "wires": []
    },
    {
        "id": "eba2a4b9511425c8",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/esterofrio",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1040,
        "wires": [
            [
                "103d1b9e5304bfa6"
            ]
        ]
    },
    {
        "id": "103d1b9e5304bfa6",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1040,
        "wires": [
            [
                "5f1b18061bec9f7c"
            ]
        ]
    },
    {
        "id": "dd923ad3bf5bd189",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "5f1b18061bec9f7c",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Estero Frio",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "130",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1040,
        "wires": [
            [
                "0c596b79c71101bd"
            ]
        ]
    },
    {
        "id": "0c596b79c71101bd",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4c4adc9f-1abe-42c4-6726-dbcd504398e4') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '0898af5c-1bfe-4f47-54af-f59682d6bacc') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'db76287c-f3c5-4130-4c8f-0e0aeb33898b') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '15ef3e6b-a8f1-4174-5b57-b96e6cd6574e') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1040,
        "wires": [
            [
                "dd923ad3bf5bd189"
            ]
        ]
    },
    {
        "id": "0e3a5376d47139ba",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "ESTERO FRIO 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 1000,
        "wires": []
    },
    {
        "id": "930d102e96c312e7",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/fislaswagner",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1120,
        "wires": [
            [
                "1b56d05fe7ee1365"
            ]
        ]
    },
    {
        "id": "1b56d05fe7ee1365",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1120,
        "wires": [
            [
                "52f933b97f2c5ca4"
            ]
        ]
    },
    {
        "id": "e64915bab1c8cb38",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "52f933b97f2c5ca4",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Frente Islas Wagner",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "131",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1120,
        "wires": [
            [
                "59dea87fed14a087"
            ]
        ]
    },
    {
        "id": "59dea87fed14a087",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '93d6f88d-f7be-4559-6a16-9c7c75d99551') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'a6d0c3b9-2995-4b11-6e87-60b06e429012') {\n            nombreModuloZona = '200';\n        }else if (currentItem.zones[0] === 'f1e50c10-4563-455d-68ce-e1e1235634c7') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'e8d00714-b675-4384-7e90-458a47541125') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'fe794929-16d4-4059-70f7-b17454e7c6a2') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1120,
        "wires": [
            [
                "e64915bab1c8cb38"
            ]
        ]
    },
    {
        "id": "1ce50f1e6e703ce6",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "FRENTE ISLAS WAGNER 🐟 🟢",
        "info": "",
        "x": 180,
        "y": 1080,
        "wires": []
    },
    {
        "id": "226820ef7bb765a9",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/graffer",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1200,
        "wires": [
            [
                "c447554987bd38f3"
            ]
        ]
    },
    {
        "id": "c447554987bd38f3",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1200,
        "wires": [
            [
                "26e572d182f458a3"
            ]
        ]
    },
    {
        "id": "7df45472d0a54de0",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "26e572d182f458a3",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Graffer",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "132",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1200,
        "wires": [
            [
                "64a7f8e2e225200f"
            ]
        ]
    },
    {
        "id": "64a7f8e2e225200f",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'bdb5f803-1d2e-4ec2-6e7f-c922b0ee5a06') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '32a10fa3-15b1-4f58-45d5-55e7c9dc05f9') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'a709d5bf-ff32-4a83-7fe6-2a32114d8991') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'd020ee3f-bb39-47cf-7414-dec973167bab') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1200,
        "wires": [
            [
                "7df45472d0a54de0"
            ]
        ]
    },
    {
        "id": "10db8aad30452847",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "GRAFFER 🐟 🔴",
        "info": "",
        "x": 130,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f0f158b3df0a0e57",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/herradura",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1280,
        "wires": [
            [
                "c82f4106e3831165"
            ]
        ]
    },
    {
        "id": "c82f4106e3831165",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1280,
        "wires": [
            [
                "1f477722ec36743d"
            ]
        ]
    },
    {
        "id": "27351f1bb1e982d4",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "1f477722ec36743d",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Herradura",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "133",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1280,
        "wires": [
            [
                "601e0c12c9ef450d"
            ]
        ]
    },
    {
        "id": "601e0c12c9ef450d",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '436e4287-daa8-4610-7cb7-a9b7d0261e9b') {\n            nombreModuloZona = '100';\n        }else if (currentItem.zones[0] === '7497e4a7-5d42-4630-60b2-719afef2eab0') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '5d0d4ea8-5f20-4072-53cf-5c94eabe8405') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === '85126ed3-bfee-45a5-6b44-dd5b0dc06b02') {\n            nombreModuloZona = 'EXTERIOR100';\n        } else if (currentItem.zones[0] === '28c06adb-5339-4476-61dd-b14392936c40') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === 'd3abe1cd-530b-451d-7850-c9981fe08d2d') {\n            nombreModuloZona = 'EXTERIOR200';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n            || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n            || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n            || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1280,
        "wires": [
            [
                "27351f1bb1e982d4"
            ]
        ]
    },
    {
        "id": "12cc28a699fd1185",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "HERRADURA 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 1240,
        "wires": []
    },
    {
        "id": "f66a939b03b42eb2",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/huelmo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1360,
        "wires": [
            [
                "e12bf9ac33629f1c"
            ]
        ]
    },
    {
        "id": "e12bf9ac33629f1c",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1360,
        "wires": [
            [
                "e2386a3ba6ef4db0"
            ]
        ]
    },
    {
        "id": "64ad99098241077c",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "e2386a3ba6ef4db0",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Huelmo",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "134",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1360,
        "wires": [
            [
                "4243770297f52141"
            ]
        ]
    },
    {
        "id": "4243770297f52141",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '2aab0bba-13e3-4414-71a2-6d9c02e3c4ce') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '52bee7c6-02d2-4d82-5455-f42d20adc80b') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '1fe1688e-a99e-416a-62a1-a5d359d4af42') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '32e60a2d-6501-4776-7b9d-e1934f400362') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'd8b0f076-70f1-49a4-452f-2eead1c9911b') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {       \n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,    \n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1360,
        "wires": [
            [
                "64ad99098241077c"
            ]
        ]
    },
    {
        "id": "8495da3df6709d71",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "HUELMO 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1320,
        "wires": []
    },
    {
        "id": "cdb3ae9a60bfde40",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/huenquillahue",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1440,
        "wires": [
            [
                "a4e69df00f4ac1c0"
            ]
        ]
    },
    {
        "id": "a4e69df00f4ac1c0",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1440,
        "wires": [
            [
                "6ba965d051575952"
            ]
        ]
    },
    {
        "id": "87105ad144aba5b5",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "6ba965d051575952",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Huenquillahue",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "135",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1440,
        "wires": [
            [
                "9120c8e1d14a72fa"
            ]
        ]
    },
    {
        "id": "9120c8e1d14a72fa",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '9525d165-b6fb-4f68-6a43-fbb293ca13e5') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '13e101ee-6ab5-4baa-4915-735db0bef481') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === 'd371c139-22d5-4e15-4489-ea87aa8f8379') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'd5ab2a19-d045-430c-4f72-df0984044908') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '2a4ef2ee-c884-4ce6-4654-0e2476f882a8') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1440,
        "wires": [
            [
                "87105ad144aba5b5"
            ]
        ]
    },
    {
        "id": "7e3a51eaa83a63cb",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "HUENQUILLAHUE 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 1400,
        "wires": []
    },
    {
        "id": "7669ad0291c38f8c",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/islasanchezaqua",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1520,
        "wires": [
            [
                "61a737d041717fe5"
            ]
        ]
    },
    {
        "id": "61a737d041717fe5",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1520,
        "wires": [
            [
                "81b1d35d5b4fc588"
            ]
        ]
    },
    {
        "id": "02b4a3a32cd0fa33",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "81b1d35d5b4fc588",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Isla Sanchez",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "136",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1520,
        "wires": [
            [
                "08aa8c3c49aed386"
            ]
        ]
    },
    {
        "id": "08aa8c3c49aed386",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'dc8f384d-8c27-4c14-5ccb-416c7bdf005c') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '5fd8e52e-b8ba-4344-4469-91fc53d83c76') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '144e3dd5-92a6-47e9-6907-7146e6b9cea7') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '67e237f9-e665-42d9-679f-9ceba46fa9bb') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil,\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1520,
        "wires": [
            [
                "02b4a3a32cd0fa33"
            ]
        ]
    },
    {
        "id": "8f8a2297e8b9c957",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "ISLA SANCHEZ 🐟 🔴",
        "info": "",
        "x": 140,
        "y": 1480,
        "wires": []
    },
    {
        "id": "b5d72cb4ec0e513c",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/ladrilleros",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1600,
        "wires": [
            [
                "8b664f7cd8ee45d2"
            ]
        ]
    },
    {
        "id": "8b664f7cd8ee45d2",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1600,
        "wires": [
            [
                "1dc956aaac6f8cda"
            ]
        ]
    },
    {
        "id": "867605bbfbd1e5b5",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "1dc956aaac6f8cda",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Ladrilleros",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "137",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1600,
        "wires": [
            [
                "faecec77e71258ae"
            ]
        ]
    },
    {
        "id": "faecec77e71258ae",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4d68fc37-4169-42ce-5e35-11e3d191726d') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'dc35cd27-c090-416b-5ea3-a8dec3422a09') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === 'c9ffd728-46b1-4863-4d4d-79fc6688c38d') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'dc12514a-e3ee-441a-585a-cc2bf928c926') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '02461d86-4bd8-4df0-4c63-c6707ea5abe4') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1600,
        "wires": [
            [
                "867605bbfbd1e5b5"
            ]
        ]
    },
    {
        "id": "62051e59c9fec1ee",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "LADRILLEROS 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 1560,
        "wires": []
    },
    {
        "id": "94cb2e42cbe54e2b",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/marta",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1680,
        "wires": [
            [
                "5a9e1be00217197b"
            ]
        ]
    },
    {
        "id": "5a9e1be00217197b",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1680,
        "wires": [
            [
                "e81e68457a914bb1"
            ]
        ]
    },
    {
        "id": "4acd1d8f87f1193c",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "e81e68457a914bb1",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Marta",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "138",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1680,
        "wires": [
            [
                "f6d4c0b9b2c34f26"
            ]
        ]
    },
    {
        "id": "f6d4c0b9b2c34f26",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4d50324f-9862-4e7c-52ee-ecaffc13b955') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'fe7ccd77-85b6-45ec-5911-152fa57a8563') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '82190faf-a191-45a7-423f-b379a24e2505') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'ae4417cc-a08b-4e54-6aae-20b2e3fd0408') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1680,
        "wires": [
            [
                "4acd1d8f87f1193c"
            ]
        ]
    },
    {
        "id": "0c900b10b7a99c9d",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "MARTA 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1640,
        "wires": []
    },
    {
        "id": "69a31563e7d9a711",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/pamela",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1760,
        "wires": [
            [
                "80fd64ac55e458be"
            ]
        ]
    },
    {
        "id": "80fd64ac55e458be",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1760,
        "wires": [
            [
                "43dc8df1180d25ad"
            ]
        ]
    },
    {
        "id": "ce80e467c834bfdf",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "43dc8df1180d25ad",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pamela",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "139",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1760,
        "wires": [
            [
                "3e3a0876d1a1213e"
            ]
        ]
    },
    {
        "id": "3e3a0876d1a1213e",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'f98b0c28-cef2-42fc-6af9-86262092feee') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '7d0626b8-ef3f-4a99-7371-1be5e289c978') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '12b679e2-453a-450c-5a23-4edcf4ca386d') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'a3b5c35a-92e2-446c-46ee-21fdecedec33') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;    \n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }    \n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1760,
        "wires": [
            [
                "ce80e467c834bfdf"
            ]
        ]
    },
    {
        "id": "7ba0a6c06ec0d56f",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "PAMELA 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1720,
        "wires": []
    },
    {
        "id": "e93a26917d5cd6df",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/pangal1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1840,
        "wires": [
            [
                "78c7a2094a9edb02"
            ]
        ]
    },
    {
        "id": "78c7a2094a9edb02",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1840,
        "wires": [
            [
                "f5896f49dc3276d6"
            ]
        ]
    },
    {
        "id": "d37352c5d819511e",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "f5896f49dc3276d6",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pangal 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "140",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1840,
        "wires": [
            [
                "808910ecb20f2740"
            ]
        ]
    },
    {
        "id": "808910ecb20f2740",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'e34977b1-2b5a-45fd-50ed-e46fc4168e40') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'faaf428e-633e-44dd-6274-caa57279b5ed') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '093b528b-5237-4e7b-6686-3c2ddd94d012') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '186248fa-1997-4587-4eed-65b2df66e7e4') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1840,
        "wires": [
            [
                "d37352c5d819511e"
            ]
        ]
    },
    {
        "id": "de3d15629b14d02f",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "PANGAL 1 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 1800,
        "wires": []
    },
    {
        "id": "2402083258ffd990",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/pangal2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1920,
        "wires": [
            [
                "09cfb9fc8b3cf60b"
            ]
        ]
    },
    {
        "id": "09cfb9fc8b3cf60b",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1920,
        "wires": [
            [
                "cbf38ba5113d602b"
            ]
        ]
    },
    {
        "id": "03a1c360a58917d9",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "cbf38ba5113d602b",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pangal 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "141",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1920,
        "wires": [
            [
                "f8ed000698de9fda"
            ]
        ]
    },
    {
        "id": "f8ed000698de9fda",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '7fbe2ba2-86d5-46ed-40d7-c774977ec291') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'ed3f6cda-e15c-4305-52af-efbb4a1d4acb') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '67540a91-337b-47b7-7990-725ce6e945cb') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === 'bfa3fe1b-f464-4a47-5cb5-7fa83c569c6b') {\n            nombreModuloZona = 'EXTERIOR100';\n        } else if (currentItem.zones[0] === 'ff5fad04-77ad-4634-77b7-cfbb4193eba2') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === '1349cc45-2482-488e-473f-a4eefa2782f5') {\n            nombreModuloZona = 'EXTERIOR200';\n        } else if (currentItem.zones[0] === 'c494c96a-a3f2-44d6-5de2-1d208363cc0f') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1920,
        "wires": [
            [
                "03a1c360a58917d9"
            ]
        ]
    },
    {
        "id": "5c44ae9c1b247789",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "PANGAL 2 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 1880,
        "wires": []
    },
    {
        "id": "87e861f58249b85d",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/refugio",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2000,
        "wires": [
            [
                "b0c5731cd5f0f1ae"
            ]
        ]
    },
    {
        "id": "b0c5731cd5f0f1ae",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2000,
        "wires": [
            [
                "bf4f1b7d7a5710f6"
            ]
        ]
    },
    {
        "id": "136181058622ebb2",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "bf4f1b7d7a5710f6",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Refugio",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "142",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2000,
        "wires": [
            [
                "cff147defefc498a"
            ]
        ]
    },
    {
        "id": "cff147defefc498a",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '427b9d05-da9b-4f99-555d-d7fd49218db9') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '639d76bb-84ce-4ba1-6a59-ecf0191ec520') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '02684e44-d900-4cf8-77eb-a38e467abd3c') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2000,
        "wires": [
            [
                "136181058622ebb2"
            ]
        ]
    },
    {
        "id": "485f7056d74baa37",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "REFUGIO 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1960,
        "wires": []
    },
    {
        "id": "53db26f59703b42b",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/serrano",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2080,
        "wires": [
            [
                "f97c3ce195d16eb9"
            ]
        ]
    },
    {
        "id": "f97c3ce195d16eb9",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2080,
        "wires": [
            [
                "27cb6dd7b5b9df6f"
            ]
        ]
    },
    {
        "id": "31aa5b30d26214dd",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "27cb6dd7b5b9df6f",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Serrano",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "143",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2080,
        "wires": [
            [
                "7e0e82b4bcc9b180"
            ]
        ]
    },
    {
        "id": "7e0e82b4bcc9b180",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '04f83931-97ce-45e3-6202-3d60b9c1a993') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'c659e24e-8d24-4b57-6821-168baa4973e9') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'b75eae40-6107-424c-6530-29adb77057fd') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '48e44b0c-36f7-4bf2-7d1f-dacfed4ae634') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2080,
        "wires": [
            [
                "31aa5b30d26214dd"
            ]
        ]
    },
    {
        "id": "32f63f3ced5a72db",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "SERRANO 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2040,
        "wires": []
    },
    {
        "id": "ea233cd3bf12fc7c",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/staines2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2160,
        "wires": [
            [
                "4a887ad714048b14"
            ]
        ]
    },
    {
        "id": "4a887ad714048b14",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2160,
        "wires": [
            [
                "1c87c6f3de56ac96"
            ]
        ]
    },
    {
        "id": "a10cc6d8caa07ee0",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "1c87c6f3de56ac96",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Staines 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "144",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2160,
        "wires": [
            [
                "a772b7b5f1602504"
            ]
        ]
    },
    {
        "id": "a772b7b5f1602504",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '79d57fbb-4f86-4b77-74a6-41a1f6a26366') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '2195739d-631c-4580-5af3-678f64d8dfdc') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '2b9e3368-fcdc-42cb-7d88-ecf92d70ee65') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '7cca3aeb-7f93-429a-7321-4ed41518744d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {       \n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2160,
        "wires": [
            [
                "a10cc6d8caa07ee0"
            ]
        ]
    },
    {
        "id": "a5f0883bd1e38be3",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "STAINES 2 🐟 🔴",
        "info": "",
        "x": 130,
        "y": 2120,
        "wires": []
    },
    {
        "id": "09f75a0c0944d85a",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/teguel1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2240,
        "wires": [
            [
                "986a8633ad877b4c"
            ]
        ]
    },
    {
        "id": "986a8633ad877b4c",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2240,
        "wires": [
            [
                "ae7ef94cc8bf07cf"
            ]
        ]
    },
    {
        "id": "ccb5e961a5742c40",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "ae7ef94cc8bf07cf",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Teguel 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "145",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2240,
        "wires": [
            [
                "5fe28ac5fc9881d2"
            ]
        ]
    },
    {
        "id": "5fe28ac5fc9881d2",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'fde3ed65-a309-4eb5-5c5c-a321b5293cdb') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'aff0a432-9ea2-4e8d-756d-ad4a71516cc6') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c0765270-24da-4c2f-6dde-d8bc208bcb0f') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '6d6b1423-545f-4a87-51e1-22843bcaf66c') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2240,
        "wires": [
            [
                "ccb5e961a5742c40"
            ]
        ]
    },
    {
        "id": "b63c7550dc3b962c",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "TEGUEL 1 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2200,
        "wires": []
    },
    {
        "id": "872ed0d30104aeaf",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/teguel3",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2320,
        "wires": [
            [
                "e4574968fda9d227"
            ]
        ]
    },
    {
        "id": "e4574968fda9d227",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2320,
        "wires": [
            [
                "ccfbb142a2b4be55"
            ]
        ]
    },
    {
        "id": "c6920295d23ab141",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "ccfbb142a2b4be55",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Teguel 3",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "146",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2320,
        "wires": [
            [
                "c29fbd2e1e531d21"
            ]
        ]
    },
    {
        "id": "c29fbd2e1e531d21",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4356d915-27db-41ce-4fcf-6bb591720acf') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '55bd80cd-fe6d-41c9-4186-d021866021ee') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'babe5eab-a7df-4312-4ed4-289bd12b8d6a') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'fbb128f0-6ac9-4d26-6a97-3798eebc4c11') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil,\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2320,
        "wires": [
            [
                "c6920295d23ab141"
            ]
        ]
    },
    {
        "id": "e8d848f6084a282a",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "TEGUEL 3 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2280,
        "wires": []
    },
    {
        "id": "c07acc0c75304ddf",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/teresa1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2400,
        "wires": [
            [
                "a1beab8d32d776c9"
            ]
        ]
    },
    {
        "id": "a1beab8d32d776c9",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2400,
        "wires": [
            [
                "68299957251a5516"
            ]
        ]
    },
    {
        "id": "e268f1251efc4404",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "68299957251a5516",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Teresa 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "147",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2400,
        "wires": [
            [
                "45a2b6232d28c7c9"
            ]
        ]
    },
    {
        "id": "45a2b6232d28c7c9",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '16396220-b35c-4558-5451-e6c7ec9000c2') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '8c407982-1ffe-4cb1-7467-3f32e403cf23') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '15e6e855-b7a7-43b3-4508-01ae9ca12fbd') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '7f6bf50c-b6df-43bc-5ddb-37229fcccd3e') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2400,
        "wires": [
            [
                "e268f1251efc4404"
            ]
        ]
    },
    {
        "id": "17d757acf73843d7",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "TERESA 1 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2360,
        "wires": []
    },
    {
        "id": "51187d622cd331f9",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/valverde6",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2480,
        "wires": [
            [
                "946fcc3d294cd071"
            ]
        ]
    },
    {
        "id": "946fcc3d294cd071",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2480,
        "wires": [
            [
                "b0f351364818b6b5"
            ]
        ]
    },
    {
        "id": "37fd4b9011f79095",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2480,
        "wires": [
            []
        ]
    },
    {
        "id": "b0f351364818b6b5",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Valverde 6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "148",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2480,
        "wires": [
            [
                "1b136e5c804ecc38"
            ]
        ]
    },
    {
        "id": "1b136e5c804ecc38",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '04f17a82-92ad-46eb-496b-bd333e872b89') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '787b2829-a265-40cd-5f9c-93eedc988b6f') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c3993fe2-481b-4740-7afe-c5ae4ceeb2e8') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'ca4ff249-3200-462a-62ae-0644c7f4811d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2480,
        "wires": [
            [
                "37fd4b9011f79095"
            ]
        ]
    },
    {
        "id": "780e72557fae9284",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "VALVERDE 6 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 2440,
        "wires": []
    },
    {
        "id": "2d5161ba9e94152f",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/vicunamackena",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2560,
        "wires": [
            [
                "c7b674b3ca6a2593"
            ]
        ]
    },
    {
        "id": "c7b674b3ca6a2593",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2560,
        "wires": [
            [
                "7258a7f984c4f7bb"
            ]
        ]
    },
    {
        "id": "bccd356e77aa96c1",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "7258a7f984c4f7bb",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Vicuna Mackena",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "149",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2560,
        "wires": [
            [
                "6ac3bb79c601673d"
            ]
        ]
    },
    {
        "id": "6ac3bb79c601673d",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '46f86705-6cfc-4f53-5c83-3473b1e05591') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '9a28347a-5a62-42f3-44a5-c5a607b79bbd') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '9eb769df-6107-42d3-79e1-01dda638c403') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === '7703606a-aa3b-45c7-48b7-1234898ae40f') {\n            nombreModuloZona = 'EXTERIOR100';\n        } else if (currentItem.zones[0] === '6e1719ef-9d5c-425a-6914-7c0fed860e41') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === 'a3e6f9d4-8b68-4e21-7091-afbde95fb460') {\n            nombreModuloZona = 'EXTERIOR200';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n            || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n            || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n            || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2560,
        "wires": [
            [
                "bccd356e77aa96c1"
            ]
        ]
    },
    {
        "id": "6dade34dcc63db77",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "VICUNA MACKENA 🐟 🟢",
        "info": "",
        "x": 160,
        "y": 2520,
        "wires": []
    },
    {
        "id": "1da365dcf3d7aef5",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/marchant",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2640,
        "wires": [
            [
                "860772d0a9bf7a29"
            ]
        ]
    },
    {
        "id": "860772d0a9bf7a29",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2640,
        "wires": [
            [
                "98a5fa6abb600317"
            ]
        ]
    },
    {
        "id": "416f85baf105ab5f",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "98a5fa6abb600317",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Marchant",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "150",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2640,
        "wires": [
            [
                "2b858992314cf982"
            ]
        ]
    },
    {
        "id": "2b858992314cf982",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '40749aa3-9616-4ca8-701f-a900786a939b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '0aeef2cf-e7a8-40a2-7676-bc0a4fff13e8') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'e2c098ff-7f12-4e88-4ade-2fcb3eee1300') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '69763286-f269-4eb3-7f65-0d4b1f1cfb36') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2640,
        "wires": [
            [
                "416f85baf105ab5f"
            ]
        ]
    },
    {
        "id": "5c1242edb8bee47c",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "MARCHANT 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2600,
        "wires": []
    },
    {
        "id": "4162b6b79310cb10",
        "type": "http in",
        "z": "29f79c2cce5e4644",
        "name": "NIO",
        "url": "/api/spotter/wagner1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2720,
        "wires": [
            [
                "528bded55255d7d0"
            ]
        ]
    },
    {
        "id": "528bded55255d7d0",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2720,
        "wires": [
            [
                "9582b7a55d2e584e"
            ]
        ]
    },
    {
        "id": "c567b5df56b199ce",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "9582b7a55d2e584e",
        "type": "change",
        "z": "29f79c2cce5e4644",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Wagner1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "151",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2720,
        "wires": [
            [
                "6a92e1cda63de170"
            ]
        ]
    },
    {
        "id": "6a92e1cda63de170",
        "type": "function",
        "z": "29f79c2cce5e4644",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '2857e321-2446-45dd-73a8-ff0eead59bcc') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'eca5df23-6d8a-4200-69bf-9cec30a8abe2') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c876e388-afe7-473f-4e3e-e2e8af2f6913') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '60d9f5bf-5230-4778-5ac2-7a26c0732676') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2720,
        "wires": [
            [
                "c567b5df56b199ce"
            ]
        ]
    },
    {
        "id": "26496bbd1bbe17cb",
        "type": "comment",
        "z": "29f79c2cce5e4644",
        "name": "WAGNER1 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2680,
        "wires": []
    },
    {
        "id": "08db8f524485b535",
        "type": "switch",
        "z": "8deaac46fb363040",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 300,
        "wires": [
            [
                "feb6baf3ad194f7b"
            ],
            [
                "feb6baf3ad194f7b"
            ]
        ]
    },
    {
        "id": "343ea65850b6dc76",
        "type": "mongodb-collection",
        "z": "8deaac46fb363040",
        "name": "findDB",
        "config": "0ccd2bd305ce2ded",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "8b1641a1fbdf6c3f"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "8b1641a1fbdf6c3f",
        "type": "function",
        "z": "8deaac46fb363040",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 300,
        "wires": [
            [
                "08db8f524485b535"
            ]
        ]
    },
    {
        "id": "feb6baf3ad194f7b",
        "type": "change",
        "z": "8deaac46fb363040",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 300,
        "wires": [
            [
                "9eaf5ed15a6db298"
            ]
        ]
    },
    {
        "id": "9eaf5ed15a6db298",
        "type": "switch",
        "z": "8deaac46fb363040",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 300,
        "wires": [
            [
                "80512428097eb871",
                "9fe0322e61cc5ac2"
            ],
            [
                "80512428097eb871",
                "7c9cdb43f01fbd8d",
                "75a9a734e28df764",
                "9fe0322e61cc5ac2",
                "493ecf9fee409f23"
            ]
        ]
    },
    {
        "id": "493ecf9fee409f23",
        "type": "mongodb-collection",
        "z": "8deaac46fb363040",
        "name": "insert_seguridad_movil",
        "config": "0ccd2bd305ce2ded",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1030,
        "y": 240,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "7c9cdb43f01fbd8d",
        "type": "mongodb-collection",
        "z": "8deaac46fb363040",
        "name": "insert_seguridad",
        "config": "0ccd2bd305ce2ded",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1050,
        "y": 200,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "80512428097eb871",
        "type": "mongodb-collection",
        "z": "8deaac46fb363040",
        "name": "insert_seguridad_detalle",
        "config": "0ccd2bd305ce2ded",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1030,
        "y": 160,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "9fe0322e61cc5ac2",
        "type": "change",
        "z": "8deaac46fb363040",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "75a9a734e28df764",
        "type": "change",
        "z": "8deaac46fb363040",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "fe42478c7521f631",
        "type": "http in",
        "z": "f2220fabc259fc22",
        "name": "NIO",
        "url": "/api/spotter/pocoihuen",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "b09f7978a8863673"
            ]
        ]
    },
    {
        "id": "b09f7978a8863673",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 120,
        "wires": [
            [
                "6a1d04b01cb5b2a2"
            ]
        ]
    },
    {
        "id": "152c6001a530b435",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "6a1d04b01cb5b2a2",
        "type": "change",
        "z": "f2220fabc259fc22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pocoihuen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "107",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 120,
        "wires": [
            [
                "f176b65a6dd87fb4"
            ]
        ]
    },
    {
        "id": "f176b65a6dd87fb4",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n    for (var i = 0; i < arr.length; i++) {\n        var currentItem = arr[i];\n        if (currentItem.id !== undefined && currentItem.id !== null) {\n            var timestamp = new Date(currentItem.timestamp);\n            var formattedDateTime = formatDateTime(timestamp);\n\n            var nombreModuloZona;\n\n            if (currentItem.zones[0] === 'e66fa9b0-b417-4b76-4998-f7970374a37b') {\n                nombreModuloZona = '100';\n            } else if (currentItem.zones[0] === '00e657d7-826f-4958-5475-07a19f29f895') {\n                nombreModuloZona = 'INTERIOR';\n            } else if (currentItem.zones[0] === 'a17424f8-0ef5-4a43-4015-391c06bccbde') {\n                nombreModuloZona = 'EXTERIOR';\n            } else if (currentItem.zones[0] === 'b70ee8bc-90f6-4fb2-4d01-7b313ccd72e3') {\n                nombreModuloZona = 'ACTIVE_TRACKING';\n            }else {\n                nombreModuloZona = currentItem.zones[0];\n            }\n\n            // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n            if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n                \n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                \n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        } \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 120,
        "wires": [
            [
                "152c6001a530b435"
            ]
        ]
    },
    {
        "id": "3a84a0cb9f4b4259",
        "type": "comment",
        "z": "f2220fabc259fc22",
        "name": "POCOIHUEN 🐟 🟢",
        "info": "",
        "x": 160,
        "y": 80,
        "wires": []
    },
    {
        "id": "beefc00a223a8356",
        "type": "http in",
        "z": "f2220fabc259fc22",
        "name": "NIO",
        "url": "/api/spotter/contao",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "e3723eccecdd9126"
            ]
        ]
    },
    {
        "id": "e3723eccecdd9126",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 200,
        "wires": [
            [
                "a94907d58ffe7476"
            ]
        ]
    },
    {
        "id": "58b0bc9668ac8917",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "a94907d58ffe7476",
        "type": "change",
        "z": "f2220fabc259fc22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Contao",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "108",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 200,
        "wires": [
            [
                "5386d78a52433f09"
            ]
        ]
    },
    {
        "id": "5386d78a52433f09",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '912eb136-60dd-4173-4b48-38d0dccd5fed') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'dede1a11-ffa6-47d8-7ba0-44f08d2de89c') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '77901925-e744-45b3-724f-3e3731bfe6bf') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'c6b6a04b-1e1b-4889-71bf-12a0f118389a') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 200,
        "wires": [
            [
                "58b0bc9668ac8917"
            ]
        ]
    },
    {
        "id": "edc06eee547d2f95",
        "type": "comment",
        "z": "f2220fabc259fc22",
        "name": "CONTAO 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 160,
        "wires": []
    },
    {
        "id": "4e01ed7c06bd3ac7",
        "type": "http in",
        "z": "f2220fabc259fc22",
        "d": true,
        "name": "NIO",
        "url": "/api/spotter/pirquen",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "fc5a34c0f565668d"
            ]
        ]
    },
    {
        "id": "fc5a34c0f565668d",
        "type": "function",
        "z": "f2220fabc259fc22",
        "d": true,
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 280,
        "wires": [
            [
                "1183fd83151529b6"
            ]
        ]
    },
    {
        "id": "ada6205b91d42366",
        "type": "function",
        "z": "f2220fabc259fc22",
        "d": true,
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "1183fd83151529b6",
        "type": "change",
        "z": "f2220fabc259fc22",
        "d": true,
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pirquen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "109",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 280,
        "wires": [
            [
                "453d02d1133984f7"
            ]
        ]
    },
    {
        "id": "453d02d1133984f7",
        "type": "function",
        "z": "f2220fabc259fc22",
        "d": true,
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    //adelantar una hora por atraso del servidor 10.10.7.41\n    timestamp.setHours(timestamp.getHours() + 1);\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'c880ccae-6d38-4f32-6b98-3edaa66c4372') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '32e62643-7deb-4312-4f77-b88c369709fe') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '5e35c87a-1cc8-4ed5-7144-dead32e89f8a') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            modulo: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || ''\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            modulo: 'seguridad_detalle', \n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration,\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 280,
        "wires": [
            [
                "ada6205b91d42366"
            ]
        ]
    },
    {
        "id": "8a178a62566fb350",
        "type": "comment",
        "z": "f2220fabc259fc22",
        "name": "PIRQUEN ❌ SIN CONEXION",
        "info": "",
        "x": 190,
        "y": 240,
        "wires": []
    },
    {
        "id": "7ecebab3b3276a84",
        "type": "http in",
        "z": "f2220fabc259fc22",
        "name": "NIO",
        "url": "/api/spotter/rollizofenix",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "c2fa1c5a8a2b2c04"
            ]
        ]
    },
    {
        "id": "c2fa1c5a8a2b2c04",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 440,
        "wires": [
            [
                "e5166bdaced04e7e"
            ]
        ]
    },
    {
        "id": "5808c6da8584b11a",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "e5166bdaced04e7e",
        "type": "change",
        "z": "f2220fabc259fc22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Rollizo Fenix",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "111",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 440,
        "wires": [
            [
                "d2e15a65850f8464"
            ]
        ]
    },
    {
        "id": "d2e15a65850f8464",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '9305f291-816e-4a7b-6b9c-61b0c0d84108') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '8d69834a-470f-4cd8-4101-cd11fc353bca') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '2586cc68-525e-4630-6a33-c195a6ada8e8') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'd2d23ee2-0354-4202-73cb-022e0731c54c') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n                \n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                \n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "5808c6da8584b11a"
            ]
        ]
    },
    {
        "id": "845156c47f66ad04",
        "type": "comment",
        "z": "f2220fabc259fc22",
        "name": "ROLLIZO-FENIX 🐟 🟢",
        "info": "",
        "x": 170,
        "y": 400,
        "wires": []
    },
    {
        "id": "fa0289ecf73c3477",
        "type": "http in",
        "z": "f2220fabc259fc22",
        "name": "NIO",
        "url": "/api/spotter/rollizodonmiguel",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 360,
        "wires": [
            [
                "ade12ad1b39e7547"
            ]
        ]
    },
    {
        "id": "ade12ad1b39e7547",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 360,
        "wires": [
            [
                "3a677e0913c6fe80"
            ]
        ]
    },
    {
        "id": "3b5fdb9d94c0c5b6",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "3a677e0913c6fe80",
        "type": "change",
        "z": "f2220fabc259fc22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Rollizo Don Miguel",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "110",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 360,
        "wires": [
            [
                "3bd87e5c3d8bbd49"
            ]
        ]
    },
    {
        "id": "3bd87e5c3d8bbd49",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '43bf1cec-ea21-44ea-5ef5-2902c9a38614') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '9afdc2d1-827a-4e5a-5cf2-9da3e36d98fb') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'b7e87ac0-22fd-4179-6caa-66c27bab61cc') {\n            nombreModuloZona = 'EXTERIOR';\n        }else if (currentItem.zones[0] === 'f0941e86-1c97-4fc2-7df3-cfbad573d93b') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n            \n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 360,
        "wires": [
            [
                "3b5fdb9d94c0c5b6"
            ]
        ]
    },
    {
        "id": "e984345bd002c00c",
        "type": "comment",
        "z": "f2220fabc259fc22",
        "name": "ROLLIZO-DON MIGUEL 🐟 🟢",
        "info": "",
        "x": 190,
        "y": 320,
        "wires": []
    },
    {
        "id": "85729b4a75e6b364",
        "type": "http in",
        "z": "f2220fabc259fc22",
        "name": "NIO",
        "url": "/api/spotter/quillaipe",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 520,
        "wires": [
            [
                "cca6c2341e4a2568"
            ]
        ]
    },
    {
        "id": "cca6c2341e4a2568",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 520,
        "wires": [
            [
                "6064061c9f04273e"
            ]
        ]
    },
    {
        "id": "fa9c6acdb86b3b98",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "6064061c9f04273e",
        "type": "change",
        "z": "f2220fabc259fc22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Quillaipe",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "112",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 520,
        "wires": [
            [
                "accf070aa9639a9c"
            ]
        ]
    },
    {
        "id": "accf070aa9639a9c",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '8121fee9-fa99-4816-77ac-d9bbcca8d3a3') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '44b3577b-0418-4b14-7af7-d3d58cb17b2a') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c9973fc9-54b8-4bca-7768-ef36663d3d43') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '833695f9-42a3-4aba-4820-91b67203b9fc') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 520,
        "wires": [
            [
                "fa9c6acdb86b3b98"
            ]
        ]
    },
    {
        "id": "3380891865af74c0",
        "type": "comment",
        "z": "f2220fabc259fc22",
        "name": "QUILLAIPE 🐟 🔴",
        "info": "",
        "x": 150,
        "y": 480,
        "wires": []
    },
    {
        "id": "93dbd1a3496117f8",
        "type": "http in",
        "z": "f2220fabc259fc22",
        "name": "NIO",
        "url": "/api/spotter/polocuhe",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 600,
        "wires": [
            [
                "773017d5ee5b49e5"
            ]
        ]
    },
    {
        "id": "773017d5ee5b49e5",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 600,
        "wires": [
            [
                "39cc2db5e78f9992"
            ]
        ]
    },
    {
        "id": "7de0433f3f5f8d93",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "39cc2db5e78f9992",
        "type": "change",
        "z": "f2220fabc259fc22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Polocuhe",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "113",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 600,
        "wires": [
            [
                "9aaad4cd2c79bf13"
            ]
        ]
    },
    {
        "id": "9aaad4cd2c79bf13",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '648c6588-f02f-40a2-7cd1-de8456a5f59f') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '6e32f572-8f85-47d4-78ea-68aff0b4fe82') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '9b3b94d0-1103-42b4-4ab6-56174f94d805') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 600,
        "wires": [
            [
                "7de0433f3f5f8d93"
            ]
        ]
    },
    {
        "id": "c217bf2c0f3184d6",
        "type": "comment",
        "z": "f2220fabc259fc22",
        "name": "POLOCUHE 🐟 🔴",
        "info": "",
        "x": 150,
        "y": 560,
        "wires": []
    },
    {
        "id": "9c8fc5f124ce06ad",
        "type": "http in",
        "z": "f2220fabc259fc22",
        "name": "NIO",
        "url": "/api/spotter/ilque",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 680,
        "wires": [
            [
                "918e422236d6445c"
            ]
        ]
    },
    {
        "id": "918e422236d6445c",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 680,
        "wires": [
            [
                "0c67bce9099216d5"
            ]
        ]
    },
    {
        "id": "7a263a00db846c55",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "0c67bce9099216d5",
        "type": "change",
        "z": "f2220fabc259fc22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Ilque",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "114",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 680,
        "wires": [
            [
                "9038c41a71893b97"
            ]
        ]
    },
    {
        "id": "9038c41a71893b97",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'c620e427-713e-4215-72d7-5921d28f59e0') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '61a2ed50-7875-4516-5c8a-62ae8ec45290') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '97569ac4-fa36-47c8-4331-7f9a3316b450') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 680,
        "wires": [
            [
                "7a263a00db846c55"
            ]
        ]
    },
    {
        "id": "5ce10bf56ca727a7",
        "type": "comment",
        "z": "f2220fabc259fc22",
        "name": "ILQUE 🐟 🔴",
        "info": "",
        "x": 130,
        "y": 640,
        "wires": []
    },
    {
        "id": "b17db756e02f41a3",
        "type": "http in",
        "z": "f2220fabc259fc22",
        "name": "NIO",
        "url": "/api/spotter/lenca",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 760,
        "wires": [
            [
                "4680b04f0869a4c1"
            ]
        ]
    },
    {
        "id": "4680b04f0869a4c1",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 760,
        "wires": [
            [
                "7cd063fc9843403e"
            ]
        ]
    },
    {
        "id": "7f72432e9b2bc4e1",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "7cd063fc9843403e",
        "type": "change",
        "z": "f2220fabc259fc22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Lenca",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "115",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 760,
        "wires": [
            [
                "20a6e548a738a0cc"
            ]
        ]
    },
    {
        "id": "20a6e548a738a0cc",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '89bcf991-d1cf-4554-6b33-a22146bf18d9b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '428daded-561e-42a9-6b5f-d5eab68af911') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '116ba791-595b-40b3-5c91-c67f644c1970') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '537429d1-bd24-4ced-49d9-3f921244070d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration\n            };\n            // Agrega \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agrega \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 760,
        "wires": [
            [
                "7f72432e9b2bc4e1"
            ]
        ]
    },
    {
        "id": "c10db40b987b7483",
        "type": "comment",
        "z": "f2220fabc259fc22",
        "name": "LENCA 🐟 🔴",
        "info": "",
        "x": 140,
        "y": 720,
        "wires": []
    },
    {
        "id": "dbba2829d298594d",
        "type": "http in",
        "z": "f2220fabc259fc22",
        "name": "NIO",
        "url": "/api/spotter/traiguen",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 840,
        "wires": [
            [
                "9128d0c101a3071d"
            ]
        ]
    },
    {
        "id": "9128d0c101a3071d",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 840,
        "wires": [
            [
                "1204ef4d062b597d"
            ]
        ]
    },
    {
        "id": "8c147594069c1b2a",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "1204ef4d062b597d",
        "type": "change",
        "z": "f2220fabc259fc22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Traiguen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "116",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 840,
        "wires": [
            [
                "6a383ece86e40734"
            ]
        ]
    },
    {
        "id": "6a383ece86e40734",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '19a64f20-8ed4-4025-7ae4-008fb8d5b10b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'f03dba75-4eff-45ac-6bed-ee90688833d3') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'fd38f08b-5a6e-409b-69d2-2b5986b90107') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 840,
        "wires": [
            [
                "8c147594069c1b2a"
            ]
        ]
    },
    {
        "id": "8e8d085eec167c0f",
        "type": "comment",
        "z": "f2220fabc259fc22",
        "name": "TRAIGUEN 🐟 🔴",
        "info": "",
        "x": 150,
        "y": 800,
        "wires": []
    },
    {
        "id": "b89408823f948a03",
        "type": "http in",
        "z": "f2220fabc259fc22",
        "name": "NIO",
        "url": "/api/spotter/verdugo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "b93ad046c420fc0f"
            ]
        ]
    },
    {
        "id": "b93ad046c420fc0f",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 920,
        "wires": [
            [
                "7dc098231e2c32a0"
            ]
        ]
    },
    {
        "id": "0973de7f78fa0e78",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "7dc098231e2c32a0",
        "type": "change",
        "z": "f2220fabc259fc22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Traiguen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "117",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 920,
        "wires": [
            [
                "a6f402dce91cbef0"
            ]
        ]
    },
    {
        "id": "a6f402dce91cbef0",
        "type": "function",
        "z": "f2220fabc259fc22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '3c1f5685-6fc1-458a-5cd4-f41c3d9d6850') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'f8f1302a-a787-42ca-795a-2067f535aad7') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '9cc50831-d829-4ede-6219-735cbc595b02') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 920,
        "wires": [
            [
                "0973de7f78fa0e78"
            ]
        ]
    },
    {
        "id": "e411ed41e380abd2",
        "type": "comment",
        "z": "f2220fabc259fc22",
        "name": "VERDUGO 🐟 🔴",
        "info": "",
        "x": 150,
        "y": 880,
        "wires": []
    },
    {
        "id": "88f844f43cac1cf3",
        "type": "switch",
        "z": "9205ecf7ceb34237",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 320,
        "wires": [
            [
                "bcae162881410cd2"
            ],
            [
                "bcae162881410cd2"
            ]
        ]
    },
    {
        "id": "bcae162881410cd2",
        "type": "change",
        "z": "9205ecf7ceb34237",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 320,
        "wires": [
            [
                "00d8fe2898ece7c5"
            ]
        ]
    },
    {
        "id": "00d8fe2898ece7c5",
        "type": "switch",
        "z": "9205ecf7ceb34237",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 320,
        "wires": [
            [
                "73686455d61e48e9",
                "7f00835464cd70c7"
            ],
            [
                "73686455d61e48e9",
                "719bdba72ba75ea8",
                "8fa97719c77d25be",
                "7f00835464cd70c7",
                "4383fb5316667a97"
            ]
        ]
    },
    {
        "id": "73686455d61e48e9",
        "type": "mongodb-collection",
        "z": "9205ecf7ceb34237",
        "name": "insert_seguridad_detalle",
        "config": "aea86e27262eaf28",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1150,
        "y": 200,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "719bdba72ba75ea8",
        "type": "mongodb-collection",
        "z": "9205ecf7ceb34237",
        "name": "insert_seguridad",
        "config": "aea86e27262eaf28",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1170,
        "y": 240,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "4383fb5316667a97",
        "type": "mongodb-collection",
        "z": "9205ecf7ceb34237",
        "name": "insert_seguridad_movil",
        "config": "aea86e27262eaf28",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1150,
        "y": 280,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "7f00835464cd70c7",
        "type": "change",
        "z": "9205ecf7ceb34237",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "8fa97719c77d25be",
        "type": "change",
        "z": "9205ecf7ceb34237",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "4a1ee64099321dd5",
        "type": "function",
        "z": "9205ecf7ceb34237",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 320,
        "wires": [
            [
                "88f844f43cac1cf3"
            ]
        ]
    },
    {
        "id": "cb186135d96952e1",
        "type": "mongodb-collection",
        "z": "9205ecf7ceb34237",
        "name": "findDB",
        "config": "aea86e27262eaf28",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 130,
        "y": 320,
        "wires": [
            [
                "4a1ee64099321dd5"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "90614add4e06966a",
        "type": "http in",
        "z": "e4c6aa3eb68f5823",
        "name": "NIO",
        "url": "/api/spotter/piren",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "f1889c37a8c62271"
            ]
        ]
    },
    {
        "id": "f1889c37a8c62271",
        "type": "function",
        "z": "e4c6aa3eb68f5823",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 260,
        "wires": [
            [
                "b57216bbd3030c32"
            ]
        ]
    },
    {
        "id": "20de039575004312",
        "type": "function",
        "z": "e4c6aa3eb68f5823",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "b57216bbd3030c32",
        "type": "change",
        "z": "e4c6aa3eb68f5823",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "002",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "GMT",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Piren",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "101",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "a2878a3360d2fa91"
            ]
        ]
    },
    {
        "id": "a2878a3360d2fa91",
        "type": "function",
        "z": "e4c6aa3eb68f5823",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\nvar localSnr = msg.payload.localSnr;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'a8d0c471-9893-4d6c-7bb3-d9b3fccb3c32') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '80a372cf-ded7-439b-6392-d8a758ff3a09') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'fe5b4b7b-7632-48cb-6da4-8b8e7bf66a9e') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_movil',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        \n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil:movil,\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 610,
        "y": 260,
        "wires": [
            [
                "20de039575004312"
            ]
        ]
    },
    {
        "id": "6c0c5057d907bf3f",
        "type": "switch",
        "z": "5437e6e6763a541f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 300,
        "wires": [
            [
                "584d11cf2e7ac8fe",
                "524e32720f49c577"
            ],
            [
                "584d11cf2e7ac8fe",
                "e6aa1d5bc06da177",
                "b567431178c1b0b3",
                "524e32720f49c577",
                "40a34b36356b5517"
            ]
        ]
    },
    {
        "id": "e6aa1d5bc06da177",
        "type": "mongodb-collection",
        "z": "5437e6e6763a541f",
        "name": "insert_seguridad",
        "config": "83755d55243443a2",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1030,
        "y": 220,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "df5d9d9730c18859",
        "type": "mongodb-collection",
        "z": "5437e6e6763a541f",
        "name": "findDB",
        "config": "83755d55243443a2",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "27ba451ec5acb8e7"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "27ba451ec5acb8e7",
        "type": "function",
        "z": "5437e6e6763a541f",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 300,
        "wires": [
            [
                "2e84be0fb7d3e3f9"
            ]
        ]
    },
    {
        "id": "2e84be0fb7d3e3f9",
        "type": "switch",
        "z": "5437e6e6763a541f",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 300,
        "wires": [
            [
                "0c67f7604831f062"
            ],
            [
                "0c67f7604831f062"
            ]
        ]
    },
    {
        "id": "524e32720f49c577",
        "type": "change",
        "z": "5437e6e6763a541f",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "b567431178c1b0b3",
        "type": "change",
        "z": "5437e6e6763a541f",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "0c67f7604831f062",
        "type": "change",
        "z": "5437e6e6763a541f",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 300,
        "wires": [
            [
                "6c0c5057d907bf3f"
            ]
        ]
    },
    {
        "id": "40a34b36356b5517",
        "type": "mongodb-collection",
        "z": "5437e6e6763a541f",
        "name": "insert_seguridad_movil",
        "config": "83755d55243443a2",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1010,
        "y": 260,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "584d11cf2e7ac8fe",
        "type": "mongodb-collection",
        "z": "5437e6e6763a541f",
        "name": "insert_seguridad_detalle",
        "config": "83755d55243443a2",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1010,
        "y": 180,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "b8557d1eb51fdd11",
        "type": "http in",
        "z": "9bbcb6f5ba9c78ab",
        "name": "NIO",
        "url": "/api/spotter/estacionamiento",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "be99b7b1fe7583ef"
            ]
        ]
    },
    {
        "id": "be99b7b1fe7583ef",
        "type": "function",
        "z": "9bbcb6f5ba9c78ab",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 220,
        "wires": [
            [
                "c22e380f19865b15"
            ]
        ]
    },
    {
        "id": "c22e380f19865b15",
        "type": "change",
        "z": "9bbcb6f5ba9c78ab",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "001",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Ast-Networks",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Estacionamiento",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "102",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 220,
        "wires": [
            [
                "661ac6b6f0c3a5d8"
            ]
        ]
    },
    {
        "id": "661ac6b6f0c3a5d8",
        "type": "function",
        "z": "9bbcb6f5ba9c78ab",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'a8d0c471-9893-4d6c-7bb3-d9b3fccb3c32') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '294ecf99-e935-4e87-7fab-3dd224f00be4') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '1bae8db5-b444-4e1c-5092-e48968806e8b') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil,\n        });\n    }\n}\n\nreturn [newMsg];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 220,
        "wires": [
            [
                "60ce1766d9e1101c"
            ]
        ]
    },
    {
        "id": "60ce1766d9e1101c",
        "type": "function",
        "z": "9bbcb6f5ba9c78ab",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "de93e4d74f61cf79",
        "type": "comment",
        "z": "9bbcb6f5ba9c78ab",
        "name": "ESTACIONAMIENTO 🐟 🟢",
        "info": "",
        "x": 180,
        "y": 180,
        "wires": []
    },
    {
        "id": "7960590b758bdea1",
        "type": "change",
        "z": "6319dc34dc989120",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 320,
        "wires": [
            [
                "5bd2e7b0b8a9b68d"
            ]
        ]
    },
    {
        "id": "5bd2e7b0b8a9b68d",
        "type": "switch",
        "z": "6319dc34dc989120",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 320,
        "wires": [
            [
                "a15720320fb7d685",
                "2528c569f7bda3d3"
            ],
            [
                "a15720320fb7d685",
                "51ae36f6d4523343",
                "2528c569f7bda3d3",
                "fe6f447c735200ab",
                "54e8e0bdc29c48f0"
            ]
        ]
    },
    {
        "id": "fe6f447c735200ab",
        "type": "mongodb-collection",
        "z": "6319dc34dc989120",
        "name": "insert_seguridad",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1090,
        "y": 280,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "1337e76dae606bbb",
        "type": "mongodb-collection",
        "z": "6319dc34dc989120",
        "name": "findDB",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 210,
        "y": 320,
        "wires": [
            [
                "6871eaf0cd739f40"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "a15720320fb7d685",
        "type": "mongodb-collection",
        "z": "6319dc34dc989120",
        "name": "insert_seguridad_detalle",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1070,
        "y": 240,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "6871eaf0cd739f40",
        "type": "function",
        "z": "6319dc34dc989120",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 320,
        "wires": [
            [
                "fedf04754d1dc460"
            ]
        ]
    },
    {
        "id": "fedf04754d1dc460",
        "type": "switch",
        "z": "6319dc34dc989120",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 320,
        "wires": [
            [
                "7960590b758bdea1"
            ],
            [
                "7960590b758bdea1"
            ]
        ]
    },
    {
        "id": "2528c569f7bda3d3",
        "type": "change",
        "z": "6319dc34dc989120",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "51ae36f6d4523343",
        "type": "change",
        "z": "6319dc34dc989120",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "54e8e0bdc29c48f0",
        "type": "mongodb-collection",
        "z": "6319dc34dc989120",
        "name": "insert_seguridad_movil",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1070,
        "y": 320,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "e23ce1d7c0a453e1",
        "type": "http in",
        "z": "63df8b5eec27f8fd",
        "name": "NIO",
        "url": "/api/spotter/prueba3",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "763bcde25a17c30c"
            ]
        ]
    },
    {
        "id": "d6c9777cd3a4c21a",
        "type": "http in",
        "z": "63df8b5eec27f8fd",
        "name": "NIO",
        "url": "/api/spotter/betecoi",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "d1561b186ac54570"
            ]
        ]
    },
    {
        "id": "ecbeb8cf88057b5b",
        "type": "http in",
        "z": "63df8b5eec27f8fd",
        "name": "NIO",
        "url": "/api/spotter/laurel",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "8d554f2f0df62bf4"
            ]
        ]
    },
    {
        "id": "c37e65b82e26a613",
        "type": "http in",
        "z": "63df8b5eec27f8fd",
        "name": "NIO",
        "url": "/api/spotter/leucayec",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "6c9a02cfe0578ac2"
            ]
        ]
    },
    {
        "id": "763bcde25a17c30c",
        "type": "function",
        "z": "63df8b5eec27f8fd",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "a8b09c310176adfb"
            ]
        ]
    },
    {
        "id": "d1561b186ac54570",
        "type": "function",
        "z": "63df8b5eec27f8fd",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 300,
        "wires": [
            [
                "703affb2d68406aa"
            ]
        ]
    },
    {
        "id": "8d554f2f0df62bf4",
        "type": "function",
        "z": "63df8b5eec27f8fd",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 380,
        "wires": [
            [
                "67ad34cffb99f19b"
            ]
        ]
    },
    {
        "id": "6c9a02cfe0578ac2",
        "type": "function",
        "z": "63df8b5eec27f8fd",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 460,
        "wires": [
            [
                "0bf5947a8e6cafaa"
            ]
        ]
    },
    {
        "id": "a8b09c310176adfb",
        "type": "change",
        "z": "63df8b5eec27f8fd",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Isla-Lola",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "103",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 220,
        "wires": [
            [
                "035050b73d242c1d"
            ]
        ]
    },
    {
        "id": "703affb2d68406aa",
        "type": "change",
        "z": "63df8b5eec27f8fd",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Betecoi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "104",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 300,
        "wires": [
            [
                "306087529c622bd7"
            ]
        ]
    },
    {
        "id": "67ad34cffb99f19b",
        "type": "change",
        "z": "63df8b5eec27f8fd",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Laurel-Oeste",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "105",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 380,
        "wires": [
            [
                "8a9e5ddbae8a16e2"
            ]
        ]
    },
    {
        "id": "0bf5947a8e6cafaa",
        "type": "change",
        "z": "63df8b5eec27f8fd",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Leucayec",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "106",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "5f6bef4409aa0bf7"
            ]
        ]
    },
    {
        "id": "37be1a913895158d",
        "type": "function",
        "z": "63df8b5eec27f8fd",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "035050b73d242c1d",
        "type": "function",
        "z": "63df8b5eec27f8fd",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'bbca809d-850f-4bb0-4715-20cabb701093') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'ba8d7374-de08-45b9-67ba-1044a0d1af72') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'a80b5ad3-a43a-40df-5bf8-1e16fb05ac69') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n        \n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 220,
        "wires": [
            [
                "37be1a913895158d"
            ]
        ]
    },
    {
        "id": "e5de644242f3bf8b",
        "type": "function",
        "z": "63df8b5eec27f8fd",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "306087529c622bd7",
        "type": "function",
        "z": "63df8b5eec27f8fd",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '73a6080d-47ba-4aa1-72e4-b3fe09deb827') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '2a3120cb-89f6-47e4-49b9-356d56db95dd') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'ff9c2731-34af-469b-5568-6a2dcf29d7fa') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 300,
        "wires": [
            [
                "e5de644242f3bf8b"
            ]
        ]
    },
    {
        "id": "b7e4ca66218aa22e",
        "type": "function",
        "z": "63df8b5eec27f8fd",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "8a9e5ddbae8a16e2",
        "type": "function",
        "z": "63df8b5eec27f8fd",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '788e5ae9-e599-450a-7333-a238f93e597a') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'b987898d-7724-4458-6660-35a68fdad31d') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === 'ebe0fc31-e41f-45b8-6052-8964d7f183c1') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '9e871b7b-9e48-4e34-4900-7d0fdbb94043') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n            \n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        \n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = ''; \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n            \n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n        \n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 380,
        "wires": [
            [
                "b7e4ca66218aa22e"
            ]
        ]
    },
    {
        "id": "9a9ad6898e371a57",
        "type": "function",
        "z": "63df8b5eec27f8fd",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "5f6bef4409aa0bf7",
        "type": "function",
        "z": "63df8b5eec27f8fd",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '1750cee8-b7bc-444b-703e-56ab480622e1') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '1c073df0-def2-48ce-67db-f94f59821dec') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 460,
        "wires": [
            [
                "9a9ad6898e371a57"
            ]
        ]
    },
    {
        "id": "585e867059a96a8b",
        "type": "comment",
        "z": "63df8b5eec27f8fd",
        "d": true,
        "name": "ISLA-LOLA 🐟 🟢",
        "info": "",
        "x": 190,
        "y": 180,
        "wires": []
    },
    {
        "id": "e30a34ac0b205c26",
        "type": "comment",
        "z": "63df8b5eec27f8fd",
        "d": true,
        "name": "BETECOI 🐟 🟢",
        "info": "",
        "x": 180,
        "y": 260,
        "wires": []
    },
    {
        "id": "4a224165c258938e",
        "type": "comment",
        "z": "63df8b5eec27f8fd",
        "d": true,
        "name": "LAUREL-OESTE 🐟 🟢",
        "info": "",
        "x": 210,
        "y": 340,
        "wires": []
    },
    {
        "id": "b9b7d9685c412508",
        "type": "comment",
        "z": "63df8b5eec27f8fd",
        "d": true,
        "name": "LEUCAYEC 🐟 🟢",
        "info": "",
        "x": 190,
        "y": 420,
        "wires": []
    },
    {
        "id": "9df2fc4f16aa81da",
        "type": "change",
        "z": "e72ed24ed95ca6a6",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 320,
        "wires": [
            [
                "82f8cc1f3295c424"
            ]
        ]
    },
    {
        "id": "82f8cc1f3295c424",
        "type": "switch",
        "z": "e72ed24ed95ca6a6",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 320,
        "wires": [
            [
                "a13a3c0106652283",
                "82eb229e4876edb3"
            ],
            [
                "a13a3c0106652283",
                "931f4985809328d5",
                "c028d85ac8fa79b0",
                "82eb229e4876edb3",
                "71cfe9c59b3a2aeb"
            ]
        ]
    },
    {
        "id": "931f4985809328d5",
        "type": "mongodb-collection",
        "z": "e72ed24ed95ca6a6",
        "name": "insert_seguridad",
        "config": "71ca3921bbd01887",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 990,
        "y": 200,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "a5080a5d7c1888f3",
        "type": "mongodb-collection",
        "z": "e72ed24ed95ca6a6",
        "name": "findDB",
        "config": "71ca3921bbd01887",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 130,
        "y": 320,
        "wires": [
            [
                "1a08c92b5504379d"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "a13a3c0106652283",
        "type": "mongodb-collection",
        "z": "e72ed24ed95ca6a6",
        "name": "insert_seguridad_detalle",
        "config": "71ca3921bbd01887",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 970,
        "y": 160,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "1a08c92b5504379d",
        "type": "function",
        "z": "e72ed24ed95ca6a6",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 320,
        "wires": [
            [
                "e6b82ac096865893"
            ]
        ]
    },
    {
        "id": "e6b82ac096865893",
        "type": "switch",
        "z": "e72ed24ed95ca6a6",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 320,
        "wires": [
            [
                "9df2fc4f16aa81da"
            ],
            [
                "9df2fc4f16aa81da"
            ]
        ]
    },
    {
        "id": "82eb229e4876edb3",
        "type": "change",
        "z": "e72ed24ed95ca6a6",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "71cfe9c59b3a2aeb",
        "type": "mongodb-collection",
        "z": "e72ed24ed95ca6a6",
        "name": "insert_seguridad_movil",
        "config": "71ca3921bbd01887",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 970,
        "y": 240,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "c028d85ac8fa79b0",
        "type": "change",
        "z": "e72ed24ed95ca6a6",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "b8b0da75adc9b793",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/amparogrande",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "54413af325477628"
            ]
        ]
    },
    {
        "id": "54413af325477628",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 80,
        "wires": [
            [
                "93121194134d75f2"
            ]
        ]
    },
    {
        "id": "db0406203416e0a0",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "93121194134d75f2",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Amparo Grande",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "118",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 80,
        "wires": [
            [
                "cf66aa04f6b58efa"
            ]
        ]
    },
    {
        "id": "cf66aa04f6b58efa",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'abf76d76-ca23-4375-442f-1acf321ccb10') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '375b49b7-4590-4179-7636-5d04ad56541e') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '30e955bf-3dad-482b-63c3-1a78e1f6ca99') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'ab3ee495-3bb7-45f7-5fcd-c09bdf7dfca1') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil,\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 80,
        "wires": [
            [
                "db0406203416e0a0"
            ]
        ]
    },
    {
        "id": "b9c07e9560a0e05c",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "AMPAROGRANDE🐟 🟢",
        "info": "",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "6243a22a4e6a9bb2",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/angostura",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 160,
        "wires": [
            [
                "870901faad3b2b73"
            ]
        ]
    },
    {
        "id": "870901faad3b2b73",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 160,
        "wires": [
            [
                "83ed313a0e126df7"
            ]
        ]
    },
    {
        "id": "d8bce1c04efd54e3",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "83ed313a0e126df7",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Angostura",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "119",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 160,
        "wires": [
            [
                "2309f4a34178b113"
            ]
        ]
    },
    {
        "id": "2309f4a34178b113",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'd6fd449c-5f8d-4d86-6c71-946af104099f') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '72b15177-6a01-48c0-69ad-921f55454151') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '4f39df0d-c1d2-40b7-7781-5f21cc4998c7') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '50d50de5-0a71-4753-7284-95e70ee5aa06') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 160,
        "wires": [
            [
                "d8bce1c04efd54e3"
            ]
        ]
    },
    {
        "id": "27223687d7e6bf14",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "ANGOSTURA 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 120,
        "wires": []
    },
    {
        "id": "6abf639a22e789cd",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/aysen4",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 240,
        "wires": [
            [
                "253e077e1b3b28ab"
            ]
        ]
    },
    {
        "id": "253e077e1b3b28ab",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 240,
        "wires": [
            [
                "a2337430b69e099f"
            ]
        ]
    },
    {
        "id": "27346c8c7c12555c",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "a2337430b69e099f",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Aysen 4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "120",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 240,
        "wires": [
            [
                "4a76329cbda31000"
            ]
        ]
    },
    {
        "id": "4a76329cbda31000",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '5df3c5ca-15eb-47ea-671e-6140d106f5a7') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '3c9e92ae-70ef-4aad-4b40-58cde9bec7a7') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '77e131de-8d26-4c8d-7c01-ef1ae3f3ac30') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'af3a2f73-528e-4b91-5c98-6a5b5b4d32ee') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 240,
        "wires": [
            [
                "27346c8c7c12555c"
            ]
        ]
    },
    {
        "id": "71d7818addafd975",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "AYSEN 4 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 200,
        "wires": []
    },
    {
        "id": "3171b2b13f653ed4",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/brazoguardramiro",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "c592195bcab5e731"
            ]
        ]
    },
    {
        "id": "c592195bcab5e731",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 320,
        "wires": [
            [
                "cd00fd318307c13e"
            ]
        ]
    },
    {
        "id": "8b675576a7d9140a",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "cd00fd318307c13e",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Brazo Guardramiro",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "121",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 320,
        "wires": [
            [
                "3250c989579acdc0"
            ]
        ]
    },
    {
        "id": "3250c989579acdc0",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '56205a75-6858-472e-7601-627ec18e7b83') {\n            nombreModuloZona = '100';\n        }else if (currentItem.zones[0] === '17773584-6548-4b87-7fc8-4c0cf807e391') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '55493518-c15c-4baa-5374-89ebff3b5383') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === '2ab030cf-91af-4ca1-57c4-4ae3d1778ff7') {\n            nombreModuloZona = 'EXTERIOR100';\n        }else if (currentItem.zones[0] === '3c9e92ae-70ef-4aad-4b40-58cde9bec7a7') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === '04dbfc8a-ff43-4a8b-72dd-d9e806d2844c') {\n            nombreModuloZona = 'EXTERIOR200';\n        } else if (currentItem.zones[0] === '9824c787-23ef-4913-545e-416a6eecc74e') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else if (currentItem.zones[0] === '905e5a0d-f566-427d-63a8-520c9d827b5a') {\n            nombreModuloZona = 'ACTIVE_TRACKING100';\n        } else if (currentItem.zones[0] === '69b95b43-bb84-4019-6596-9c1b25a2757d') {\n            nombreModuloZona = 'ACTIVE_TRACKING200';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING100' o 'ACTIVE_TRACKING200'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING' && nombreModuloZona !== 'ACTIVE_TRACKING100' \n        && nombreModuloZona !== 'ACTIVE_TRACKING200') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100'\n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || ''\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100'\n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100'\n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 320,
        "wires": [
            [
                "8b675576a7d9140a"
            ]
        ]
    },
    {
        "id": "ef4fc2e5c6155082",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "BRAZO GUARDRAMIRO 🐟 🟢",
        "info": "",
        "x": 170,
        "y": 280,
        "wires": []
    },
    {
        "id": "edc1bbbc0ee041dc",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/brazohojeda",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "b4adc8c45d6692df"
            ]
        ]
    },
    {
        "id": "b4adc8c45d6692df",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 400,
        "wires": [
            [
                "50ee220b74250d0e"
            ]
        ]
    },
    {
        "id": "cda477b2d40a5223",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "50ee220b74250d0e",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Brazo Hojeda",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "122",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 400,
        "wires": [
            [
                "dd530615e695d60c"
            ]
        ]
    },
    {
        "id": "dd530615e695d60c",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'b116b092-70e9-4fac-6d93-a460f9a215f7') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'e08f3cde-c985-4864-67be-63574509c569') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '2f80be27-755a-44a4-4340-b75d62f80b00') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '9061fc6e-0b49-4185-6388-18051d93eabc') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 400,
        "wires": [
            [
                "cda477b2d40a5223"
            ]
        ]
    },
    {
        "id": "6ce3f789aa8ee8bb",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "BRAZO HOJEDA 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 360,
        "wires": []
    },
    {
        "id": "9efebea29254a77c",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/brazohojeda2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 480,
        "wires": [
            [
                "720cd5376981a4df"
            ]
        ]
    },
    {
        "id": "720cd5376981a4df",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 480,
        "wires": [
            [
                "d63fdb5fc2e8558e"
            ]
        ]
    },
    {
        "id": "22350e942072259f",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "d63fdb5fc2e8558e",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Brazo Hojeda 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "123",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 480,
        "wires": [
            [
                "553ed126473a4e93"
            ]
        ]
    },
    {
        "id": "553ed126473a4e93",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'f2c061fc-7780-4229-41ef-3a1fa11f53cb') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '91fef178-7b26-4bb7-5e47-0ffbe0934987') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'f9059498-ce8a-49dd-58dd-fe2e0ace3fab') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 480,
        "wires": [
            [
                "22350e942072259f"
            ]
        ]
    },
    {
        "id": "3fc112eeab70e439",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "BRAZO HOJEDA 2 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 440,
        "wires": []
    },
    {
        "id": "8a397b5da0df3da8",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/caceres",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 560,
        "wires": [
            [
                "847ed0eefb7ad72f"
            ]
        ]
    },
    {
        "id": "847ed0eefb7ad72f",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 560,
        "wires": [
            [
                "b675e3402e15d38d"
            ]
        ]
    },
    {
        "id": "2d7c066ad5490aff",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b675e3402e15d38d",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Caceres",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "124",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 560,
        "wires": [
            [
                "4301310231db82b1"
            ]
        ]
    },
    {
        "id": "4301310231db82b1",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'ac4a5b41-2a1c-4a47-65d5-a0781e66416f') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '1de453f2-0ebb-4230-796c-4b637ed70e8b') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '3cc88abe-5031-4799-4aee-3ff56c3c2260') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '4767e03a-9866-4483-5787-a02998aaedc2') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 560,
        "wires": [
            [
                "2d7c066ad5490aff"
            ]
        ]
    },
    {
        "id": "c97a003fb683071b",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "CACERES 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "ff0f9af9838d5a54",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/canalad6",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 640,
        "wires": [
            [
                "d232f84641743e09"
            ]
        ]
    },
    {
        "id": "d232f84641743e09",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 640,
        "wires": [
            [
                "b124df391d8d3f32"
            ]
        ]
    },
    {
        "id": "25fc684fbd32b547",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "b124df391d8d3f32",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Canalad 6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "125",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 640,
        "wires": [
            [
                "bb2a709627b840c6"
            ]
        ]
    },
    {
        "id": "bb2a709627b840c6",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '85e04d09-ff07-4239-43ba-e468c1770f6d') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'aa23ea56-01b3-4049-4e29-e4066c0dd5b2') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '12cad551-a9e5-46f5-4313-291356539a59') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '2fed287c-55e4-4ef6-4654-fb0a9694f1e6') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 640,
        "wires": [
            [
                "25fc684fbd32b547"
            ]
        ]
    },
    {
        "id": "ceae349d4c32f5a2",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "CANALAD 6 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 600,
        "wires": []
    },
    {
        "id": "4512b8a059e7d01c",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/canalpereznorte",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "d29c8f9657d14a20"
            ]
        ]
    },
    {
        "id": "d29c8f9657d14a20",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 720,
        "wires": [
            [
                "64956d6ec5f37ef4"
            ]
        ]
    },
    {
        "id": "beb22585cc3e01e7",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "64956d6ec5f37ef4",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Canal Perez Norte",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "126",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 720,
        "wires": [
            [
                "5245e971525c8110"
            ]
        ]
    },
    {
        "id": "5245e971525c8110",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '30fa9ca3-ea8f-4db0-70cd-2aaccd2ea0ac') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '3bfe21da-dd0a-44b1-719f-8e1beaba1c63') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'ec251a7a-04ea-49e0-6f73-572fcb06f382') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '9b80128f-7d2c-4f71-43ac-e07755549c38') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 720,
        "wires": [
            [
                "beb22585cc3e01e7"
            ]
        ]
    },
    {
        "id": "59c81a45b3aef9f8",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "CANAL PEREZ NORTE 🐟 🟢",
        "info": "",
        "x": 170,
        "y": 680,
        "wires": []
    },
    {
        "id": "99daec0835113066",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/cascada",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 800,
        "wires": [
            [
                "602c98869e2c44bc"
            ]
        ]
    },
    {
        "id": "602c98869e2c44bc",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 800,
        "wires": [
            [
                "c64911cb8a848aca"
            ]
        ]
    },
    {
        "id": "7eb170c0ba590bf7",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "c64911cb8a848aca",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Cascada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "127",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 800,
        "wires": [
            [
                "3c088153ec4579db"
            ]
        ]
    },
    {
        "id": "3c088153ec4579db",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '96bf214d-0740-4a6d-7022-cbf0ffd9926a') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'f374ff18-d4f2-4996-578a-8accfbab932d') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'f0c6dd98-c1ab-4c54-782e-4d1660211cb4') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '0e72211e-fd79-42ea-5bb2-6afc7b82ae30') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 800,
        "wires": [
            [
                "7eb170c0ba590bf7"
            ]
        ]
    },
    {
        "id": "e597fc4cafb599af",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "CASCADA 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 760,
        "wires": []
    },
    {
        "id": "c2144fa868525962",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/concoto",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 880,
        "wires": [
            [
                "82255983228ab81d"
            ]
        ]
    },
    {
        "id": "82255983228ab81d",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 880,
        "wires": [
            [
                "d9afeeed0c9bdf28"
            ]
        ]
    },
    {
        "id": "2715c96427ee03ee",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "d9afeeed0c9bdf28",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Concoto",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "128",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 880,
        "wires": [
            [
                "897c7b8c9c8da463"
            ]
        ]
    },
    {
        "id": "897c7b8c9c8da463",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '28758ea6-fb87-4bc1-4ab0-84632cde4b76') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '31214ae2-24c7-4c6a-68fd-f7e8931c4d07') {\n            nombreModuloZona = '200';\n        }else if (currentItem.zones[0] === '7d2328ac-10fa-497c-6d2a-5a065e239243') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '08ea1613-14c6-4a05-54f1-a653e522af58') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '46ad6750-1e40-458f-418b-e30000d7c6eb') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 880,
        "wires": [
            [
                "2715c96427ee03ee"
            ]
        ]
    },
    {
        "id": "ff6de8cb2005d282",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "CONCOTO 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 840,
        "wires": []
    },
    {
        "id": "ad78bd2acde159fe",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/elefante",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 960,
        "wires": [
            [
                "a290c1e6e45fd9e1"
            ]
        ]
    },
    {
        "id": "a290c1e6e45fd9e1",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 960,
        "wires": [
            [
                "d094b2db49a613d2"
            ]
        ]
    },
    {
        "id": "d4a78c297dbdca54",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "d094b2db49a613d2",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Elefante",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "129",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 960,
        "wires": [
            [
                "3ea0f6f3c6426657"
            ]
        ]
    },
    {
        "id": "3ea0f6f3c6426657",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '23cdfdad-c460-4973-504a-de3b911308f8') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '2a0e3b9e-7e88-48dc-72b2-1859a7ee3325') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'bd2364a8-ba4d-4348-748f-7857d49e8791') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '472da4a1-d244-413c-7707-a83375aa760d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        \n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 960,
        "wires": [
            [
                "d4a78c297dbdca54"
            ]
        ]
    },
    {
        "id": "ebd598b15151909f",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "ELEFANTE 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 920,
        "wires": []
    },
    {
        "id": "40d2649fee783c1f",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/esterofrio",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1040,
        "wires": [
            [
                "b5d6d9a28d013c22"
            ]
        ]
    },
    {
        "id": "b5d6d9a28d013c22",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1040,
        "wires": [
            [
                "05b96ff2ea2ccaef"
            ]
        ]
    },
    {
        "id": "6a7584cf3111e6f5",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "05b96ff2ea2ccaef",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Estero Frio",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "130",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1040,
        "wires": [
            [
                "85632069ab187238"
            ]
        ]
    },
    {
        "id": "85632069ab187238",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4c4adc9f-1abe-42c4-6726-dbcd504398e4') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '0898af5c-1bfe-4f47-54af-f59682d6bacc') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'db76287c-f3c5-4130-4c8f-0e0aeb33898b') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '15ef3e6b-a8f1-4174-5b57-b96e6cd6574e') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1040,
        "wires": [
            [
                "6a7584cf3111e6f5"
            ]
        ]
    },
    {
        "id": "bf3cfd53cd38eb19",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "ESTERO FRIO 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 1000,
        "wires": []
    },
    {
        "id": "8f2e323d0e60070c",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/fislaswagner",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1120,
        "wires": [
            [
                "1f314659a6b580a7"
            ]
        ]
    },
    {
        "id": "1f314659a6b580a7",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1120,
        "wires": [
            [
                "b7d93aae168a115b"
            ]
        ]
    },
    {
        "id": "2a97a22818d2dc5e",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "b7d93aae168a115b",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Frente Islas Wagner",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "131",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1120,
        "wires": [
            [
                "c33f5bf8dc2ff110"
            ]
        ]
    },
    {
        "id": "c33f5bf8dc2ff110",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '93d6f88d-f7be-4559-6a16-9c7c75d99551') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'a6d0c3b9-2995-4b11-6e87-60b06e429012') {\n            nombreModuloZona = '200';\n        }else if (currentItem.zones[0] === 'f1e50c10-4563-455d-68ce-e1e1235634c7') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'e8d00714-b675-4384-7e90-458a47541125') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'fe794929-16d4-4059-70f7-b17454e7c6a2') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1120,
        "wires": [
            [
                "2a97a22818d2dc5e"
            ]
        ]
    },
    {
        "id": "145ce430705c11c0",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "FRENTE ISLAS WAGNER 🐟 🟢",
        "info": "",
        "x": 180,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e0222b7371e057dd",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/graffer",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1200,
        "wires": [
            [
                "d1e73b35ddcb71e5"
            ]
        ]
    },
    {
        "id": "d1e73b35ddcb71e5",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1200,
        "wires": [
            [
                "d08f6f8debb5ba8a"
            ]
        ]
    },
    {
        "id": "a908ca72522ce735",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "d08f6f8debb5ba8a",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Graffer",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "132",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1200,
        "wires": [
            [
                "08aef76d7038869e"
            ]
        ]
    },
    {
        "id": "08aef76d7038869e",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'bdb5f803-1d2e-4ec2-6e7f-c922b0ee5a06') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '32a10fa3-15b1-4f58-45d5-55e7c9dc05f9') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'a709d5bf-ff32-4a83-7fe6-2a32114d8991') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'd020ee3f-bb39-47cf-7414-dec973167bab') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1200,
        "wires": [
            [
                "a908ca72522ce735"
            ]
        ]
    },
    {
        "id": "da9e87fd3e63976e",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "GRAFFER 🐟 🔴",
        "info": "",
        "x": 130,
        "y": 1160,
        "wires": []
    },
    {
        "id": "39a0f83f8ad184f5",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/herradura",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1280,
        "wires": [
            [
                "bad9cf21af36197f"
            ]
        ]
    },
    {
        "id": "bad9cf21af36197f",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1280,
        "wires": [
            [
                "674189d75752af64"
            ]
        ]
    },
    {
        "id": "de579533252f7785",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "674189d75752af64",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Herradura",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "133",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1280,
        "wires": [
            [
                "f91041dba98f5831"
            ]
        ]
    },
    {
        "id": "f91041dba98f5831",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '436e4287-daa8-4610-7cb7-a9b7d0261e9b') {\n            nombreModuloZona = '100';\n        }else if (currentItem.zones[0] === '7497e4a7-5d42-4630-60b2-719afef2eab0') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '28c06adb-5339-4476-61dd-b14392936c40') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '85126ed3-bfee-45a5-6b44-dd5b0dc06b02') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '181d05cb-b74e-4363-418e-84398b321137') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1280,
        "wires": [
            [
                "de579533252f7785"
            ]
        ]
    },
    {
        "id": "12366c0da8fab0d3",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "HERRADURA 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 1240,
        "wires": []
    },
    {
        "id": "17e9cddda9f1e78c",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/huelmo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1360,
        "wires": [
            [
                "a5ebe262bb07af77"
            ]
        ]
    },
    {
        "id": "a5ebe262bb07af77",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1360,
        "wires": [
            [
                "d1245d43c31da181"
            ]
        ]
    },
    {
        "id": "17f7dd301547dc47",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "d1245d43c31da181",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Huelmo",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "134",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1360,
        "wires": [
            [
                "4474d17946e81933"
            ]
        ]
    },
    {
        "id": "4474d17946e81933",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '2aab0bba-13e3-4414-71a2-6d9c02e3c4ce') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '52bee7c6-02d2-4d82-5455-f42d20adc80b') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '1fe1688e-a99e-416a-62a1-a5d359d4af42') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '32e60a2d-6501-4776-7b9d-e1934f400362') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'd8b0f076-70f1-49a4-452f-2eead1c9911b') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {       \n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,    \n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1360,
        "wires": [
            [
                "17f7dd301547dc47"
            ]
        ]
    },
    {
        "id": "245ed9ea3e95e7ee",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "HUELMO 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1320,
        "wires": []
    },
    {
        "id": "ad3bf14a381c6f98",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/huenquillahue",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1440,
        "wires": [
            [
                "633f5e646ba944b0"
            ]
        ]
    },
    {
        "id": "633f5e646ba944b0",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1440,
        "wires": [
            [
                "884950c97b7ed73d"
            ]
        ]
    },
    {
        "id": "53bc1f4cc5e1db4c",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "884950c97b7ed73d",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Huenquillahue",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "135",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1440,
        "wires": [
            [
                "a690761a2097a3ef"
            ]
        ]
    },
    {
        "id": "a690761a2097a3ef",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '9525d165-b6fb-4f68-6a43-fbb293ca13e5') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '13e101ee-6ab5-4baa-4915-735db0bef481') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === 'd371c139-22d5-4e15-4489-ea87aa8f8379') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'd5ab2a19-d045-430c-4f72-df0984044908') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '2a4ef2ee-c884-4ce6-4654-0e2476f882a8') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1440,
        "wires": [
            [
                "53bc1f4cc5e1db4c"
            ]
        ]
    },
    {
        "id": "a9dd6b6dcca48815",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "HUENQUILLAHUE 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 1400,
        "wires": []
    },
    {
        "id": "6593bd75beda75dd",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/islasanchezaqua",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1520,
        "wires": [
            [
                "b81f84ebca7c8927"
            ]
        ]
    },
    {
        "id": "b81f84ebca7c8927",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1520,
        "wires": [
            [
                "08316eb480c08de6"
            ]
        ]
    },
    {
        "id": "ab8a3f6f0ce946a7",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "08316eb480c08de6",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Isla Sanchez",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "136",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1520,
        "wires": [
            [
                "c334995d6f768c2a"
            ]
        ]
    },
    {
        "id": "c334995d6f768c2a",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'dc8f384d-8c27-4c14-5ccb-416c7bdf005c') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '5fd8e52e-b8ba-4344-4469-91fc53d83c76') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '144e3dd5-92a6-47e9-6907-7146e6b9cea7') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '67e237f9-e665-42d9-679f-9ceba46fa9bb') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil,\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1520,
        "wires": [
            [
                "ab8a3f6f0ce946a7"
            ]
        ]
    },
    {
        "id": "b710f03e63090a5b",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "ISLA SANCHEZ 🐟 🔴",
        "info": "",
        "x": 140,
        "y": 1480,
        "wires": []
    },
    {
        "id": "cbe8bd010c48cc3b",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/ladrilleros",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1600,
        "wires": [
            [
                "5f043f9eab093bea"
            ]
        ]
    },
    {
        "id": "5f043f9eab093bea",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1600,
        "wires": [
            [
                "b2d0aedbaafe6176"
            ]
        ]
    },
    {
        "id": "3eb1a225b7448ed8",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "b2d0aedbaafe6176",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Ladrilleros",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "137",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1600,
        "wires": [
            [
                "8c756368c728d6f1"
            ]
        ]
    },
    {
        "id": "8c756368c728d6f1",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4d68fc37-4169-42ce-5e35-11e3d191726d') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'dc35cd27-c090-416b-5ea3-a8dec3422a09') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === 'c9ffd728-46b1-4863-4d4d-79fc6688c38d') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'dc12514a-e3ee-441a-585a-cc2bf928c926') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '02461d86-4bd8-4df0-4c63-c6707ea5abe4') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1600,
        "wires": [
            [
                "3eb1a225b7448ed8"
            ]
        ]
    },
    {
        "id": "aa2231f2879b3179",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "LADRILLEROS 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 1560,
        "wires": []
    },
    {
        "id": "257db3114ee1d7d9",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/marta",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1680,
        "wires": [
            [
                "81f29545925103c3"
            ]
        ]
    },
    {
        "id": "81f29545925103c3",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1680,
        "wires": [
            [
                "4b1182cd869a1a0f"
            ]
        ]
    },
    {
        "id": "d7357bf36b8c26ab",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "4b1182cd869a1a0f",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Marta",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "138",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1680,
        "wires": [
            [
                "ca77d82483dbbda9"
            ]
        ]
    },
    {
        "id": "ca77d82483dbbda9",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4d50324f-9862-4e7c-52ee-ecaffc13b955') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'fe7ccd77-85b6-45ec-5911-152fa57a8563') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '82190faf-a191-45a7-423f-b379a24e2505') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'ae4417cc-a08b-4e54-6aae-20b2e3fd0408') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1680,
        "wires": [
            [
                "d7357bf36b8c26ab"
            ]
        ]
    },
    {
        "id": "86411b4a71775a46",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "MARTA 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1640,
        "wires": []
    },
    {
        "id": "2d48137b8328b715",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/pamela",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1760,
        "wires": [
            [
                "dd78c67d136dc0de"
            ]
        ]
    },
    {
        "id": "dd78c67d136dc0de",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1760,
        "wires": [
            [
                "29ac82b6acbfd287"
            ]
        ]
    },
    {
        "id": "d1470fc36b50b133",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "29ac82b6acbfd287",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pamela",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "139",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1760,
        "wires": [
            [
                "355c01f862481acc"
            ]
        ]
    },
    {
        "id": "355c01f862481acc",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'f98b0c28-cef2-42fc-6af9-86262092feee') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '7d0626b8-ef3f-4a99-7371-1be5e289c978') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '12b679e2-453a-450c-5a23-4edcf4ca386d') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'a3b5c35a-92e2-446c-46ee-21fdecedec33') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;    \n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }    \n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1760,
        "wires": [
            [
                "d1470fc36b50b133"
            ]
        ]
    },
    {
        "id": "803eff0b59825792",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "PAMELA 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1720,
        "wires": []
    },
    {
        "id": "b0f6749056f2ccc7",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/pangal1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1840,
        "wires": [
            [
                "b5dd5cf95e5fe438"
            ]
        ]
    },
    {
        "id": "b5dd5cf95e5fe438",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1840,
        "wires": [
            [
                "342d9b26cd5bb413"
            ]
        ]
    },
    {
        "id": "3db24510188119c8",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "342d9b26cd5bb413",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pangal 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "140",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1840,
        "wires": [
            [
                "6ae642a4d49b7af9"
            ]
        ]
    },
    {
        "id": "6ae642a4d49b7af9",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'e34977b1-2b5a-45fd-50ed-e46fc4168e40') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'faaf428e-633e-44dd-6274-caa57279b5ed') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '093b528b-5237-4e7b-6686-3c2ddd94d012') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '186248fa-1997-4587-4eed-65b2df66e7e4') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1840,
        "wires": [
            [
                "3db24510188119c8"
            ]
        ]
    },
    {
        "id": "c59064a45f7069b4",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "PANGAL 1 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 1800,
        "wires": []
    },
    {
        "id": "c95f74be37c9ea94",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/pangal2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1920,
        "wires": [
            [
                "0d3a33f780f4699d"
            ]
        ]
    },
    {
        "id": "0d3a33f780f4699d",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1920,
        "wires": [
            [
                "a9aa90fc0782a9ef"
            ]
        ]
    },
    {
        "id": "f90c0b3583ce1358",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "a9aa90fc0782a9ef",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pangal 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "141",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1920,
        "wires": [
            [
                "84e4f2591336904e"
            ]
        ]
    },
    {
        "id": "84e4f2591336904e",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '7fbe2ba2-86d5-46ed-40d7-c774977ec291') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'ed3f6cda-e15c-4305-52af-efbb4a1d4acb') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '67540a91-337b-47b7-7990-725ce6e945cb') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === 'bfa3fe1b-f464-4a47-5cb5-7fa83c569c6b') {\n            nombreModuloZona = 'EXTERIOR100';\n        } else if (currentItem.zones[0] === 'ff5fad04-77ad-4634-77b7-cfbb4193eba2') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === '1349cc45-2482-488e-473f-a4eefa2782f5') {\n            nombreModuloZona = 'EXTERIOR200';\n        } else if (currentItem.zones[0] === 'c494c96a-a3f2-44d6-5de2-1d208363cc0f') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1920,
        "wires": [
            [
                "f90c0b3583ce1358"
            ]
        ]
    },
    {
        "id": "dd4a6e0ac01a2671",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "PANGAL 2 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 1880,
        "wires": []
    },
    {
        "id": "7925d89cc84a1f8c",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/refugio",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2000,
        "wires": [
            [
                "9894f10799fb318a"
            ]
        ]
    },
    {
        "id": "9894f10799fb318a",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2000,
        "wires": [
            [
                "a1362ff3f4e68258"
            ]
        ]
    },
    {
        "id": "3ddfd57812f26288",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "a1362ff3f4e68258",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Refugio",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "142",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2000,
        "wires": [
            [
                "2ec3dc1c38891ed6"
            ]
        ]
    },
    {
        "id": "2ec3dc1c38891ed6",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '427b9d05-da9b-4f99-555d-d7fd49218db9') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '639d76bb-84ce-4ba1-6a59-ecf0191ec520') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '02684e44-d900-4cf8-77eb-a38e467abd3c') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2000,
        "wires": [
            [
                "3ddfd57812f26288"
            ]
        ]
    },
    {
        "id": "e5eb4cfc9dbdcabd",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "REFUGIO 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1960,
        "wires": []
    },
    {
        "id": "b302aa76a57f89ee",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/serrano",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2080,
        "wires": [
            [
                "36e9b47659ef14c5"
            ]
        ]
    },
    {
        "id": "36e9b47659ef14c5",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2080,
        "wires": [
            [
                "b221843462d7303a"
            ]
        ]
    },
    {
        "id": "a9cd579aa43ba5c7",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "b221843462d7303a",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Serrano",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "143",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2080,
        "wires": [
            [
                "b4bd4af5829e367b"
            ]
        ]
    },
    {
        "id": "b4bd4af5829e367b",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '04f83931-97ce-45e3-6202-3d60b9c1a993') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'c659e24e-8d24-4b57-6821-168baa4973e9') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'b75eae40-6107-424c-6530-29adb77057fd') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '48e44b0c-36f7-4bf2-7d1f-dacfed4ae634') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2080,
        "wires": [
            [
                "a9cd579aa43ba5c7"
            ]
        ]
    },
    {
        "id": "bac8172926838a7d",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "SERRANO 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2040,
        "wires": []
    },
    {
        "id": "44bc992f1c674830",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/staines2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2160,
        "wires": [
            [
                "daf01806fbb0b01e"
            ]
        ]
    },
    {
        "id": "daf01806fbb0b01e",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2160,
        "wires": [
            [
                "87ea924ab72c61dc"
            ]
        ]
    },
    {
        "id": "92c99f55df0f4370",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "87ea924ab72c61dc",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Staines 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "144",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2160,
        "wires": [
            [
                "fe8e2d664d5d5ffa"
            ]
        ]
    },
    {
        "id": "fe8e2d664d5d5ffa",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '79d57fbb-4f86-4b77-74a6-41a1f6a26366') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '2195739d-631c-4580-5af3-678f64d8dfdc') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '2b9e3368-fcdc-42cb-7d88-ecf92d70ee65') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '7cca3aeb-7f93-429a-7321-4ed41518744d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {       \n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2160,
        "wires": [
            [
                "92c99f55df0f4370"
            ]
        ]
    },
    {
        "id": "f36cd5c12eddd243",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "STAINES 2 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2120,
        "wires": []
    },
    {
        "id": "84c600b157fe51da",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/teguel1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2240,
        "wires": [
            [
                "d98d2b7e429cd894"
            ]
        ]
    },
    {
        "id": "d98d2b7e429cd894",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2240,
        "wires": [
            [
                "9d4a2775d19c958a"
            ]
        ]
    },
    {
        "id": "5053291a085ef007",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "9d4a2775d19c958a",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Teguel 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "145",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2240,
        "wires": [
            [
                "f017f45f70238c0f"
            ]
        ]
    },
    {
        "id": "f017f45f70238c0f",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'fde3ed65-a309-4eb5-5c5c-a321b5293cdb') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'aff0a432-9ea2-4e8d-756d-ad4a71516cc6') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c0765270-24da-4c2f-6dde-d8bc208bcb0f') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '6d6b1423-545f-4a87-51e1-22843bcaf66c') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2240,
        "wires": [
            [
                "5053291a085ef007"
            ]
        ]
    },
    {
        "id": "97f3342b0278fe1b",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "TEGUEL 1 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2200,
        "wires": []
    },
    {
        "id": "bf60d8cabe72b6be",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/teguel3",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2320,
        "wires": [
            [
                "d1722001bfb76a77"
            ]
        ]
    },
    {
        "id": "d1722001bfb76a77",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2320,
        "wires": [
            [
                "4f33465e2f9bc6f5"
            ]
        ]
    },
    {
        "id": "3e6c1dea1467721d",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "4f33465e2f9bc6f5",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Teguel 3",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "146",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2320,
        "wires": [
            [
                "2cf208c2e8d1ea51"
            ]
        ]
    },
    {
        "id": "2cf208c2e8d1ea51",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4356d915-27db-41ce-4fcf-6bb591720acf') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '55bd80cd-fe6d-41c9-4186-d021866021ee') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'babe5eab-a7df-4312-4ed4-289bd12b8d6a') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'fbb128f0-6ac9-4d26-6a97-3798eebc4c11') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil,\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2320,
        "wires": [
            [
                "3e6c1dea1467721d"
            ]
        ]
    },
    {
        "id": "fcb87c23a392163f",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "TEGUEL 3 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2280,
        "wires": []
    },
    {
        "id": "33ab9d793a4c398e",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/teresa1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2400,
        "wires": [
            [
                "3abfd1070755e101"
            ]
        ]
    },
    {
        "id": "3abfd1070755e101",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2400,
        "wires": [
            [
                "7b6020af5bfbd6db"
            ]
        ]
    },
    {
        "id": "18a326d618fb0f65",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "7b6020af5bfbd6db",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Teresa 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "147",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2400,
        "wires": [
            [
                "412053a4f8b674c0"
            ]
        ]
    },
    {
        "id": "412053a4f8b674c0",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '16396220-b35c-4558-5451-e6c7ec9000c2') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '8c407982-1ffe-4cb1-7467-3f32e403cf23') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '15e6e855-b7a7-43b3-4508-01ae9ca12fbd') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '7f6bf50c-b6df-43bc-5ddb-37229fcccd3e') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2400,
        "wires": [
            [
                "18a326d618fb0f65"
            ]
        ]
    },
    {
        "id": "19d3425130fafa96",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "TERESA 1 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2360,
        "wires": []
    },
    {
        "id": "33def8db94717a37",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/valverde6",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2480,
        "wires": [
            [
                "abf899e781fbf0db"
            ]
        ]
    },
    {
        "id": "abf899e781fbf0db",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2480,
        "wires": [
            [
                "747dd96f0b77bf01"
            ]
        ]
    },
    {
        "id": "41939316f45b2bd0",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2480,
        "wires": [
            []
        ]
    },
    {
        "id": "747dd96f0b77bf01",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Valverde 6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "148",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2480,
        "wires": [
            [
                "ecb83714055bb3cf"
            ]
        ]
    },
    {
        "id": "ecb83714055bb3cf",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '04f17a82-92ad-46eb-496b-bd333e872b89') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '787b2829-a265-40cd-5f9c-93eedc988b6f') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c3993fe2-481b-4740-7afe-c5ae4ceeb2e8') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'ca4ff249-3200-462a-62ae-0644c7f4811d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2480,
        "wires": [
            [
                "41939316f45b2bd0"
            ]
        ]
    },
    {
        "id": "71da50ae2cbe8f90",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "VALVERDE 6 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 2440,
        "wires": []
    },
    {
        "id": "8cf404a168f24373",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/vicunamackenna",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2560,
        "wires": [
            [
                "a467a2da016a5b01"
            ]
        ]
    },
    {
        "id": "a467a2da016a5b01",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2560,
        "wires": [
            [
                "ec4a73bd73124753"
            ]
        ]
    },
    {
        "id": "81b53f2077b43315",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "ec4a73bd73124753",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Vicuña Mackenna",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "149",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2560,
        "wires": [
            [
                "79daef24e8dc0384"
            ]
        ]
    },
    {
        "id": "79daef24e8dc0384",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '34bf3368-bb32-41e3-54eb-703714285bf4') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '1d86783c-296f-4044-42e8-e09d5263f745') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === 'fbd8ce18-ec3d-4a75-48bf-cf82741330eb') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === '2945d446-4c8b-4521-4295-1642ba11430f') {\n            nombreModuloZona = 'EXTERIOR100';\n        } else if (currentItem.zones[0] === 'c95839ae-cf1b-4866-53aa-ee455fdd0c00') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === '08fa4eb8-99b3-4e67-7294-f1f97fd68513') {\n            nombreModuloZona = 'EXTERIOR200';\n        }else if (currentItem.zones[0] === 'b61d82e3-3989-4ee0-6897-332093096c74') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2560,
        "wires": [
            [
                "81b53f2077b43315"
            ]
        ]
    },
    {
        "id": "b9f0f9e99d1b5d09",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "VICUNA MACKENA 🐟 🟢",
        "info": "",
        "x": 160,
        "y": 2520,
        "wires": []
    },
    {
        "id": "30cc9dd5f014e986",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/marchant",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2640,
        "wires": [
            [
                "6200fef698369ff2"
            ]
        ]
    },
    {
        "id": "6200fef698369ff2",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2640,
        "wires": [
            [
                "be334ba30656f2a8"
            ]
        ]
    },
    {
        "id": "716bb59540728407",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "be334ba30656f2a8",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Marchant",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "150",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2640,
        "wires": [
            [
                "8e7534b231d8e71c"
            ]
        ]
    },
    {
        "id": "8e7534b231d8e71c",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '40749aa3-9616-4ca8-701f-a900786a939b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '0aeef2cf-e7a8-40a2-7676-bc0a4fff13e8') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'e2c098ff-7f12-4e88-4ade-2fcb3eee1300') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '69763286-f269-4eb3-7f65-0d4b1f1cfb36') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2640,
        "wires": [
            [
                "716bb59540728407"
            ]
        ]
    },
    {
        "id": "2c2cb38c43855aa0",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "MARCHANT 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2600,
        "wires": []
    },
    {
        "id": "c7d58aa4b3dd329c",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/wagner1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2720,
        "wires": [
            [
                "d6abafa23d49ac87"
            ]
        ]
    },
    {
        "id": "d6abafa23d49ac87",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2720,
        "wires": [
            [
                "65de7c06fe1d682d"
            ]
        ]
    },
    {
        "id": "d304e5e0859b72b7",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "65de7c06fe1d682d",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Wagner1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "151",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2720,
        "wires": [
            [
                "f6d569f55c907edc"
            ]
        ]
    },
    {
        "id": "f6d569f55c907edc",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '2857e321-2446-45dd-73a8-ff0eead59bcc') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'eca5df23-6d8a-4200-69bf-9cec30a8abe2') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c876e388-afe7-473f-4e3e-e2e8af2f6913') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '60d9f5bf-5230-4778-5ac2-7a26c0732676') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2720,
        "wires": [
            [
                "d304e5e0859b72b7"
            ]
        ]
    },
    {
        "id": "f9cacdddf6086f96",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "WAGNER1 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2680,
        "wires": []
    },
    {
        "id": "17b6c8a8179cddb5",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/gertrudis1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2800,
        "wires": [
            [
                "036805a5120cc076"
            ]
        ]
    },
    {
        "id": "036805a5120cc076",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2800,
        "wires": [
            [
                "c4c99e88741e40f1"
            ]
        ]
    },
    {
        "id": "da07e0e7a21105a8",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "c4c99e88741e40f1",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Gertrudis 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "157",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2800,
        "wires": [
            [
                "c50de9a18992ca25"
            ]
        ]
    },
    {
        "id": "c50de9a18992ca25",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'f18e734f-e446-47a4-45a2-070699611bdb') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '66ab92ad-68a2-4902-4138-5d5d1002b0af') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '92aedf60-8349-4ad7-5b10-96857bf9db90') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'c2e0d9e6-f6a1-4acb-5775-c1fac3301f1b') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2800,
        "wires": [
            [
                "da07e0e7a21105a8"
            ]
        ]
    },
    {
        "id": "075c6b309f2d8217",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "GERTRUDIS1 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 2760,
        "wires": []
    },
    {
        "id": "ba3cde0fea49c55f",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/staines4",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2880,
        "wires": [
            [
                "b5e1a883b311f1bd"
            ]
        ]
    },
    {
        "id": "b5e1a883b311f1bd",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2880,
        "wires": [
            [
                "3313f281f3a0eeb3"
            ]
        ]
    },
    {
        "id": "b6bcf84bc4939fcc",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "3313f281f3a0eeb3",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Staines 4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "158",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2880,
        "wires": [
            [
                "ae0c7fadde6244db"
            ]
        ]
    },
    {
        "id": "ae0c7fadde6244db",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'fa69b4d6-4fad-4532-6beb-893df713b90d') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'c2fea819-98c9-4377-6b36-9f58d705948c') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '0256ae14-5901-4002-756d-e4db7a69315b') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === 'f1da9617-9325-43ca-742e-b326822b1f9c') {\n            nombreModuloZona = 'EXTERIOR100';\n        } else if (currentItem.zones[0] === '70862b4f-a87d-4586-513a-557c6e4b37a1') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === '924f6e3a-f8c1-4054-49cd-b1f45a4cff30') {\n            nombreModuloZona = 'EXTERIOR200';\n        }else if (currentItem.zones[0] === '80a882a3-7027-441c-6cdf-45159bbf809a') {\n            nombreModuloZona = 'ACTIVETRACKING100';\n        }else if (currentItem.zones[0] === '6b630572-39c7-4da4-7bc4-f28eeffaa269') {\n            nombreModuloZona = 'ACTIVETRACKING200';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n         // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVETRACKING100' && nombreModuloZona !== 'ACTIVETRACKING200') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2880,
        "wires": [
            [
                "b6bcf84bc4939fcc"
            ]
        ]
    },
    {
        "id": "1810b40949767410",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "STAINES4 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2840,
        "wires": []
    },
    {
        "id": "f5837d708f79d797",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/tahuenahuec",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2960,
        "wires": [
            [
                "d15a8940344d7e60"
            ]
        ]
    },
    {
        "id": "d15a8940344d7e60",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2960,
        "wires": [
            [
                "1e702fe6e2e88fb2"
            ]
        ]
    },
    {
        "id": "152ab950301d0f43",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2960,
        "wires": [
            []
        ]
    },
    {
        "id": "1e702fe6e2e88fb2",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Tahuenahuec",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "159",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2960,
        "wires": [
            [
                "f6f21a35fd909aae"
            ]
        ]
    },
    {
        "id": "f6f21a35fd909aae",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '73788143-fba7-481d-76d3-7dd79bb72e02') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'a3c7c69e-0763-40e2-4463-adf441f24478') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'a59f9a8e-7ecb-4417-519e-85c23e2fbf0a') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '2f2722ed-f7fd-41f5-69de-d0f5abc2464b') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2960,
        "wires": [
            [
                "152ab950301d0f43"
            ]
        ]
    },
    {
        "id": "ccd2c3ac46e4664d",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "TAHUENAHUEC 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 2920,
        "wires": []
    },
    {
        "id": "d7de9cbcf19a6c2a",
        "type": "http in",
        "z": "6971f32f5bf576d7",
        "name": "NIO",
        "url": "/api/spotter/melchor1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 3040,
        "wires": [
            [
                "ad18b88cb4dd3e76"
            ]
        ]
    },
    {
        "id": "ad18b88cb4dd3e76",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 3040,
        "wires": [
            [
                "8a3ead7169a02f51"
            ]
        ]
    },
    {
        "id": "fb2fdf4e268d06e5",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "8a3ead7169a02f51",
        "type": "change",
        "z": "6971f32f5bf576d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Melchor 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "166",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 3040,
        "wires": [
            [
                "345203fcd104612f"
            ]
        ]
    },
    {
        "id": "345203fcd104612f",
        "type": "function",
        "z": "6971f32f5bf576d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'b1c80a89-4a65-44e7-7e24-30e29d79c9e4') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '9bb5f381-eb75-4fbf-44f4-3297c7d1eefa') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'ef8f51b0-5935-4dbc-6f9e-48f38b2fc9f1') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'd07d4e95-ca01-4f0d-68a0-a028c8b7005f') {\n            nombreModuloZona = 'ACTIVETRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVETRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 3040,
        "wires": [
            [
                "fb2fdf4e268d06e5"
            ]
        ]
    },
    {
        "id": "a501283373b39246",
        "type": "comment",
        "z": "6971f32f5bf576d7",
        "name": "MELCHOR1 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 3000,
        "wires": []
    },
    {
        "id": "a2e29092a0850452",
        "type": "switch",
        "z": "c8614afdb1f3cea5",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 300,
        "wires": [
            [
                "e5be5030cd890df1"
            ],
            [
                "e5be5030cd890df1"
            ]
        ]
    },
    {
        "id": "3da3ac53112246ed",
        "type": "mongodb-collection",
        "z": "c8614afdb1f3cea5",
        "name": "findDB",
        "config": "ca9cd28b2860ccaa",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "193f85f3cd291f89"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "193f85f3cd291f89",
        "type": "function",
        "z": "c8614afdb1f3cea5",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 300,
        "wires": [
            [
                "a2e29092a0850452"
            ]
        ]
    },
    {
        "id": "e5be5030cd890df1",
        "type": "change",
        "z": "c8614afdb1f3cea5",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 300,
        "wires": [
            [
                "e37041033d5a108b"
            ]
        ]
    },
    {
        "id": "e37041033d5a108b",
        "type": "switch",
        "z": "c8614afdb1f3cea5",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 300,
        "wires": [
            [
                "ce2036558e63b5cc",
                "e9e25f431d6275b4"
            ],
            [
                "ce2036558e63b5cc",
                "d8882062f85f778f",
                "6c95ac5094def319",
                "e9e25f431d6275b4",
                "585643ee51b28af0"
            ]
        ]
    },
    {
        "id": "585643ee51b28af0",
        "type": "mongodb-collection",
        "z": "c8614afdb1f3cea5",
        "name": "insert_seguridad_movil",
        "config": "ca9cd28b2860ccaa",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1030,
        "y": 240,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "d8882062f85f778f",
        "type": "mongodb-collection",
        "z": "c8614afdb1f3cea5",
        "name": "insert_seguridad",
        "config": "ca9cd28b2860ccaa",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1050,
        "y": 200,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "ce2036558e63b5cc",
        "type": "mongodb-collection",
        "z": "c8614afdb1f3cea5",
        "name": "insert_seguridad_detalle",
        "config": "ca9cd28b2860ccaa",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1030,
        "y": 160,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "e9e25f431d6275b4",
        "type": "change",
        "z": "c8614afdb1f3cea5",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "6c95ac5094def319",
        "type": "change",
        "z": "c8614afdb1f3cea5",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "fd4a85ad671805a1",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/pocoihuen",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "6e098f0a0b391d42"
            ]
        ]
    },
    {
        "id": "6e098f0a0b391d42",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 120,
        "wires": [
            [
                "4c44c745b4a46921"
            ]
        ]
    },
    {
        "id": "207cc1c2fa372361",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4c44c745b4a46921",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pocoihuen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "107",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 120,
        "wires": [
            [
                "1db84140aac9e6b8"
            ]
        ]
    },
    {
        "id": "1db84140aac9e6b8",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n    for (var i = 0; i < arr.length; i++) {\n        var currentItem = arr[i];\n        if (currentItem.id !== undefined && currentItem.id !== null) {\n            var timestamp = new Date(currentItem.timestamp);\n            var formattedDateTime = formatDateTime(timestamp);\n\n            var nombreModuloZona;\n\n            if (currentItem.zones[0] === 'e66fa9b0-b417-4b76-4998-f7970374a37b') {\n                nombreModuloZona = '100';\n            } else if (currentItem.zones[0] === '00e657d7-826f-4958-5475-07a19f29f895') {\n                nombreModuloZona = 'INTERIOR';\n            } else if (currentItem.zones[0] === 'a17424f8-0ef5-4a43-4015-391c06bccbde') {\n                nombreModuloZona = 'EXTERIOR';\n            } else if (currentItem.zones[0] === 'b70ee8bc-90f6-4fb2-4d01-7b313ccd72e3') {\n                nombreModuloZona = 'ACTIVE_TRACKING';\n            }else {\n                nombreModuloZona = currentItem.zones[0];\n            }\n\n            // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n            if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n                \n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                \n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        } \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 120,
        "wires": [
            [
                "207cc1c2fa372361"
            ]
        ]
    },
    {
        "id": "5306e809c606953b",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "POCOIHUEN 🐟 🟢",
        "info": "",
        "x": 160,
        "y": 80,
        "wires": []
    },
    {
        "id": "a0c91af9a8d74934",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/contao",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "435dc3a890d3699f"
            ]
        ]
    },
    {
        "id": "435dc3a890d3699f",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 200,
        "wires": [
            [
                "ac5c839ddd7b35bb"
            ]
        ]
    },
    {
        "id": "15058e55eb255cac",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ac5c839ddd7b35bb",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Contao",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "108",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 200,
        "wires": [
            [
                "70665b2f716d13ad"
            ]
        ]
    },
    {
        "id": "70665b2f716d13ad",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '912eb136-60dd-4173-4b48-38d0dccd5fed') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'dede1a11-ffa6-47d8-7ba0-44f08d2de89c') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '77901925-e744-45b3-724f-3e3731bfe6bf') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'c6b6a04b-1e1b-4889-71bf-12a0f118389a') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 200,
        "wires": [
            [
                "15058e55eb255cac"
            ]
        ]
    },
    {
        "id": "a16bf7db914b9d2c",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "CONTAO 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 160,
        "wires": []
    },
    {
        "id": "5d75beb2613ba831",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/pirquen",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "63a38727c6273d48"
            ]
        ]
    },
    {
        "id": "63a38727c6273d48",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 280,
        "wires": [
            [
                "9674976fd787eb63"
            ]
        ]
    },
    {
        "id": "ae56eec225e7893b",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "9674976fd787eb63",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pirquen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "109",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 280,
        "wires": [
            [
                "78bf46029fe2feb5"
            ]
        ]
    },
    {
        "id": "78bf46029fe2feb5",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    //adelantar una hora por atraso del servidor 10.10.7.41\n    timestamp.setHours(timestamp.getHours() + 1);\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'c880ccae-6d38-4f32-6b98-3edaa66c4372') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '32e62643-7deb-4312-4f77-b88c369709fe') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '5e35c87a-1cc8-4ed5-7144-dead32e89f8a') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            modulo: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || ''\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            modulo: 'seguridad_detalle', \n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration,\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 280,
        "wires": [
            [
                "ae56eec225e7893b"
            ]
        ]
    },
    {
        "id": "7101ced502861998",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "PIRQUEN ❌ SIN CONEXION",
        "info": "",
        "x": 190,
        "y": 240,
        "wires": []
    },
    {
        "id": "f055c4e715751067",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/rollizofenix",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "a42b13dda272a565"
            ]
        ]
    },
    {
        "id": "a42b13dda272a565",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 440,
        "wires": [
            [
                "b1be6bf5f54b445d"
            ]
        ]
    },
    {
        "id": "d283183fd5a1afde",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "b1be6bf5f54b445d",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Rollizo Fenix",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "111",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 440,
        "wires": [
            [
                "74c78fb5b9709e0c"
            ]
        ]
    },
    {
        "id": "74c78fb5b9709e0c",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '9305f291-816e-4a7b-6b9c-61b0c0d84108') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '8d69834a-470f-4cd8-4101-cd11fc353bca') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '2586cc68-525e-4630-6a33-c195a6ada8e8') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'd2d23ee2-0354-4202-73cb-022e0731c54c') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n                \n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                \n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "d283183fd5a1afde"
            ]
        ]
    },
    {
        "id": "a9be0aedf1f74a15",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "ROLLIZO-FENIX 🐟 🟢",
        "info": "",
        "x": 170,
        "y": 400,
        "wires": []
    },
    {
        "id": "549d22226262df68",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/rollizodonmiguel",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 360,
        "wires": [
            [
                "275d874d627cca03"
            ]
        ]
    },
    {
        "id": "275d874d627cca03",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 360,
        "wires": [
            [
                "e4e333d86051476b"
            ]
        ]
    },
    {
        "id": "8eec53010daee96d",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "e4e333d86051476b",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Rollizo Don Miguel",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "110",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 360,
        "wires": [
            [
                "ce31787487bbf128"
            ]
        ]
    },
    {
        "id": "ce31787487bbf128",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '43bf1cec-ea21-44ea-5ef5-2902c9a38614') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '9afdc2d1-827a-4e5a-5cf2-9da3e36d98fb') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'b7e87ac0-22fd-4179-6caa-66c27bab61cc') {\n            nombreModuloZona = 'EXTERIOR';\n        }else if (currentItem.zones[0] === 'f0941e86-1c97-4fc2-7df3-cfbad573d93b') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n            \n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 360,
        "wires": [
            [
                "8eec53010daee96d"
            ]
        ]
    },
    {
        "id": "7cb2d18bc92c8b61",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "ROLLIZO-DON MIGUEL 🐟 🟢",
        "info": "",
        "x": 190,
        "y": 320,
        "wires": []
    },
    {
        "id": "6a80a269f3637a27",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/quillaipe",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 520,
        "wires": [
            [
                "320a0d2591139e17"
            ]
        ]
    },
    {
        "id": "320a0d2591139e17",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 520,
        "wires": [
            [
                "05411e0c51e73a8f"
            ]
        ]
    },
    {
        "id": "3a0b7a65f406e6f2",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "05411e0c51e73a8f",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Quillaipe",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "112",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 520,
        "wires": [
            [
                "358c7673b0d78e7b"
            ]
        ]
    },
    {
        "id": "358c7673b0d78e7b",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '8121fee9-fa99-4816-77ac-d9bbcca8d3a3') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '44b3577b-0418-4b14-7af7-d3d58cb17b2a') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c9973fc9-54b8-4bca-7768-ef36663d3d43') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '833695f9-42a3-4aba-4820-91b67203b9fc') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 520,
        "wires": [
            [
                "3a0b7a65f406e6f2"
            ]
        ]
    },
    {
        "id": "e32c1aa0c4b9698a",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "QUILLAIPE 🐟 🔴",
        "info": "",
        "x": 150,
        "y": 480,
        "wires": []
    },
    {
        "id": "c5488dadf5c610d0",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/polocuhe",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 600,
        "wires": [
            [
                "085f105e3a6f68b1"
            ]
        ]
    },
    {
        "id": "085f105e3a6f68b1",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 600,
        "wires": [
            [
                "6fdaeb559bab06e5"
            ]
        ]
    },
    {
        "id": "394ff6c569061c73",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "6fdaeb559bab06e5",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Polocuhe",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "113",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 600,
        "wires": [
            [
                "da9feb87f25ee748"
            ]
        ]
    },
    {
        "id": "da9feb87f25ee748",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '648c6588-f02f-40a2-7cd1-de8456a5f59f') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '6e32f572-8f85-47d4-78ea-68aff0b4fe82') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '9b3b94d0-1103-42b4-4ab6-56174f94d805') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 600,
        "wires": [
            [
                "394ff6c569061c73"
            ]
        ]
    },
    {
        "id": "a65eda6b162c7406",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "POLOCUHE 🐟 🔴",
        "info": "",
        "x": 150,
        "y": 560,
        "wires": []
    },
    {
        "id": "afdf8c82a49ee835",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/ilque",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 680,
        "wires": [
            [
                "0c8c5fb702b02190"
            ]
        ]
    },
    {
        "id": "0c8c5fb702b02190",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 680,
        "wires": [
            [
                "251edc35850142cc"
            ]
        ]
    },
    {
        "id": "9c696f09133fedb9",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "251edc35850142cc",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Ilque",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "114",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 680,
        "wires": [
            [
                "79252bd384f2e654"
            ]
        ]
    },
    {
        "id": "79252bd384f2e654",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'c620e427-713e-4215-72d7-5921d28f59e0') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '61a2ed50-7875-4516-5c8a-62ae8ec45290') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '97569ac4-fa36-47c8-4331-7f9a3316b450') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 680,
        "wires": [
            [
                "9c696f09133fedb9"
            ]
        ]
    },
    {
        "id": "cbb4e87f2b9b7e1b",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "ILQUE 🐟 🔴",
        "info": "",
        "x": 130,
        "y": 640,
        "wires": []
    },
    {
        "id": "20a69186203d53ed",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/lenca",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 760,
        "wires": [
            [
                "1563771ac8e7f244"
            ]
        ]
    },
    {
        "id": "1563771ac8e7f244",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 760,
        "wires": [
            [
                "771f0c4f05d26c2e"
            ]
        ]
    },
    {
        "id": "b499fdc310b2ddba",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "771f0c4f05d26c2e",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Lenca",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "115",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 760,
        "wires": [
            [
                "803d51eb172d44d2"
            ]
        ]
    },
    {
        "id": "803d51eb172d44d2",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '89bcf991-d1cf-4554-6b33-a22146bf18d9b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '428daded-561e-42a9-6b5f-d5eab68af911') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '116ba791-595b-40b3-5c91-c67f644c1970') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '537429d1-bd24-4ced-49d9-3f921244070d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration\n            };\n            // Agrega \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agrega \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 760,
        "wires": [
            [
                "b499fdc310b2ddba"
            ]
        ]
    },
    {
        "id": "31e6502faf421c6d",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "LENCA 🐟 🔴",
        "info": "",
        "x": 140,
        "y": 720,
        "wires": []
    },
    {
        "id": "f42af139b70fe677",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/traiguen",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 840,
        "wires": [
            [
                "891d2cd0651ef5a8"
            ]
        ]
    },
    {
        "id": "891d2cd0651ef5a8",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 840,
        "wires": [
            [
                "dd6d51dc6717dda1"
            ]
        ]
    },
    {
        "id": "4c261b382120c9a9",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "dd6d51dc6717dda1",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Traiguen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "116",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 840,
        "wires": [
            [
                "b65ea90ae76ba4ad"
            ]
        ]
    },
    {
        "id": "b65ea90ae76ba4ad",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '19a64f20-8ed4-4025-7ae4-008fb8d5b10b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'f03dba75-4eff-45ac-6bed-ee90688833d3') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'fd38f08b-5a6e-409b-69d2-2b5986b90107') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 840,
        "wires": [
            [
                "4c261b382120c9a9"
            ]
        ]
    },
    {
        "id": "95b14727b979be6c",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "TRAIGUEN 🐟 🔴",
        "info": "",
        "x": 150,
        "y": 800,
        "wires": []
    },
    {
        "id": "3d7d6c24fe2e3fe4",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/verdugo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "a4299a0f1a6d85be"
            ]
        ]
    },
    {
        "id": "a4299a0f1a6d85be",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 920,
        "wires": [
            [
                "3529db6ba47a83d2"
            ]
        ]
    },
    {
        "id": "0e5f2005e2e15701",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "3529db6ba47a83d2",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Verdugo",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "117",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 920,
        "wires": [
            [
                "fec0637aac1f0efb"
            ]
        ]
    },
    {
        "id": "fec0637aac1f0efb",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '3c1f5685-6fc1-458a-5cd4-f41c3d9d6850') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'f8f1302a-a787-42ca-795a-2067f535aad7') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '9cc50831-d829-4ede-6219-735cbc595b02') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 920,
        "wires": [
            [
                "0e5f2005e2e15701"
            ]
        ]
    },
    {
        "id": "702669e6a5746c77",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "VERDUGO 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 880,
        "wires": []
    },
    {
        "id": "1152590e799fde6f",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/becerra",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1000,
        "wires": [
            [
                "78bde1ddc77594fe"
            ]
        ]
    },
    {
        "id": "78bde1ddc77594fe",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1000,
        "wires": [
            [
                "ddcef445b9301b4a"
            ]
        ]
    },
    {
        "id": "b8b1b38386fc1e08",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "ddcef445b9301b4a",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Becerra",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "152",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1000,
        "wires": [
            [
                "444fb4fbd7a12414"
            ]
        ]
    },
    {
        "id": "444fb4fbd7a12414",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '986cfa4a-432d-4d6d-4a78-f1420e07336e') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '63f937b2-2719-4ab7-7944-8a9e8d6aebfb') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '60af5210-e712-482f-76c7-67fba2e5bb2e') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '61cd7904-6aee-46b6-6ae0-e8aede41759c') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 1000,
        "wires": [
            [
                "b8b1b38386fc1e08"
            ]
        ]
    },
    {
        "id": "ef0a2d9b48df06dd",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "BECERRA 🐟  🟢",
        "info": "",
        "x": 150,
        "y": 960,
        "wires": []
    },
    {
        "id": "450e3710b92fcdd4",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/errazuriz",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1080,
        "wires": [
            [
                "9e8ced46630ee712"
            ]
        ]
    },
    {
        "id": "9e8ced46630ee712",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1080,
        "wires": [
            [
                "22467f7ec5200165"
            ]
        ]
    },
    {
        "id": "a872ec01a70da66f",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "22467f7ec5200165",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Errazuriz",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "153",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1080,
        "wires": [
            [
                "c7ecc6a206797c22"
            ]
        ]
    },
    {
        "id": "c7ecc6a206797c22",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'e693e896-6208-44d3-5462-f55503addf1b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '75c1a579-b5d6-4b2d-4f9d-65f4cfdcf679') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '632e0521-de8c-4cc4-68d5-047e08d077bc') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'bfc0aa7d-d27a-47cb-7a3f-9f4ed332e482') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 1080,
        "wires": [
            [
                "a872ec01a70da66f"
            ]
        ]
    },
    {
        "id": "e91203f9155177a7",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "ERRAZURIZ 🐟  🟢",
        "info": "",
        "x": 150,
        "y": 1040,
        "wires": []
    },
    {
        "id": "da80af401b81d4f1",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/pichagua",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1160,
        "wires": [
            [
                "a137b6e54ca9481b"
            ]
        ]
    },
    {
        "id": "a137b6e54ca9481b",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1160,
        "wires": [
            [
                "a3e052bf93be1cce"
            ]
        ]
    },
    {
        "id": "864c060b12c1d25b",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "a3e052bf93be1cce",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pichagua",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "154",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1160,
        "wires": [
            [
                "92d00cb048d6f343"
            ]
        ]
    },
    {
        "id": "92d00cb048d6f343",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'e0d40027-fe8d-45f9-6166-a8b62a7677fe') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '0b0e935c-040b-41f2-6a14-226a1a3e2bf3') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '76a136fe-8493-4f70-5332-655a14c0ad9e') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '6bd61b2e-42fb-48f4-4363-8b85042ec50a') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 1160,
        "wires": [
            [
                "864c060b12c1d25b"
            ]
        ]
    },
    {
        "id": "351b9dd67081acef",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "PICHAGUA 🐟  🔴",
        "info": "",
        "x": 150,
        "y": 1120,
        "wires": []
    },
    {
        "id": "7d167c9c21959402",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/puelo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1240,
        "wires": [
            [
                "3f9dd291cc0d272b"
            ]
        ]
    },
    {
        "id": "3f9dd291cc0d272b",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1240,
        "wires": [
            [
                "371784b2599646c8"
            ]
        ]
    },
    {
        "id": "ecc2853f1d63919c",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "371784b2599646c8",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Puelo",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "155",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1240,
        "wires": [
            [
                "b293bd93ac4cc116"
            ]
        ]
    },
    {
        "id": "b293bd93ac4cc116",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'b809330e-4f45-4a6d-778f-5f273862e3d7') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'c1cfa334-881e-4e1c-4b8e-51290e70b24b') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '538b31b0-b0d3-41b8-6046-c665a5c74b56') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'c6a5fb17-16fb-4b2d-495d-ee2b312db9a7') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 1240,
        "wires": [
            [
                "ecc2853f1d63919c"
            ]
        ]
    },
    {
        "id": "8722e603bddefbec",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "PUELO 🐟  🔴",
        "info": "",
        "x": 140,
        "y": 1200,
        "wires": []
    },
    {
        "id": "3f156e67a8aaea80",
        "type": "http in",
        "z": "05ea73d60decce22",
        "name": "NIO",
        "url": "/api/spotter/ralun",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1320,
        "wires": [
            [
                "4335d3885da9588c"
            ]
        ]
    },
    {
        "id": "4335d3885da9588c",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1320,
        "wires": [
            [
                "1e03d49f7f96afdc"
            ]
        ]
    },
    {
        "id": "2361b8c955e3e3ed",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "1e03d49f7f96afdc",
        "type": "change",
        "z": "05ea73d60decce22",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Ralun",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "156",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1320,
        "wires": [
            [
                "87fab3691bc0f525"
            ]
        ]
    },
    {
        "id": "87fab3691bc0f525",
        "type": "function",
        "z": "05ea73d60decce22",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'ff74adf2-c691-4701-6887-91694c3e756b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '75daae33-1bc9-49db-6597-be7a2a44f3ab') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '1e9d846b-72f3-4187-5b40-c5f3b807b7a5') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '84674744-5a18-4aa6-54f7-de7b7a69a3b7') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 1320,
        "wires": [
            [
                "2361b8c955e3e3ed"
            ]
        ]
    },
    {
        "id": "29cb8b6590f5a2e9",
        "type": "comment",
        "z": "05ea73d60decce22",
        "name": "RALUN 🐟  🟢",
        "info": "",
        "x": 140,
        "y": 1280,
        "wires": []
    },
    {
        "id": "0da043d4e082a8d3",
        "type": "switch",
        "z": "153316fb6b2b756a",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 320,
        "wires": [
            [
                "5623429896f55f17"
            ],
            [
                "5623429896f55f17"
            ]
        ]
    },
    {
        "id": "5623429896f55f17",
        "type": "change",
        "z": "153316fb6b2b756a",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 320,
        "wires": [
            [
                "52f6d4218c4a7555"
            ]
        ]
    },
    {
        "id": "52f6d4218c4a7555",
        "type": "switch",
        "z": "153316fb6b2b756a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 320,
        "wires": [
            [
                "71d6a0ac8b348aae",
                "618b5c32a4a9e7ae"
            ],
            [
                "71d6a0ac8b348aae",
                "bf55f38c0ba7e986",
                "1ee6e7ad95269c09",
                "618b5c32a4a9e7ae",
                "6bf6a2ee49b7e790"
            ]
        ]
    },
    {
        "id": "71d6a0ac8b348aae",
        "type": "mongodb-collection",
        "z": "153316fb6b2b756a",
        "name": "insert_seguridad_detalle",
        "config": "aea86e27262eaf28",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1150,
        "y": 200,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "bf55f38c0ba7e986",
        "type": "mongodb-collection",
        "z": "153316fb6b2b756a",
        "name": "insert_seguridad",
        "config": "aea86e27262eaf28",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1170,
        "y": 240,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "6bf6a2ee49b7e790",
        "type": "mongodb-collection",
        "z": "153316fb6b2b756a",
        "name": "insert_seguridad_movil",
        "config": "aea86e27262eaf28",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1150,
        "y": 280,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "618b5c32a4a9e7ae",
        "type": "change",
        "z": "153316fb6b2b756a",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "1ee6e7ad95269c09",
        "type": "change",
        "z": "153316fb6b2b756a",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "8c5269750393609e",
        "type": "function",
        "z": "153316fb6b2b756a",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 320,
        "wires": [
            [
                "0da043d4e082a8d3"
            ]
        ]
    },
    {
        "id": "423f0ff1b45110c0",
        "type": "mongodb-collection",
        "z": "153316fb6b2b756a",
        "name": "findDB",
        "config": "aea86e27262eaf28",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 130,
        "y": 320,
        "wires": [
            [
                "8c5269750393609e"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "efd585eebc6e5468",
        "type": "switch",
        "z": "38e350e3eaea542d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 300,
        "wires": [
            [
                "39754b30f69dd2c7",
                "0e5097d086b105d2"
            ],
            [
                "39754b30f69dd2c7",
                "2d81024f85f9a9f3",
                "21ed5e7aaf9ea62e",
                "0e5097d086b105d2",
                "6f57d0f39abacfb5"
            ]
        ]
    },
    {
        "id": "2d81024f85f9a9f3",
        "type": "mongodb-collection",
        "z": "38e350e3eaea542d",
        "name": "insert_seguridad",
        "config": "a38213bec911688e",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1030,
        "y": 140,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "44f6b7e58503eda1",
        "type": "mongodb-collection",
        "z": "38e350e3eaea542d",
        "name": "findDB",
        "config": "a38213bec911688e",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "dd85ab58812b38ab"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "dd85ab58812b38ab",
        "type": "function",
        "z": "38e350e3eaea542d",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 300,
        "wires": [
            [
                "06414e4653c0eddd"
            ]
        ]
    },
    {
        "id": "06414e4653c0eddd",
        "type": "switch",
        "z": "38e350e3eaea542d",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 300,
        "wires": [
            [
                "379c663065df5698"
            ],
            [
                "379c663065df5698"
            ]
        ]
    },
    {
        "id": "0e5097d086b105d2",
        "type": "change",
        "z": "38e350e3eaea542d",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "21ed5e7aaf9ea62e",
        "type": "change",
        "z": "38e350e3eaea542d",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "379c663065df5698",
        "type": "change",
        "z": "38e350e3eaea542d",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 300,
        "wires": [
            [
                "efd585eebc6e5468"
            ]
        ]
    },
    {
        "id": "6f57d0f39abacfb5",
        "type": "mongodb-collection",
        "z": "38e350e3eaea542d",
        "name": "insert_seguridad_movil",
        "config": "a38213bec911688e",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1010,
        "y": 180,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "39754b30f69dd2c7",
        "type": "mongodb-collection",
        "z": "38e350e3eaea542d",
        "name": "insert_seguridad_detalle",
        "config": "a38213bec911688e",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1010,
        "y": 100,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "98843dca84bc3a2c",
        "type": "change",
        "z": "f07ffa8adc2a1039",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 320,
        "wires": [
            [
                "9ca068633b408c36"
            ]
        ]
    },
    {
        "id": "9ca068633b408c36",
        "type": "switch",
        "z": "f07ffa8adc2a1039",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 320,
        "wires": [
            [
                "a66a34b452e08e30",
                "3cf3b06f789f1b98"
            ],
            [
                "a66a34b452e08e30",
                "52fcc0fbcb1e288e",
                "3cf3b06f789f1b98",
                "3056ced952afe6fb",
                "bcdae15578006618"
            ]
        ]
    },
    {
        "id": "3056ced952afe6fb",
        "type": "mongodb-collection",
        "z": "f07ffa8adc2a1039",
        "name": "insert_seguridad",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1090,
        "y": 280,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "0f06e6fad4ba45c0",
        "type": "mongodb-collection",
        "z": "f07ffa8adc2a1039",
        "name": "findDB",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 210,
        "y": 320,
        "wires": [
            [
                "473693bc0cebcf0a"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "a66a34b452e08e30",
        "type": "mongodb-collection",
        "z": "f07ffa8adc2a1039",
        "name": "insert_seguridad_detalle",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1070,
        "y": 240,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "473693bc0cebcf0a",
        "type": "function",
        "z": "f07ffa8adc2a1039",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 320,
        "wires": [
            [
                "781444385bbb7ba2"
            ]
        ]
    },
    {
        "id": "781444385bbb7ba2",
        "type": "switch",
        "z": "f07ffa8adc2a1039",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 320,
        "wires": [
            [
                "98843dca84bc3a2c"
            ],
            [
                "98843dca84bc3a2c"
            ]
        ]
    },
    {
        "id": "3cf3b06f789f1b98",
        "type": "change",
        "z": "f07ffa8adc2a1039",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "52fcc0fbcb1e288e",
        "type": "change",
        "z": "f07ffa8adc2a1039",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "bcdae15578006618",
        "type": "mongodb-collection",
        "z": "f07ffa8adc2a1039",
        "name": "insert_seguridad_movil",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1070,
        "y": 320,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "b2868585a65eacd6",
        "type": "http in",
        "z": "9e220e3691a02102",
        "name": "NIO",
        "url": "/api/spotter/prueba3",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "99d7eb6d1497eb2e",
                "3cf8615313239347"
            ]
        ]
    },
    {
        "id": "6beb2953073d20f1",
        "type": "http in",
        "z": "9e220e3691a02102",
        "name": "NIO",
        "url": "/api/spotter/betecoi",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "50891427d94452c1",
                "3cf8615313239347"
            ]
        ]
    },
    {
        "id": "5acc9b8230d8e6c6",
        "type": "http in",
        "z": "9e220e3691a02102",
        "name": "NIO",
        "url": "/api/spotter/laurel",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "7e170e6acfbbcbc0",
                "3cf8615313239347"
            ]
        ]
    },
    {
        "id": "dc8b2524ee30cb99",
        "type": "http in",
        "z": "9e220e3691a02102",
        "name": "NIO",
        "url": "/api/spotter/leucayec",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "7fd9658c2cf7b053",
                "3cf8615313239347"
            ]
        ]
    },
    {
        "id": "99d7eb6d1497eb2e",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "56f3436370cf4cda"
            ]
        ]
    },
    {
        "id": "50891427d94452c1",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 300,
        "wires": [
            [
                "55bb6c9445d9939a"
            ]
        ]
    },
    {
        "id": "7e170e6acfbbcbc0",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 380,
        "wires": [
            [
                "7c00feaade15f53e"
            ]
        ]
    },
    {
        "id": "7fd9658c2cf7b053",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 460,
        "wires": [
            [
                "4e4d0b66d6336bf2"
            ]
        ]
    },
    {
        "id": "56f3436370cf4cda",
        "type": "change",
        "z": "9e220e3691a02102",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Isla-Lola",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "103",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 220,
        "wires": [
            [
                "a2598e1cf8450552"
            ]
        ]
    },
    {
        "id": "55bb6c9445d9939a",
        "type": "change",
        "z": "9e220e3691a02102",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Betecoi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "104",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 300,
        "wires": [
            [
                "6063332a4f7b6bd7"
            ]
        ]
    },
    {
        "id": "7c00feaade15f53e",
        "type": "change",
        "z": "9e220e3691a02102",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Laurel-Oeste",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "105",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 380,
        "wires": [
            [
                "54b81e12bcf47b9c"
            ]
        ]
    },
    {
        "id": "4e4d0b66d6336bf2",
        "type": "change",
        "z": "9e220e3691a02102",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Leucayec",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "106",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "2726d7b71c9fb692"
            ]
        ]
    },
    {
        "id": "7bb5ac9e915a145a",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "a2598e1cf8450552",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'bbca809d-850f-4bb0-4715-20cabb701093') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'ba8d7374-de08-45b9-67ba-1044a0d1af72') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'a80b5ad3-a43a-40df-5bf8-1e16fb05ac69') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n        \n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 220,
        "wires": [
            [
                "7bb5ac9e915a145a"
            ]
        ]
    },
    {
        "id": "da9a620736339ad7",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "6063332a4f7b6bd7",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '73a6080d-47ba-4aa1-72e4-b3fe09deb827') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '2a3120cb-89f6-47e4-49b9-356d56db95dd') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'ff9c2731-34af-469b-5568-6a2dcf29d7fa') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 300,
        "wires": [
            [
                "da9a620736339ad7"
            ]
        ]
    },
    {
        "id": "5bdfde647635d588",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "54b81e12bcf47b9c",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '788e5ae9-e599-450a-7333-a238f93e597a') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'b987898d-7724-4458-6660-35a68fdad31d') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === 'ebe0fc31-e41f-45b8-6052-8964d7f183c1') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '9e871b7b-9e48-4e34-4900-7d0fdbb94043') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n            \n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        \n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = ''; \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n            \n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n        \n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 380,
        "wires": [
            [
                "5bdfde647635d588"
            ]
        ]
    },
    {
        "id": "eab23034631bc411",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "2726d7b71c9fb692",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '1750cee8-b7bc-444b-703e-56ab480622e1') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '1c073df0-def2-48ce-67db-f94f59821dec') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 460,
        "wires": [
            [
                "eab23034631bc411"
            ]
        ]
    },
    {
        "id": "cd5fe1294b781be8",
        "type": "comment",
        "z": "9e220e3691a02102",
        "name": "ISLA-LOLA 🐟 🟢",
        "info": "",
        "x": 190,
        "y": 180,
        "wires": []
    },
    {
        "id": "5833f92856acc41b",
        "type": "comment",
        "z": "9e220e3691a02102",
        "name": "BETECOI 🐟 🟢",
        "info": "",
        "x": 180,
        "y": 260,
        "wires": []
    },
    {
        "id": "c2fc51a8fcf5ec29",
        "type": "comment",
        "z": "9e220e3691a02102",
        "name": "LAUREL-OESTE 🐟 🟢",
        "info": "",
        "x": 210,
        "y": 340,
        "wires": []
    },
    {
        "id": "856616adc1e1be46",
        "type": "comment",
        "z": "9e220e3691a02102",
        "name": "LEUCAYEC 🐟 🟢",
        "info": "",
        "x": 190,
        "y": 420,
        "wires": []
    },
    {
        "id": "3cf8615313239347",
        "type": "debug",
        "z": "9e220e3691a02102",
        "name": "debug 238",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 140,
        "wires": []
    },
    {
        "id": "5454f5a24853e34d",
        "type": "http in",
        "z": "9e220e3691a02102",
        "name": "NIO",
        "url": "/api/spotter/bobe",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 540,
        "wires": [
            [
                "e66b2261e3646424"
            ]
        ]
    },
    {
        "id": "e66b2261e3646424",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 540,
        "wires": [
            [
                "698542f9c5329d84"
            ]
        ]
    },
    {
        "id": "698542f9c5329d84",
        "type": "change",
        "z": "9e220e3691a02102",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Bobe",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "160",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 540,
        "wires": [
            [
                "8c3a33771f085f47"
            ]
        ]
    },
    {
        "id": "6da207b66f8309a4",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "8c3a33771f085f47",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '7dc637e2-f26d-4bd6-5336-8cae482dffa9') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'c5a70ad0-2cd3-446a-4f1d-459d5d1e86ae') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 540,
        "wires": [
            [
                "6da207b66f8309a4"
            ]
        ]
    },
    {
        "id": "081f7c7079f486b9",
        "type": "comment",
        "z": "9e220e3691a02102",
        "name": "BOBE 🐟 🟢",
        "info": "",
        "x": 170,
        "y": 500,
        "wires": []
    },
    {
        "id": "22a79cb76191fe5e",
        "type": "http in",
        "z": "9e220e3691a02102",
        "name": "NIO",
        "url": "/api/spotter/butan2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 620,
        "wires": [
            [
                "98602a971ac6c830"
            ]
        ]
    },
    {
        "id": "98602a971ac6c830",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 620,
        "wires": [
            [
                "77f89bfcaa41bacc"
            ]
        ]
    },
    {
        "id": "77f89bfcaa41bacc",
        "type": "change",
        "z": "9e220e3691a02102",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Butan 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "161",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 620,
        "wires": [
            [
                "2886c5fee6560fb0"
            ]
        ]
    },
    {
        "id": "7f0bdd43cb235c36",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "2886c5fee6560fb0",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '7826a6f3-7f28-4130-4939-36d9eed1415b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '7e3fd59c-089a-4a34-6f62-a31b7c12854e') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 620,
        "wires": [
            [
                "7f0bdd43cb235c36"
            ]
        ]
    },
    {
        "id": "82e7318ae38562ea",
        "type": "comment",
        "z": "9e220e3691a02102",
        "name": "BUTAN 2 🐟 🟢",
        "info": "",
        "x": 180,
        "y": 580,
        "wires": []
    },
    {
        "id": "33a76096bbb609ca",
        "type": "http in",
        "z": "9e220e3691a02102",
        "name": "NIO",
        "url": "/api/spotter/islasanchezmowi",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 700,
        "wires": [
            [
                "bf796bbbf151b5be"
            ]
        ]
    },
    {
        "id": "bf796bbbf151b5be",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 700,
        "wires": [
            [
                "7814cd948300781a"
            ]
        ]
    },
    {
        "id": "7814cd948300781a",
        "type": "change",
        "z": "9e220e3691a02102",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Isla Sanchez",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "162",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 700,
        "wires": [
            [
                "361b706989049c61"
            ]
        ]
    },
    {
        "id": "88008e846e5718f0",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "361b706989049c61",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '0129ccaa-ff18-44ba-58f8-9b68ea63ec14') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '0819e6d8-6e90-4477-6d1a-86776af5b408') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 700,
        "wires": [
            [
                "88008e846e5718f0"
            ]
        ]
    },
    {
        "id": "ae5eba0cbace2623",
        "type": "comment",
        "z": "9e220e3691a02102",
        "name": "ISLA SANCHEZ 🐟 🟢",
        "info": "",
        "x": 200,
        "y": 660,
        "wires": []
    },
    {
        "id": "c25d00a2697e9446",
        "type": "http in",
        "z": "9e220e3691a02102",
        "name": "NIO",
        "url": "/api/spotter/rodadonotable",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 860,
        "wires": [
            [
                "d8ccc73ae21447f1"
            ]
        ]
    },
    {
        "id": "d8ccc73ae21447f1",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 860,
        "wires": [
            [
                "480e1caea5a4be5b"
            ]
        ]
    },
    {
        "id": "480e1caea5a4be5b",
        "type": "change",
        "z": "9e220e3691a02102",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Rodado Notable",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "164",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 860,
        "wires": [
            [
                "39ccadc127fb69c1"
            ]
        ]
    },
    {
        "id": "ce4f925ee0f0215b",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "39ccadc127fb69c1",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'e09682a3-421b-4299-689d-3dfd1d9faffa') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '65ba435d-3cc6-4264-7c7d-485695ddc9dd') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 860,
        "wires": [
            [
                "ce4f925ee0f0215b"
            ]
        ]
    },
    {
        "id": "029ade08f3d79fa5",
        "type": "comment",
        "z": "9e220e3691a02102",
        "name": "RODADO NOTABLE 🐟 🟢",
        "info": "",
        "x": 220,
        "y": 820,
        "wires": []
    },
    {
        "id": "b5a9cbc7252b39d9",
        "type": "http in",
        "z": "9e220e3691a02102",
        "name": "NIO",
        "url": "/api/spotter/larenas",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 780,
        "wires": [
            [
                "469cef0333c94a4a"
            ]
        ]
    },
    {
        "id": "469cef0333c94a4a",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 780,
        "wires": [
            [
                "5903530592016076"
            ]
        ]
    },
    {
        "id": "5903530592016076",
        "type": "change",
        "z": "9e220e3691a02102",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Larenas",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "163",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 780,
        "wires": [
            [
                "ad6cac25758d16bb"
            ]
        ]
    },
    {
        "id": "e2c94ef487601d23",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "ad6cac25758d16bb",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '423472df-eff6-4123-6775-ce2e40b594e4') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '6c67f145-b4bb-4be5-5084-907b88e6519a') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 780,
        "wires": [
            [
                "e2c94ef487601d23"
            ]
        ]
    },
    {
        "id": "2c722e094296a0aa",
        "type": "comment",
        "z": "9e220e3691a02102",
        "name": "LARENAS 🐟 🟢",
        "info": "",
        "x": 190,
        "y": 740,
        "wires": []
    },
    {
        "id": "92fe7efee36b67a1",
        "type": "http in",
        "z": "9e220e3691a02102",
        "name": "NIO",
        "url": "/api/spotter/level",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 940,
        "wires": [
            [
                "21436620d048b0ea"
            ]
        ]
    },
    {
        "id": "21436620d048b0ea",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 940,
        "wires": [
            [
                "4baa25c06578619a"
            ]
        ]
    },
    {
        "id": "4baa25c06578619a",
        "type": "change",
        "z": "9e220e3691a02102",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Level",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "165",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 940,
        "wires": [
            [
                "ad587b2051efd6e4"
            ]
        ]
    },
    {
        "id": "7b48b53ef98bd80f",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "ad587b2051efd6e4",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '72bf6f2b-0da3-4ee3-67e9-343d3c5c1726') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '30ef9b59-ad67-49e7-6352-a6cb548c04cb') {\n            nombreModuloZona = '200';\n        }else if (currentItem.zones[0] === '3901427b-8667-468b-4946-dc76a7030b71') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 940,
        "wires": [
            [
                "7b48b53ef98bd80f"
            ]
        ]
    },
    {
        "id": "36cf932247571c5b",
        "type": "comment",
        "z": "9e220e3691a02102",
        "name": "LEVEL 🐟 🟢",
        "info": "",
        "x": 170,
        "y": 900,
        "wires": []
    },
    {
        "id": "74f9f8a0487211f8",
        "type": "http in",
        "z": "9e220e3691a02102",
        "name": "NIO",
        "url": "/api/spotter/lyng2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "5ac90fc85220c844"
            ]
        ]
    },
    {
        "id": "5ac90fc85220c844",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1020,
        "wires": [
            [
                "35b40ac970b28e4b"
            ]
        ]
    },
    {
        "id": "35b40ac970b28e4b",
        "type": "change",
        "z": "9e220e3691a02102",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Lyng 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "167",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1020,
        "wires": [
            [
                "b0605c7015eb674b"
            ]
        ]
    },
    {
        "id": "7e86372d6b3b7862",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "b0605c7015eb674b",
        "type": "function",
        "z": "9e220e3691a02102",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '9eed0936-2bcc-477c-76fb-bf74f9b56944') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'f4827da0-1ad6-42b1-5a33-d855c442a963') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 1020,
        "wires": [
            [
                "7e86372d6b3b7862"
            ]
        ]
    },
    {
        "id": "d9707fec5dcc922d",
        "type": "comment",
        "z": "9e220e3691a02102",
        "name": "LYNG2 🐟 🟢",
        "info": "",
        "x": 180,
        "y": 980,
        "wires": []
    },
    {
        "id": "3bb4bc6437579c52",
        "type": "change",
        "z": "1bb16629c0f9499d",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 320,
        "wires": [
            [
                "ad388c44721be477"
            ]
        ]
    },
    {
        "id": "ad388c44721be477",
        "type": "switch",
        "z": "1bb16629c0f9499d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 320,
        "wires": [
            [
                "0983b109ae1d81ad",
                "05d4c81b20dabc4f",
                "e548a42239dcbb38"
            ],
            [
                "0983b109ae1d81ad",
                "2b2478724f677f24",
                "a4cc9ac5c9e56622",
                "05d4c81b20dabc4f",
                "39cfe5cd48f3ae0c",
                "e548a42239dcbb38",
                "6696c8eb01101e73"
            ]
        ]
    },
    {
        "id": "2b2478724f677f24",
        "type": "mongodb-collection",
        "z": "1bb16629c0f9499d",
        "name": "insert_seguridad",
        "config": "49886df584836a48",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 990,
        "y": 80,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "c91be36c9f53df94",
        "type": "mongodb-collection",
        "z": "1bb16629c0f9499d",
        "name": "findDB",
        "config": "49886df584836a48",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 130,
        "y": 320,
        "wires": [
            [
                "a04dbe6115569562"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "0983b109ae1d81ad",
        "type": "mongodb-collection",
        "z": "1bb16629c0f9499d",
        "name": "insert_seguridad_detalle",
        "config": "49886df584836a48",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 970,
        "y": 40,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "69e953d2e0fcba4c",
        "type": "function",
        "z": "1bb16629c0f9499d",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 320,
        "wires": [
            [
                "ef60be473ddc126c"
            ]
        ]
    },
    {
        "id": "ef60be473ddc126c",
        "type": "switch",
        "z": "1bb16629c0f9499d",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 320,
        "wires": [
            [
                "3bb4bc6437579c52"
            ],
            [
                "3bb4bc6437579c52"
            ]
        ]
    },
    {
        "id": "05d4c81b20dabc4f",
        "type": "change",
        "z": "1bb16629c0f9499d",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "39cfe5cd48f3ae0c",
        "type": "mongodb-collection",
        "z": "1bb16629c0f9499d",
        "name": "insert_seguridad_movil",
        "config": "49886df584836a48",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 970,
        "y": 120,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "a4cc9ac5c9e56622",
        "type": "change",
        "z": "1bb16629c0f9499d",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "e548a42239dcbb38",
        "type": "mongodb-collection",
        "z": "1bb16629c0f9499d",
        "name": "insert_seguridad_detallebk",
        "config": "1e274b74f8a99371",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1200,
        "y": 240,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "6696c8eb01101e73",
        "type": "mongodb-collection",
        "z": "1bb16629c0f9499d",
        "name": "insert_seguridadbk",
        "config": "1e274b74f8a99371",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1210,
        "y": 280,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "a04dbe6115569562",
        "type": "mongodb-collection",
        "z": "1bb16629c0f9499d",
        "name": "findDB",
        "config": "1e274b74f8a99371",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 250,
        "y": 320,
        "wires": [
            [
                "69e953d2e0fcba4c"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "211bd666f3692fbe",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/amparogrande",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "29efe6dfe4485737"
            ]
        ]
    },
    {
        "id": "29efe6dfe4485737",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 80,
        "wires": [
            [
                "c855b2811b2d424c"
            ]
        ]
    },
    {
        "id": "735b0913b16129ec",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "c855b2811b2d424c",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Amparo Grande",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "118",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 80,
        "wires": [
            [
                "4aa1868390d64c44"
            ]
        ]
    },
    {
        "id": "4aa1868390d64c44",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'abf76d76-ca23-4375-442f-1acf321ccb10') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '375b49b7-4590-4179-7636-5d04ad56541e') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '30e955bf-3dad-482b-63c3-1a78e1f6ca99') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'ab3ee495-3bb7-45f7-5fcd-c09bdf7dfca1') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else if (currentItem.zones[0] === '0aa321e1-8719-4757-5075-228a26127819') {\n                nombreModuloZona = 'ACTIVE_TRACKING2';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING' && nombreModuloZona !== 'ACTIVE_TRACKING2') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil,\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 80,
        "wires": [
            [
                "735b0913b16129ec"
            ]
        ]
    },
    {
        "id": "c1f2257165497646",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "AMPAROGRANDE🐟 🟢",
        "info": "",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "8e7a2d5a72e59771",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/angostura",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 160,
        "wires": [
            [
                "4b2278d8fa889662"
            ]
        ]
    },
    {
        "id": "4b2278d8fa889662",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 160,
        "wires": [
            [
                "1f26519676f9ae9d"
            ]
        ]
    },
    {
        "id": "d4e17d3727183937",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "1f26519676f9ae9d",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Angostura",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "119",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 160,
        "wires": [
            [
                "32949eefbf45e81a"
            ]
        ]
    },
    {
        "id": "32949eefbf45e81a",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'd6fd449c-5f8d-4d86-6c71-946af104099f') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '72b15177-6a01-48c0-69ad-921f55454151') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '4f39df0d-c1d2-40b7-7781-5f21cc4998c7') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '50d50de5-0a71-4753-7284-95e70ee5aa06') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 160,
        "wires": [
            [
                "d4e17d3727183937"
            ]
        ]
    },
    {
        "id": "acf495ace4dd3a05",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "ANGOSTURA 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 120,
        "wires": []
    },
    {
        "id": "81a8eb368b95aafa",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/aysen4",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 240,
        "wires": [
            [
                "4b4237ecded6b9ee"
            ]
        ]
    },
    {
        "id": "4b4237ecded6b9ee",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 240,
        "wires": [
            [
                "9ccfff7023f22a37"
            ]
        ]
    },
    {
        "id": "a6875d91a5419644",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "9ccfff7023f22a37",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Aysen 4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "120",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 240,
        "wires": [
            [
                "38f096a2e69f5df0"
            ]
        ]
    },
    {
        "id": "38f096a2e69f5df0",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '5df3c5ca-15eb-47ea-671e-6140d106f5a7') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '3c9e92ae-70ef-4aad-4b40-58cde9bec7a7') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '77e131de-8d26-4c8d-7c01-ef1ae3f3ac30') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'af3a2f73-528e-4b91-5c98-6a5b5b4d32ee') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 240,
        "wires": [
            [
                "a6875d91a5419644"
            ]
        ]
    },
    {
        "id": "31e479e656cd798b",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "AYSEN 4 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 200,
        "wires": []
    },
    {
        "id": "2d926898d09e3e7d",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/brazoguardramiro",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "3e78f320c3ea4507"
            ]
        ]
    },
    {
        "id": "3e78f320c3ea4507",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 320,
        "wires": [
            [
                "f63bd1eecd834000"
            ]
        ]
    },
    {
        "id": "faabca561a16305e",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "f63bd1eecd834000",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Brazo Guardramiro",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "121",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 320,
        "wires": [
            [
                "4f5edace633b82ab"
            ]
        ]
    },
    {
        "id": "4f5edace633b82ab",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '56205a75-6858-472e-7601-627ec18e7b83') {\n            nombreModuloZona = '100';\n        }else if (currentItem.zones[0] === '17773584-6548-4b87-7fc8-4c0cf807e391') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '55493518-c15c-4baa-5374-89ebff3b5383') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === '2ab030cf-91af-4ca1-57c4-4ae3d1778ff7') {\n            nombreModuloZona = 'EXTERIOR100';\n        }else if (currentItem.zones[0] === '3c9e92ae-70ef-4aad-4b40-58cde9bec7a7') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === '04dbfc8a-ff43-4a8b-72dd-d9e806d2844c') {\n            nombreModuloZona = 'EXTERIOR200';\n        } else if (currentItem.zones[0] === '9824c787-23ef-4913-545e-416a6eecc74e') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else if (currentItem.zones[0] === '905e5a0d-f566-427d-63a8-520c9d827b5a') {\n            nombreModuloZona = 'ACTIVE_TRACKING100';\n        } else if (currentItem.zones[0] === '69b95b43-bb84-4019-6596-9c1b25a2757d') {\n            nombreModuloZona = 'ACTIVE_TRACKING200';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING100' o 'ACTIVE_TRACKING200'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING' && nombreModuloZona !== 'ACTIVE_TRACKING100' \n        && nombreModuloZona !== 'ACTIVE_TRACKING200') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100'\n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || ''\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100'\n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100'\n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 320,
        "wires": [
            [
                "faabca561a16305e"
            ]
        ]
    },
    {
        "id": "0d8ebfcf5db66489",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "BRAZO GUARDRAMIRO 🐟 🟢",
        "info": "",
        "x": 170,
        "y": 280,
        "wires": []
    },
    {
        "id": "f4375bfe6234dbc4",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/brazohojeda",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "3e8ad377b810f473"
            ]
        ]
    },
    {
        "id": "3e8ad377b810f473",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 400,
        "wires": [
            [
                "6b0f0ef3092f232d"
            ]
        ]
    },
    {
        "id": "b37f9814cc01aa19",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "6b0f0ef3092f232d",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Brazo Hojeda",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "122",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 400,
        "wires": [
            [
                "bbdf2ceb221f76b3"
            ]
        ]
    },
    {
        "id": "bbdf2ceb221f76b3",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'b116b092-70e9-4fac-6d93-a460f9a215f7') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'e08f3cde-c985-4864-67be-63574509c569') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '2f80be27-755a-44a4-4340-b75d62f80b00') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '9061fc6e-0b49-4185-6388-18051d93eabc') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 400,
        "wires": [
            [
                "b37f9814cc01aa19"
            ]
        ]
    },
    {
        "id": "42e7092d91bcd1c9",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "BRAZO HOJEDA 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 360,
        "wires": []
    },
    {
        "id": "15fa14e6c258c37d",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/brazohojeda2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 480,
        "wires": [
            [
                "54afdd21443119fe"
            ]
        ]
    },
    {
        "id": "54afdd21443119fe",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 480,
        "wires": [
            [
                "c69ccd3d883c973a"
            ]
        ]
    },
    {
        "id": "312361a6cd5c16be",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "c69ccd3d883c973a",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Brazo Hojeda 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "123",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 480,
        "wires": [
            [
                "d88acd0a4d763eca"
            ]
        ]
    },
    {
        "id": "d88acd0a4d763eca",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'f2c061fc-7780-4229-41ef-3a1fa11f53cb') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '91fef178-7b26-4bb7-5e47-0ffbe0934987') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'f9059498-ce8a-49dd-58dd-fe2e0ace3fab') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 480,
        "wires": [
            [
                "312361a6cd5c16be"
            ]
        ]
    },
    {
        "id": "9e350413fc48f99c",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "BRAZO HOJEDA 2 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 440,
        "wires": []
    },
    {
        "id": "6541f87847f05f71",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/caceres",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 560,
        "wires": [
            [
                "351b19977f0879d0"
            ]
        ]
    },
    {
        "id": "351b19977f0879d0",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 560,
        "wires": [
            [
                "7ad6dd4df1e4155a"
            ]
        ]
    },
    {
        "id": "d7113fdb9b513250",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "7ad6dd4df1e4155a",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Caceres",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "124",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 560,
        "wires": [
            [
                "46d137bf567a60e8"
            ]
        ]
    },
    {
        "id": "46d137bf567a60e8",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'ac4a5b41-2a1c-4a47-65d5-a0781e66416f') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '1de453f2-0ebb-4230-796c-4b637ed70e8b') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '3cc88abe-5031-4799-4aee-3ff56c3c2260') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '4767e03a-9866-4483-5787-a02998aaedc2') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 560,
        "wires": [
            [
                "d7113fdb9b513250"
            ]
        ]
    },
    {
        "id": "1f4c7127b896c104",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "CACERES 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "a8c296c59059674c",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/canalad6",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 640,
        "wires": [
            [
                "1f29677036e7bc25"
            ]
        ]
    },
    {
        "id": "1f29677036e7bc25",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 640,
        "wires": [
            [
                "b691ccb1e1904e77"
            ]
        ]
    },
    {
        "id": "9e373a43f113e59d",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "b691ccb1e1904e77",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Canalad 6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "125",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 640,
        "wires": [
            [
                "f38a5f96ba381269"
            ]
        ]
    },
    {
        "id": "f38a5f96ba381269",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '85e04d09-ff07-4239-43ba-e468c1770f6d') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'aa23ea56-01b3-4049-4e29-e4066c0dd5b2') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '12cad551-a9e5-46f5-4313-291356539a59') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '2fed287c-55e4-4ef6-4654-fb0a9694f1e6') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 640,
        "wires": [
            [
                "9e373a43f113e59d"
            ]
        ]
    },
    {
        "id": "4a3732634c0a514f",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "CANALAD 6 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 600,
        "wires": []
    },
    {
        "id": "4fc1862e05633edc",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/canalpereznorte",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "26dd3e0c5801ccf1"
            ]
        ]
    },
    {
        "id": "26dd3e0c5801ccf1",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 720,
        "wires": [
            [
                "de1e346f6a9bb478"
            ]
        ]
    },
    {
        "id": "568dde4a5125973f",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "de1e346f6a9bb478",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Canal Perez Norte",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "126",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 720,
        "wires": [
            [
                "768d55785a99e146"
            ]
        ]
    },
    {
        "id": "768d55785a99e146",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '30fa9ca3-ea8f-4db0-70cd-2aaccd2ea0ac') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '3bfe21da-dd0a-44b1-719f-8e1beaba1c63') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'ec251a7a-04ea-49e0-6f73-572fcb06f382') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '9b80128f-7d2c-4f71-43ac-e07755549c38') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 720,
        "wires": [
            [
                "568dde4a5125973f"
            ]
        ]
    },
    {
        "id": "9b303e5e8cac7349",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "CANAL PEREZ NORTE 🐟 🟢",
        "info": "",
        "x": 170,
        "y": 680,
        "wires": []
    },
    {
        "id": "46cbc109921ccf45",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/cascada",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 800,
        "wires": [
            [
                "1e65cf3c3a9f2f40"
            ]
        ]
    },
    {
        "id": "1e65cf3c3a9f2f40",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 800,
        "wires": [
            [
                "aefa3b30980752d7"
            ]
        ]
    },
    {
        "id": "06b267813843b5c9",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "aefa3b30980752d7",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Cascada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "127",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 800,
        "wires": [
            [
                "b18ceed5b14f3246"
            ]
        ]
    },
    {
        "id": "b18ceed5b14f3246",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '96bf214d-0740-4a6d-7022-cbf0ffd9926a') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'f374ff18-d4f2-4996-578a-8accfbab932d') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'f0c6dd98-c1ab-4c54-782e-4d1660211cb4') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '0e72211e-fd79-42ea-5bb2-6afc7b82ae30') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 800,
        "wires": [
            [
                "06b267813843b5c9"
            ]
        ]
    },
    {
        "id": "1102b1a7f6be62ea",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "CASCADA 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 760,
        "wires": []
    },
    {
        "id": "a7a49cafd05a5360",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/concoto",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 880,
        "wires": [
            [
                "87c9ed1d7515c374"
            ]
        ]
    },
    {
        "id": "87c9ed1d7515c374",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 880,
        "wires": [
            [
                "256495dd582604eb"
            ]
        ]
    },
    {
        "id": "5a09e72d5cba68a1",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "256495dd582604eb",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Concoto",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "128",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 880,
        "wires": [
            [
                "e2508e6b9918dfcf"
            ]
        ]
    },
    {
        "id": "e2508e6b9918dfcf",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '28758ea6-fb87-4bc1-4ab0-84632cde4b76') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '31214ae2-24c7-4c6a-68fd-f7e8931c4d07') {\n            nombreModuloZona = '200';\n        }else if (currentItem.zones[0] === '7d2328ac-10fa-497c-6d2a-5a065e239243') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '08ea1613-14c6-4a05-54f1-a653e522af58') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '46ad6750-1e40-458f-418b-e30000d7c6eb') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 880,
        "wires": [
            [
                "5a09e72d5cba68a1"
            ]
        ]
    },
    {
        "id": "4c87f967c1472151",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "CONCOTO 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 840,
        "wires": []
    },
    {
        "id": "d4f097cf4de4f96d",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/elefante",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 960,
        "wires": [
            [
                "21fac9d6a067a14a"
            ]
        ]
    },
    {
        "id": "21fac9d6a067a14a",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 960,
        "wires": [
            [
                "bcc007da3f0eee23"
            ]
        ]
    },
    {
        "id": "33e3e40f6b73855f",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "bcc007da3f0eee23",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Elefante",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "129",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 960,
        "wires": [
            [
                "f4bc735acc5df3d0"
            ]
        ]
    },
    {
        "id": "f4bc735acc5df3d0",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '23cdfdad-c460-4973-504a-de3b911308f8') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '2a0e3b9e-7e88-48dc-72b2-1859a7ee3325') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'bd2364a8-ba4d-4348-748f-7857d49e8791') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '472da4a1-d244-413c-7707-a83375aa760d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        \n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 960,
        "wires": [
            [
                "33e3e40f6b73855f"
            ]
        ]
    },
    {
        "id": "ab1399d176e6d71e",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "ELEFANTE 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 920,
        "wires": []
    },
    {
        "id": "31086b18db8db6df",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/esterofrio",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1040,
        "wires": [
            [
                "0ba48174e15d650f"
            ]
        ]
    },
    {
        "id": "0ba48174e15d650f",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1040,
        "wires": [
            [
                "208b0be175cac350"
            ]
        ]
    },
    {
        "id": "a43ec37a35174d18",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "208b0be175cac350",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Estero Frio",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "130",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1040,
        "wires": [
            [
                "6a567e29fb5fca78"
            ]
        ]
    },
    {
        "id": "6a567e29fb5fca78",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4c4adc9f-1abe-42c4-6726-dbcd504398e4') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '0898af5c-1bfe-4f47-54af-f59682d6bacc') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'db76287c-f3c5-4130-4c8f-0e0aeb33898b') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '15ef3e6b-a8f1-4174-5b57-b96e6cd6574e') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1040,
        "wires": [
            [
                "a43ec37a35174d18"
            ]
        ]
    },
    {
        "id": "a5ab474fedb2fa42",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "ESTERO FRIO 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 1000,
        "wires": []
    },
    {
        "id": "f3837c06ada99df4",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/fislaswagner",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1120,
        "wires": [
            [
                "0370a49bd727fa9f"
            ]
        ]
    },
    {
        "id": "0370a49bd727fa9f",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1120,
        "wires": [
            [
                "93fb95d69e4a4139"
            ]
        ]
    },
    {
        "id": "f30e97a89cb01123",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "93fb95d69e4a4139",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Frente Islas Wagner",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "131",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1120,
        "wires": [
            [
                "2e70336806af693a"
            ]
        ]
    },
    {
        "id": "2e70336806af693a",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '93d6f88d-f7be-4559-6a16-9c7c75d99551') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'a6d0c3b9-2995-4b11-6e87-60b06e429012') {\n            nombreModuloZona = '200';\n        }else if (currentItem.zones[0] === 'f1e50c10-4563-455d-68ce-e1e1235634c7') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'e8d00714-b675-4384-7e90-458a47541125') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'fe794929-16d4-4059-70f7-b17454e7c6a2') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1120,
        "wires": [
            [
                "f30e97a89cb01123"
            ]
        ]
    },
    {
        "id": "0893955a08d1a22c",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "FRENTE ISLAS WAGNER 🐟 🟢",
        "info": "",
        "x": 180,
        "y": 1080,
        "wires": []
    },
    {
        "id": "53ba126b132016aa",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/graffer",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1200,
        "wires": [
            [
                "5a18a65f5252ec48"
            ]
        ]
    },
    {
        "id": "5a18a65f5252ec48",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1200,
        "wires": [
            [
                "ed568552fc25f773"
            ]
        ]
    },
    {
        "id": "e4c8be0598e89117",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "ed568552fc25f773",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Graffer",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "132",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1200,
        "wires": [
            [
                "47db85ae78f9c1a2"
            ]
        ]
    },
    {
        "id": "47db85ae78f9c1a2",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'bdb5f803-1d2e-4ec2-6e7f-c922b0ee5a06') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '32a10fa3-15b1-4f58-45d5-55e7c9dc05f9') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'a709d5bf-ff32-4a83-7fe6-2a32114d8991') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'd020ee3f-bb39-47cf-7414-dec973167bab') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1200,
        "wires": [
            [
                "e4c8be0598e89117"
            ]
        ]
    },
    {
        "id": "d4be80b08a422f4c",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "GRAFFER 🐟 🔴",
        "info": "",
        "x": 130,
        "y": 1160,
        "wires": []
    },
    {
        "id": "911fe160b4eddac8",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/herradura",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1280,
        "wires": [
            [
                "239725429ee4e628"
            ]
        ]
    },
    {
        "id": "239725429ee4e628",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1280,
        "wires": [
            [
                "946d2b01b5a9414b"
            ]
        ]
    },
    {
        "id": "a189fbfe74168d14",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "946d2b01b5a9414b",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Herradura",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "133",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1280,
        "wires": [
            [
                "95a704e0fcc13193"
            ]
        ]
    },
    {
        "id": "95a704e0fcc13193",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '436e4287-daa8-4610-7cb7-a9b7d0261e9b') {\n            nombreModuloZona = '100';\n        }else if (currentItem.zones[0] === '7497e4a7-5d42-4630-60b2-719afef2eab0') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '28c06adb-5339-4476-61dd-b14392936c40') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '85126ed3-bfee-45a5-6b44-dd5b0dc06b02') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '181d05cb-b74e-4363-418e-84398b321137') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1280,
        "wires": [
            [
                "a189fbfe74168d14"
            ]
        ]
    },
    {
        "id": "0138da8e127c8fb3",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "HERRADURA 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 1240,
        "wires": []
    },
    {
        "id": "f6ad995e6ba125ef",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/huelmo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1360,
        "wires": [
            [
                "be0dda88180a43fe"
            ]
        ]
    },
    {
        "id": "be0dda88180a43fe",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1360,
        "wires": [
            [
                "e73f6b94ad4641df"
            ]
        ]
    },
    {
        "id": "cde0590a0ac3df17",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "e73f6b94ad4641df",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Huelmo",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "134",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1360,
        "wires": [
            [
                "e009ccc718a01390"
            ]
        ]
    },
    {
        "id": "e009ccc718a01390",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '2aab0bba-13e3-4414-71a2-6d9c02e3c4ce') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '52bee7c6-02d2-4d82-5455-f42d20adc80b') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '1fe1688e-a99e-416a-62a1-a5d359d4af42') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '32e60a2d-6501-4776-7b9d-e1934f400362') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'd8b0f076-70f1-49a4-452f-2eead1c9911b') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {       \n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,    \n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1360,
        "wires": [
            [
                "cde0590a0ac3df17"
            ]
        ]
    },
    {
        "id": "a4b42742957071f2",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "HUELMO 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1320,
        "wires": []
    },
    {
        "id": "d0b4c268946c3ae9",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/huenquillahue",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1440,
        "wires": [
            [
                "b8e67448c035b9be"
            ]
        ]
    },
    {
        "id": "b8e67448c035b9be",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1440,
        "wires": [
            [
                "20d6ed13f5b53b14"
            ]
        ]
    },
    {
        "id": "31c0349739c11f06",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "20d6ed13f5b53b14",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Huenquillahue",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "135",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1440,
        "wires": [
            [
                "89910859e7928356"
            ]
        ]
    },
    {
        "id": "89910859e7928356",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '9525d165-b6fb-4f68-6a43-fbb293ca13e5') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '13e101ee-6ab5-4baa-4915-735db0bef481') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === 'd371c139-22d5-4e15-4489-ea87aa8f8379') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'd5ab2a19-d045-430c-4f72-df0984044908') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '2a4ef2ee-c884-4ce6-4654-0e2476f882a8') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1440,
        "wires": [
            [
                "31c0349739c11f06"
            ]
        ]
    },
    {
        "id": "5ac0b114873dfa48",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "HUENQUILLAHUE 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 1400,
        "wires": []
    },
    {
        "id": "bf8ecb53e1f952b1",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/islasanchezaqua",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1520,
        "wires": [
            [
                "e403f6d99fe5b873"
            ]
        ]
    },
    {
        "id": "e403f6d99fe5b873",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1520,
        "wires": [
            [
                "4d51de06d9da7f41"
            ]
        ]
    },
    {
        "id": "34f5d3d12d5d02b3",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "4d51de06d9da7f41",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Isla Sanchez",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "136",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1520,
        "wires": [
            [
                "cbd6445da7572b49"
            ]
        ]
    },
    {
        "id": "cbd6445da7572b49",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'dc8f384d-8c27-4c14-5ccb-416c7bdf005c') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '5fd8e52e-b8ba-4344-4469-91fc53d83c76') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '144e3dd5-92a6-47e9-6907-7146e6b9cea7') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '67e237f9-e665-42d9-679f-9ceba46fa9bb') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil,\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1520,
        "wires": [
            [
                "34f5d3d12d5d02b3"
            ]
        ]
    },
    {
        "id": "5e7ad88e020e1c41",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "ISLA SANCHEZ 🐟 🔴",
        "info": "",
        "x": 140,
        "y": 1480,
        "wires": []
    },
    {
        "id": "3153f2fbc10aab10",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/ladrilleros",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1600,
        "wires": [
            [
                "fa7101cb1a77fd88"
            ]
        ]
    },
    {
        "id": "fa7101cb1a77fd88",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1600,
        "wires": [
            [
                "d8281a1311dea61d"
            ]
        ]
    },
    {
        "id": "99f005d77e4146de",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "d8281a1311dea61d",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Ladrilleros",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "137",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1600,
        "wires": [
            [
                "f17fe353099ba7a4"
            ]
        ]
    },
    {
        "id": "f17fe353099ba7a4",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4d68fc37-4169-42ce-5e35-11e3d191726d') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'dc35cd27-c090-416b-5ea3-a8dec3422a09') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === 'c9ffd728-46b1-4863-4d4d-79fc6688c38d') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'dc12514a-e3ee-441a-585a-cc2bf928c926') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '02461d86-4bd8-4df0-4c63-c6707ea5abe4') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1600,
        "wires": [
            [
                "99f005d77e4146de"
            ]
        ]
    },
    {
        "id": "aef750b19be4633f",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "LADRILLEROS 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 1560,
        "wires": []
    },
    {
        "id": "b8112efd0ecbf333",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/marta",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1680,
        "wires": [
            [
                "bb35cad6facf1421"
            ]
        ]
    },
    {
        "id": "bb35cad6facf1421",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1680,
        "wires": [
            [
                "9bfbceae8e2fadf9"
            ]
        ]
    },
    {
        "id": "b5e86fbd1c73e8cf",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "9bfbceae8e2fadf9",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Marta",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "138",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1680,
        "wires": [
            [
                "75cfcfefea252e0e"
            ]
        ]
    },
    {
        "id": "75cfcfefea252e0e",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4d50324f-9862-4e7c-52ee-ecaffc13b955') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'fe7ccd77-85b6-45ec-5911-152fa57a8563') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '82190faf-a191-45a7-423f-b379a24e2505') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'ae4417cc-a08b-4e54-6aae-20b2e3fd0408') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1680,
        "wires": [
            [
                "b5e86fbd1c73e8cf"
            ]
        ]
    },
    {
        "id": "e709100941889433",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "MARTA 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1640,
        "wires": []
    },
    {
        "id": "ccb43318d824318b",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/pamela",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1760,
        "wires": [
            [
                "bacff0ca1676e567"
            ]
        ]
    },
    {
        "id": "bacff0ca1676e567",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1760,
        "wires": [
            [
                "370234408da0d7b9"
            ]
        ]
    },
    {
        "id": "2564ebee7a2ba77f",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "370234408da0d7b9",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pamela",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "139",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1760,
        "wires": [
            [
                "b6b6ce7ad29b1c33"
            ]
        ]
    },
    {
        "id": "b6b6ce7ad29b1c33",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'f98b0c28-cef2-42fc-6af9-86262092feee') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '7d0626b8-ef3f-4a99-7371-1be5e289c978') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '12b679e2-453a-450c-5a23-4edcf4ca386d') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'a3b5c35a-92e2-446c-46ee-21fdecedec33') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;    \n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }    \n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1760,
        "wires": [
            [
                "2564ebee7a2ba77f"
            ]
        ]
    },
    {
        "id": "6fb73c88adb4c15d",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "PAMELA 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1720,
        "wires": []
    },
    {
        "id": "b30920e05607f95f",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/pangal1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1840,
        "wires": [
            [
                "1f3b8d474109c704"
            ]
        ]
    },
    {
        "id": "1f3b8d474109c704",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1840,
        "wires": [
            [
                "22e7ca8554de05f3"
            ]
        ]
    },
    {
        "id": "ef1ee834942d4927",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "22e7ca8554de05f3",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pangal 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "140",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1840,
        "wires": [
            [
                "8de028105274ccd8"
            ]
        ]
    },
    {
        "id": "8de028105274ccd8",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'e34977b1-2b5a-45fd-50ed-e46fc4168e40') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'faaf428e-633e-44dd-6274-caa57279b5ed') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '093b528b-5237-4e7b-6686-3c2ddd94d012') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '186248fa-1997-4587-4eed-65b2df66e7e4') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1840,
        "wires": [
            [
                "ef1ee834942d4927"
            ]
        ]
    },
    {
        "id": "418925fb52446fd3",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "PANGAL 1 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 1800,
        "wires": []
    },
    {
        "id": "acad4611fd7bff58",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/pangal2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1920,
        "wires": [
            [
                "aac753079daded85"
            ]
        ]
    },
    {
        "id": "aac753079daded85",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1920,
        "wires": [
            [
                "8ce8a04137ba8b47"
            ]
        ]
    },
    {
        "id": "3ec9e15513d88935",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "8ce8a04137ba8b47",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pangal 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "141",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1920,
        "wires": [
            [
                "724b52ff0e3ffd44"
            ]
        ]
    },
    {
        "id": "724b52ff0e3ffd44",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '7fbe2ba2-86d5-46ed-40d7-c774977ec291') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'ed3f6cda-e15c-4305-52af-efbb4a1d4acb') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '67540a91-337b-47b7-7990-725ce6e945cb') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === 'bfa3fe1b-f464-4a47-5cb5-7fa83c569c6b') {\n            nombreModuloZona = 'EXTERIOR100';\n        } else if (currentItem.zones[0] === 'ff5fad04-77ad-4634-77b7-cfbb4193eba2') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === '1349cc45-2482-488e-473f-a4eefa2782f5') {\n            nombreModuloZona = 'EXTERIOR200';\n        } else if (currentItem.zones[0] === 'c494c96a-a3f2-44d6-5de2-1d208363cc0f') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 1920,
        "wires": [
            [
                "3ec9e15513d88935"
            ]
        ]
    },
    {
        "id": "781be03b349acf0c",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "PANGAL 2 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 1880,
        "wires": []
    },
    {
        "id": "24d97099024b171c",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/refugio",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2000,
        "wires": [
            [
                "814e18083099dce5"
            ]
        ]
    },
    {
        "id": "814e18083099dce5",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2000,
        "wires": [
            [
                "2f23e542d29eb7b1"
            ]
        ]
    },
    {
        "id": "73d7bd82c957e763",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "2f23e542d29eb7b1",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Refugio",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "142",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2000,
        "wires": [
            [
                "4224be3fe8703f61"
            ]
        ]
    },
    {
        "id": "4224be3fe8703f61",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '427b9d05-da9b-4f99-555d-d7fd49218db9') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '639d76bb-84ce-4ba1-6a59-ecf0191ec520') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '02684e44-d900-4cf8-77eb-a38e467abd3c') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2000,
        "wires": [
            [
                "73d7bd82c957e763"
            ]
        ]
    },
    {
        "id": "7cda06894986767c",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "REFUGIO 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1960,
        "wires": []
    },
    {
        "id": "1c63d26b730e271f",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/serrano",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2080,
        "wires": [
            [
                "50fbed945f7ed322"
            ]
        ]
    },
    {
        "id": "50fbed945f7ed322",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2080,
        "wires": [
            [
                "1c1c6486bad6b668"
            ]
        ]
    },
    {
        "id": "df6b59e4479853a9",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "1c1c6486bad6b668",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Serrano",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "143",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2080,
        "wires": [
            [
                "7b831b8ef0ade363"
            ]
        ]
    },
    {
        "id": "7b831b8ef0ade363",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '04f83931-97ce-45e3-6202-3d60b9c1a993') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'c659e24e-8d24-4b57-6821-168baa4973e9') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'b75eae40-6107-424c-6530-29adb77057fd') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '48e44b0c-36f7-4bf2-7d1f-dacfed4ae634') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2080,
        "wires": [
            [
                "df6b59e4479853a9"
            ]
        ]
    },
    {
        "id": "150fcfa1c5d76377",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "SERRANO 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2040,
        "wires": []
    },
    {
        "id": "22fa7badf44beb12",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/staines2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2160,
        "wires": [
            [
                "229d4c0189c88656"
            ]
        ]
    },
    {
        "id": "229d4c0189c88656",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2160,
        "wires": [
            [
                "af14b2b89e8ec702"
            ]
        ]
    },
    {
        "id": "d3d7a3d9186d42e0",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "af14b2b89e8ec702",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Staines 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "144",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2160,
        "wires": [
            [
                "6f580ce6ef684096"
            ]
        ]
    },
    {
        "id": "6f580ce6ef684096",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '79d57fbb-4f86-4b77-74a6-41a1f6a26366') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '2195739d-631c-4580-5af3-678f64d8dfdc') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '2b9e3368-fcdc-42cb-7d88-ecf92d70ee65') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '7cca3aeb-7f93-429a-7321-4ed41518744d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {       \n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2160,
        "wires": [
            [
                "d3d7a3d9186d42e0"
            ]
        ]
    },
    {
        "id": "60880a777e4ca528",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "STAINES 2 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2120,
        "wires": []
    },
    {
        "id": "f2b2326b1d7b1525",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/teguel1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2240,
        "wires": [
            [
                "ca9f525c2e8926d0"
            ]
        ]
    },
    {
        "id": "ca9f525c2e8926d0",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2240,
        "wires": [
            [
                "688c318ccd8644ae"
            ]
        ]
    },
    {
        "id": "736d57c14134c993",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "688c318ccd8644ae",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Teguel 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "145",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2240,
        "wires": [
            [
                "cf8c46fa3ab4099f"
            ]
        ]
    },
    {
        "id": "cf8c46fa3ab4099f",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'fde3ed65-a309-4eb5-5c5c-a321b5293cdb') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'aff0a432-9ea2-4e8d-756d-ad4a71516cc6') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c0765270-24da-4c2f-6dde-d8bc208bcb0f') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '6d6b1423-545f-4a87-51e1-22843bcaf66c') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2240,
        "wires": [
            [
                "736d57c14134c993"
            ]
        ]
    },
    {
        "id": "1047bc9dd31ab186",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "TEGUEL 1 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2200,
        "wires": []
    },
    {
        "id": "82d1ce35d4d09192",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/teguel3",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2320,
        "wires": [
            [
                "9c19601763286844"
            ]
        ]
    },
    {
        "id": "9c19601763286844",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2320,
        "wires": [
            [
                "035784a88f61df59"
            ]
        ]
    },
    {
        "id": "77a75b794b70d82b",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "035784a88f61df59",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Teguel 3",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "146",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2320,
        "wires": [
            [
                "ccf0c0d9aab0d02e"
            ]
        ]
    },
    {
        "id": "ccf0c0d9aab0d02e",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4356d915-27db-41ce-4fcf-6bb591720acf') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '55bd80cd-fe6d-41c9-4186-d021866021ee') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'babe5eab-a7df-4312-4ed4-289bd12b8d6a') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'fbb128f0-6ac9-4d26-6a97-3798eebc4c11') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil,\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2320,
        "wires": [
            [
                "77a75b794b70d82b"
            ]
        ]
    },
    {
        "id": "83b22df4b77ac4cc",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "TEGUEL 3 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2280,
        "wires": []
    },
    {
        "id": "3e410b5ab48d80db",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/teresa1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2400,
        "wires": [
            [
                "1386abc7440fb8a9"
            ]
        ]
    },
    {
        "id": "1386abc7440fb8a9",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2400,
        "wires": [
            [
                "a184773afe3f0f2a"
            ]
        ]
    },
    {
        "id": "4373d026b60e7907",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "a184773afe3f0f2a",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Teresa 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "147",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2400,
        "wires": [
            [
                "62252a50c8d3c958"
            ]
        ]
    },
    {
        "id": "62252a50c8d3c958",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '16396220-b35c-4558-5451-e6c7ec9000c2') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '8c407982-1ffe-4cb1-7467-3f32e403cf23') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '15e6e855-b7a7-43b3-4508-01ae9ca12fbd') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '7f6bf50c-b6df-43bc-5ddb-37229fcccd3e') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2400,
        "wires": [
            [
                "4373d026b60e7907"
            ]
        ]
    },
    {
        "id": "e1197e507252f7e9",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "TERESA 1 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2360,
        "wires": []
    },
    {
        "id": "92de83b7aa5f2d50",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/valverde6",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2480,
        "wires": [
            [
                "3d65c27c65bd01db"
            ]
        ]
    },
    {
        "id": "3d65c27c65bd01db",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2480,
        "wires": [
            [
                "1a954370b9d20a35"
            ]
        ]
    },
    {
        "id": "8ef46ded230e75b6",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2480,
        "wires": [
            []
        ]
    },
    {
        "id": "1a954370b9d20a35",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Valverde 6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "148",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2480,
        "wires": [
            [
                "23bb2d8d95223b3b"
            ]
        ]
    },
    {
        "id": "23bb2d8d95223b3b",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '04f17a82-92ad-46eb-496b-bd333e872b89') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '787b2829-a265-40cd-5f9c-93eedc988b6f') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c3993fe2-481b-4740-7afe-c5ae4ceeb2e8') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'ca4ff249-3200-462a-62ae-0644c7f4811d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2480,
        "wires": [
            [
                "8ef46ded230e75b6"
            ]
        ]
    },
    {
        "id": "ed3027e6efa41bf6",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "VALVERDE 6 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 2440,
        "wires": []
    },
    {
        "id": "e2882ca8ad6c1e7c",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/vicunamackenna",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2560,
        "wires": [
            [
                "0452fea44b7fee13"
            ]
        ]
    },
    {
        "id": "0452fea44b7fee13",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2560,
        "wires": [
            [
                "4959631b822bd2ab"
            ]
        ]
    },
    {
        "id": "07599d4f82694fe5",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "4959631b822bd2ab",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Vicuña Mackenna",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "149",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2560,
        "wires": [
            [
                "75162d730d90f3a5"
            ]
        ]
    },
    {
        "id": "75162d730d90f3a5",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '34bf3368-bb32-41e3-54eb-703714285bf4') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '1d86783c-296f-4044-42e8-e09d5263f745') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === 'fbd8ce18-ec3d-4a75-48bf-cf82741330eb') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === '2945d446-4c8b-4521-4295-1642ba11430f') {\n            nombreModuloZona = 'EXTERIOR100';\n        } else if (currentItem.zones[0] === 'c95839ae-cf1b-4866-53aa-ee455fdd0c00') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === '08fa4eb8-99b3-4e67-7294-f1f97fd68513') {\n            nombreModuloZona = 'EXTERIOR200';\n        }else if (currentItem.zones[0] === 'b61d82e3-3989-4ee0-6897-332093096c74') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2560,
        "wires": [
            [
                "07599d4f82694fe5"
            ]
        ]
    },
    {
        "id": "5bb03865af0983f1",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "VICUNA MACKENA 🐟 🟢",
        "info": "",
        "x": 160,
        "y": 2520,
        "wires": []
    },
    {
        "id": "e6b2e8f99e945aca",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/marchant",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2640,
        "wires": [
            [
                "3697efb8aef3f0f0"
            ]
        ]
    },
    {
        "id": "3697efb8aef3f0f0",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2640,
        "wires": [
            [
                "45348027b8296fc3"
            ]
        ]
    },
    {
        "id": "436de84da27f456c",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "45348027b8296fc3",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Marchant",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "150",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2640,
        "wires": [
            [
                "c74ff2b537c38267"
            ]
        ]
    },
    {
        "id": "c74ff2b537c38267",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '40749aa3-9616-4ca8-701f-a900786a939b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '0aeef2cf-e7a8-40a2-7676-bc0a4fff13e8') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'e2c098ff-7f12-4e88-4ade-2fcb3eee1300') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '69763286-f269-4eb3-7f65-0d4b1f1cfb36') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2640,
        "wires": [
            [
                "436de84da27f456c"
            ]
        ]
    },
    {
        "id": "990b0aec1c9de254",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "MARCHANT 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2600,
        "wires": []
    },
    {
        "id": "8e6b413f5e119a6b",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/wagner1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2720,
        "wires": [
            [
                "877dbd0d5eebf215"
            ]
        ]
    },
    {
        "id": "877dbd0d5eebf215",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2720,
        "wires": [
            [
                "c4f1c8b746c115e9"
            ]
        ]
    },
    {
        "id": "9cbdc382f5b28ce4",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "c4f1c8b746c115e9",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Wagner1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "151",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2720,
        "wires": [
            [
                "6e7080496ebf8cc0"
            ]
        ]
    },
    {
        "id": "6e7080496ebf8cc0",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '2857e321-2446-45dd-73a8-ff0eead59bcc') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'eca5df23-6d8a-4200-69bf-9cec30a8abe2') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c876e388-afe7-473f-4e3e-e2e8af2f6913') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '60d9f5bf-5230-4778-5ac2-7a26c0732676') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2720,
        "wires": [
            [
                "9cbdc382f5b28ce4"
            ]
        ]
    },
    {
        "id": "10b910e841b7f655",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "WAGNER1 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2680,
        "wires": []
    },
    {
        "id": "a24f83300c3412e1",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/gertrudis1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2800,
        "wires": [
            [
                "99efc4cde97d386f"
            ]
        ]
    },
    {
        "id": "99efc4cde97d386f",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2800,
        "wires": [
            [
                "664bcc2c5d6aa9b5"
            ]
        ]
    },
    {
        "id": "027ff8115225ceb0",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "664bcc2c5d6aa9b5",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Gertrudis 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "157",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2800,
        "wires": [
            [
                "fbc5678f037b80ae"
            ]
        ]
    },
    {
        "id": "fbc5678f037b80ae",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'f18e734f-e446-47a4-45a2-070699611bdb') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '66ab92ad-68a2-4902-4138-5d5d1002b0af') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '92aedf60-8349-4ad7-5b10-96857bf9db90') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'c2e0d9e6-f6a1-4acb-5775-c1fac3301f1b') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }\n        else if (currentItem.zones[0] === 'fe8d4483-410b-4e87-4000-814c1fa6d7fc') {\n            nombreModuloZona = 'ALERTA1';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING' && nombreModuloZona !== 'ALERTA1') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2800,
        "wires": [
            [
                "027ff8115225ceb0"
            ]
        ]
    },
    {
        "id": "b9237b6f1fa4a693",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "GERTRUDIS1 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 2760,
        "wires": []
    },
    {
        "id": "4f3cb2e8da5b5041",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/staines4",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2880,
        "wires": [
            [
                "192298bf9621573f"
            ]
        ]
    },
    {
        "id": "192298bf9621573f",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2880,
        "wires": [
            [
                "af6231f8e986e8ec"
            ]
        ]
    },
    {
        "id": "46a8127f73fc16b3",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "af6231f8e986e8ec",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Staines 4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "158",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2880,
        "wires": [
            [
                "10ab0df98b8dee9a"
            ]
        ]
    },
    {
        "id": "10ab0df98b8dee9a",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'fa69b4d6-4fad-4532-6beb-893df713b90d') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'c2fea819-98c9-4377-6b36-9f58d705948c') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '0256ae14-5901-4002-756d-e4db7a69315b') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === 'f1da9617-9325-43ca-742e-b326822b1f9c') {\n            nombreModuloZona = 'EXTERIOR100';\n        } else if (currentItem.zones[0] === '70862b4f-a87d-4586-513a-557c6e4b37a1') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === '924f6e3a-f8c1-4054-49cd-b1f45a4cff30') {\n            nombreModuloZona = 'EXTERIOR200';\n        }else if (currentItem.zones[0] === '80a882a3-7027-441c-6cdf-45159bbf809a') {\n            nombreModuloZona = 'ACTIVETRACKING100';\n        }else if (currentItem.zones[0] === '6b630572-39c7-4da4-7bc4-f28eeffaa269') {\n            nombreModuloZona = 'ACTIVETRACKING200';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n         // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVETRACKING100' && nombreModuloZona !== 'ACTIVETRACKING200') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2880,
        "wires": [
            [
                "46a8127f73fc16b3"
            ]
        ]
    },
    {
        "id": "496ccb3993574e25",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "STAINES4 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 2840,
        "wires": []
    },
    {
        "id": "40128dc4c2c8d95d",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/tahuenahuec",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2960,
        "wires": [
            [
                "48c36a367a829cd4"
            ]
        ]
    },
    {
        "id": "48c36a367a829cd4",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2960,
        "wires": [
            [
                "71ce17289a2e7b71"
            ]
        ]
    },
    {
        "id": "63fd41165e44f7e2",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2960,
        "wires": [
            []
        ]
    },
    {
        "id": "71ce17289a2e7b71",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Tahuenahuec",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "159",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2960,
        "wires": [
            [
                "3e678d023a65b3ab"
            ]
        ]
    },
    {
        "id": "3e678d023a65b3ab",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '73788143-fba7-481d-76d3-7dd79bb72e02') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'a3c7c69e-0763-40e2-4463-adf441f24478') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'a59f9a8e-7ecb-4417-519e-85c23e2fbf0a') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '2f2722ed-f7fd-41f5-69de-d0f5abc2464b') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 2960,
        "wires": [
            [
                "63fd41165e44f7e2"
            ]
        ]
    },
    {
        "id": "56ceaad2d4dfe4ea",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "TAHUENAHUEC 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 2920,
        "wires": []
    },
    {
        "id": "5a5615d3a9f8bcd3",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/melchor1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 3040,
        "wires": [
            [
                "344742f1191f9060"
            ]
        ]
    },
    {
        "id": "344742f1191f9060",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 3040,
        "wires": [
            [
                "76238069e6d9e975"
            ]
        ]
    },
    {
        "id": "9ea84322d143ba33",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "76238069e6d9e975",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Melchor 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "166",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 3040,
        "wires": [
            [
                "cd6bfc4c0401b379"
            ]
        ]
    },
    {
        "id": "cd6bfc4c0401b379",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'b1c80a89-4a65-44e7-7e24-30e29d79c9e4') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '9bb5f381-eb75-4fbf-44f4-3297c7d1eefa') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'ef8f51b0-5935-4dbc-6f9e-48f38b2fc9f1') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'd07d4e95-ca01-4f0d-68a0-a028c8b7005f') {\n            nombreModuloZona = 'ACTIVETRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVETRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 3040,
        "wires": [
            [
                "9ea84322d143ba33"
            ]
        ]
    },
    {
        "id": "a1dd6295719e480a",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "MELCHOR1 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 3000,
        "wires": []
    },
    {
        "id": "c23796451f72b828",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/luna2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 3120,
        "wires": [
            [
                "0e6314e56a3263be"
            ]
        ]
    },
    {
        "id": "0e6314e56a3263be",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 3120,
        "wires": [
            [
                "1c4804997764b92a"
            ]
        ]
    },
    {
        "id": "379b942da7088eff",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 3120,
        "wires": [
            []
        ]
    },
    {
        "id": "1c4804997764b92a",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Luna 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "168",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 3120,
        "wires": [
            [
                "85370a8c3123dfc4"
            ]
        ]
    },
    {
        "id": "85370a8c3123dfc4",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'ac4a5b41-2a1c-4a47-65d5-a0781e66416f') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '45c1671c-5365-4b87-48ff-a5ee55d0032c') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '1de453f2-0ebb-4230-796c-4b637ed70e8b') {\n        nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '3cc88abe-5031-4799-4aee-3ff56c3c2260') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '81d16de3-76cf-4746-79f4-6acccd969185') {\n            nombreModuloZona = 'ACTIVETRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVETRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 3120,
        "wires": [
            [
                "379b942da7088eff"
            ]
        ]
    },
    {
        "id": "d25afc4e69d1b432",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "LUNA2 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 3080,
        "wires": []
    },
    {
        "id": "3c58297647eaec18",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/luna2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 3200,
        "wires": [
            [
                "e6faec0426b9dfb8"
            ]
        ]
    },
    {
        "id": "e6faec0426b9dfb8",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 3200,
        "wires": [
            [
                "ca04d13e1387dca8"
            ]
        ]
    },
    {
        "id": "743af48a85ad62a9",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 3200,
        "wires": [
            []
        ]
    },
    {
        "id": "ca04d13e1387dca8",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Luna 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "168",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 3200,
        "wires": [
            [
                "bab4ac8bf4ae8d4e"
            ]
        ]
    },
    {
        "id": "bab4ac8bf4ae8d4e",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'ac4a5b41-2a1c-4a47-65d5-a0781e66416f') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '45c1671c-5365-4b87-48ff-a5ee55d0032c') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '1de453f2-0ebb-4230-796c-4b637ed70e8b') {\n        nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '3cc88abe-5031-4799-4aee-3ff56c3c2260') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '81d16de3-76cf-4746-79f4-6acccd969185') {\n            nombreModuloZona = 'ACTIVETRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVETRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 3200,
        "wires": [
            [
                "743af48a85ad62a9"
            ]
        ]
    },
    {
        "id": "2e66b96add03faa2",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "BETECOI🐟 🟢",
        "info": "",
        "x": 120,
        "y": 3160,
        "wires": []
    },
    {
        "id": "3710db7c30bc790c",
        "type": "http in",
        "z": "0640bd3b67d5f3d7",
        "name": "NIO",
        "url": "/api/spotter/valverde1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 3280,
        "wires": [
            [
                "a369cd134d819a88"
            ]
        ]
    },
    {
        "id": "a369cd134d819a88",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 3280,
        "wires": [
            [
                "3d85b951fe94a806"
            ]
        ]
    },
    {
        "id": "7d25cdfad5d62a4e",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 3280,
        "wires": [
            []
        ]
    },
    {
        "id": "3d85b951fe94a806",
        "type": "change",
        "z": "0640bd3b67d5f3d7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Valverde 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "170",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 3280,
        "wires": [
            [
                "2818cbb6a6f984b8"
            ]
        ]
    },
    {
        "id": "2818cbb6a6f984b8",
        "type": "function",
        "z": "0640bd3b67d5f3d7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'b9cc89ae-1c4f-469d-7b9d-b97f9dfabc56') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'e931ef57-afea-42e7-5c23-eb4a50f16f47') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '597839fd-a351-429d-5c97-2099a91aec8f') {\n        nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '23eacd08-5e0e-481f-5fd6-be407f07c32b') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '77add245-9fb5-4dc4-5adf-5bcf1662e808') {\n            nombreModuloZona = 'ACTIVETRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVETRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 3280,
        "wires": [
            [
                "7d25cdfad5d62a4e"
            ]
        ]
    },
    {
        "id": "4bd6eee07de223ce",
        "type": "comment",
        "z": "0640bd3b67d5f3d7",
        "name": "VALVERDE1🐟 🟢",
        "info": "",
        "x": 130,
        "y": 3240,
        "wires": []
    },
    {
        "id": "2a72f068132f52bd",
        "type": "switch",
        "z": "f97af136a24da3eb",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 300,
        "wires": [
            [
                "610ba05b816e9f7e"
            ],
            [
                "610ba05b816e9f7e"
            ]
        ]
    },
    {
        "id": "8cf717787010b592",
        "type": "mongodb-collection",
        "z": "f97af136a24da3eb",
        "name": "findDB",
        "config": "7f4abdf7264f2705",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 130,
        "y": 300,
        "wires": [
            [
                "8d09091b69770d23"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "86b1edc22108010b",
        "type": "function",
        "z": "f97af136a24da3eb",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 300,
        "wires": [
            [
                "2a72f068132f52bd"
            ]
        ]
    },
    {
        "id": "610ba05b816e9f7e",
        "type": "change",
        "z": "f97af136a24da3eb",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 300,
        "wires": [
            [
                "8620f49059c025e0"
            ]
        ]
    },
    {
        "id": "8620f49059c025e0",
        "type": "switch",
        "z": "f97af136a24da3eb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 300,
        "wires": [
            [
                "25e65b5d421bfe25",
                "9ebac280569d32fd",
                "15658010311f856c"
            ],
            [
                "25e65b5d421bfe25",
                "1005bb1e946d69f8",
                "ef762981d1f6cb14",
                "9ebac280569d32fd",
                "adaae2bdba726caa",
                "47aad2381b65cec4",
                "15658010311f856c"
            ]
        ]
    },
    {
        "id": "adaae2bdba726caa",
        "type": "mongodb-collection",
        "z": "f97af136a24da3eb",
        "name": "insert_seguridad_movil",
        "config": "7f4abdf7264f2705",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 950,
        "y": 120,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "1005bb1e946d69f8",
        "type": "mongodb-collection",
        "z": "f97af136a24da3eb",
        "name": "insert_seguridad",
        "config": "7f4abdf7264f2705",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 910,
        "y": 80,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "25e65b5d421bfe25",
        "type": "mongodb-collection",
        "z": "f97af136a24da3eb",
        "name": "insert_seguridad_detalle",
        "config": "7f4abdf7264f2705",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 850,
        "y": 40,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "9ebac280569d32fd",
        "type": "change",
        "z": "f97af136a24da3eb",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "ef762981d1f6cb14",
        "type": "change",
        "z": "f97af136a24da3eb",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "15658010311f856c",
        "type": "mongodb-collection",
        "z": "f97af136a24da3eb",
        "name": "insert_seguridad_detallebk",
        "config": "74e5c9ce9a3a5ca7",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1160,
        "y": 220,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "47aad2381b65cec4",
        "type": "mongodb-collection",
        "z": "f97af136a24da3eb",
        "name": "insert_seguridadbk",
        "config": "74e5c9ce9a3a5ca7",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1190,
        "y": 260,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "8d09091b69770d23",
        "type": "mongodb-collection",
        "z": "f97af136a24da3eb",
        "name": "findDB",
        "config": "74e5c9ce9a3a5ca7",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 250,
        "y": 300,
        "wires": [
            [
                "86b1edc22108010b"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "6f31a37837111131",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/pocoihuen",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "0c82d287f43ec67a"
            ]
        ]
    },
    {
        "id": "0c82d287f43ec67a",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 120,
        "wires": [
            [
                "e5d36c39230f9b1a"
            ]
        ]
    },
    {
        "id": "7dfdbafdd1078482",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e5d36c39230f9b1a",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pocoihuen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "107",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 120,
        "wires": [
            [
                "0c53801285dcf4ea"
            ]
        ]
    },
    {
        "id": "0c53801285dcf4ea",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n    for (var i = 0; i < arr.length; i++) {\n        var currentItem = arr[i];\n        if (currentItem.id !== undefined && currentItem.id !== null) {\n            var timestamp = new Date(currentItem.timestamp);\n            var formattedDateTime = formatDateTime(timestamp);\n\n            var nombreModuloZona;\n\n            if (currentItem.zones[0] === 'e66fa9b0-b417-4b76-4998-f7970374a37b') {\n                nombreModuloZona = '100';\n            } else if (currentItem.zones[0] === '00e657d7-826f-4958-5475-07a19f29f895') {\n                nombreModuloZona = 'INTERIOR';\n            } else if (currentItem.zones[0] === 'a17424f8-0ef5-4a43-4015-391c06bccbde') {\n                nombreModuloZona = 'EXTERIOR';\n            } else if (currentItem.zones[0] === 'b70ee8bc-90f6-4fb2-4d01-7b313ccd72e3') {\n                nombreModuloZona = 'ACTIVE_TRACKING';\n            }else {\n                nombreModuloZona = currentItem.zones[0];\n            }\n\n            // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n            if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n                \n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                \n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        } \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 120,
        "wires": [
            [
                "7dfdbafdd1078482"
            ]
        ]
    },
    {
        "id": "cfe113aa48754a0f",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "POCOIHUEN 🐟 🟢",
        "info": "",
        "x": 160,
        "y": 80,
        "wires": []
    },
    {
        "id": "6fae11909aa1b72b",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/contao",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "15b6bc02f64f90cf"
            ]
        ]
    },
    {
        "id": "15b6bc02f64f90cf",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 200,
        "wires": [
            [
                "509a3fc87199a2e8"
            ]
        ]
    },
    {
        "id": "de91a8676c534839",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "509a3fc87199a2e8",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Contao",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "108",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 200,
        "wires": [
            [
                "abb71d7ba356a077"
            ]
        ]
    },
    {
        "id": "abb71d7ba356a077",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '912eb136-60dd-4173-4b48-38d0dccd5fed') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'dede1a11-ffa6-47d8-7ba0-44f08d2de89c') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '77901925-e744-45b3-724f-3e3731bfe6bf') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'c6b6a04b-1e1b-4889-71bf-12a0f118389a') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 200,
        "wires": [
            [
                "de91a8676c534839"
            ]
        ]
    },
    {
        "id": "6e911fd6a5066c94",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "CONTAO 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 160,
        "wires": []
    },
    {
        "id": "7b8ab52990359202",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/pirquen",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "a59ddcb58c0718de"
            ]
        ]
    },
    {
        "id": "a59ddcb58c0718de",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 280,
        "wires": [
            [
                "5834309ec87eda5d"
            ]
        ]
    },
    {
        "id": "d422653e21d90423",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "5834309ec87eda5d",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pirquen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "109",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 280,
        "wires": [
            [
                "67a573681fcbd2a1"
            ]
        ]
    },
    {
        "id": "67a573681fcbd2a1",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    //adelantar una hora por atraso del servidor 10.10.7.41\n    timestamp.setHours(timestamp.getHours() + 1);\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'c880ccae-6d38-4f32-6b98-3edaa66c4372') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '32e62643-7deb-4312-4f77-b88c369709fe') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '5e35c87a-1cc8-4ed5-7144-dead32e89f8a') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            modulo: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || ''\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            modulo: 'seguridad_detalle', \n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration,\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 280,
        "wires": [
            [
                "d422653e21d90423"
            ]
        ]
    },
    {
        "id": "6a7db5bc53518c44",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "PIRQUEN ❌ SIN CONEXION",
        "info": "",
        "x": 190,
        "y": 240,
        "wires": []
    },
    {
        "id": "f7ac726cb551d21a",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/rollizofenix",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "ee6c95cf11671111"
            ]
        ]
    },
    {
        "id": "ee6c95cf11671111",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 440,
        "wires": [
            [
                "9c1f9bd4de79871e"
            ]
        ]
    },
    {
        "id": "53fc40c063dcb14a",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "9c1f9bd4de79871e",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Rollizo Fenix",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "111",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 440,
        "wires": [
            [
                "8580ddedc48ea3e4"
            ]
        ]
    },
    {
        "id": "8580ddedc48ea3e4",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '9305f291-816e-4a7b-6b9c-61b0c0d84108') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '8d69834a-470f-4cd8-4101-cd11fc353bca') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '2586cc68-525e-4630-6a33-c195a6ada8e8') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'd2d23ee2-0354-4202-73cb-022e0731c54c') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n                \n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                \n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "53fc40c063dcb14a"
            ]
        ]
    },
    {
        "id": "9361d3b5d625e51c",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "ROLLIZO-FENIX 🐟 🟢",
        "info": "",
        "x": 170,
        "y": 400,
        "wires": []
    },
    {
        "id": "f0b555b10530ea57",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/rollizodonmiguel",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 360,
        "wires": [
            [
                "3c38fbd85dfd69bf"
            ]
        ]
    },
    {
        "id": "3c38fbd85dfd69bf",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 360,
        "wires": [
            [
                "87776bf03021a105"
            ]
        ]
    },
    {
        "id": "b528a0dae8304a2f",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "87776bf03021a105",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Rollizo Don Miguel",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "110",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 360,
        "wires": [
            [
                "aed3570d203b79e5"
            ]
        ]
    },
    {
        "id": "aed3570d203b79e5",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '43bf1cec-ea21-44ea-5ef5-2902c9a38614') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '9afdc2d1-827a-4e5a-5cf2-9da3e36d98fb') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'b7e87ac0-22fd-4179-6caa-66c27bab61cc') {\n            nombreModuloZona = 'EXTERIOR';\n        }else if (currentItem.zones[0] === 'f0941e86-1c97-4fc2-7df3-cfbad573d93b') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n            \n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 360,
        "wires": [
            [
                "b528a0dae8304a2f"
            ]
        ]
    },
    {
        "id": "d894f09f67766268",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "ROLLIZO-DON MIGUEL 🐟 🟢",
        "info": "",
        "x": 190,
        "y": 320,
        "wires": []
    },
    {
        "id": "97aa4ee7d53d9501",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/quillaipe",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 520,
        "wires": [
            [
                "db9f236ba374bde9"
            ]
        ]
    },
    {
        "id": "db9f236ba374bde9",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 520,
        "wires": [
            [
                "2123aaf64a490098"
            ]
        ]
    },
    {
        "id": "3ccd218c7c3ef610",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "2123aaf64a490098",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Quillaipe",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "112",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 520,
        "wires": [
            [
                "eb4eb7f1177f4f51"
            ]
        ]
    },
    {
        "id": "eb4eb7f1177f4f51",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '8121fee9-fa99-4816-77ac-d9bbcca8d3a3') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '44b3577b-0418-4b14-7af7-d3d58cb17b2a') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c9973fc9-54b8-4bca-7768-ef36663d3d43') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '833695f9-42a3-4aba-4820-91b67203b9fc') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 520,
        "wires": [
            [
                "3ccd218c7c3ef610"
            ]
        ]
    },
    {
        "id": "edb8f65dcc8030f2",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "QUILLAIPE 🐟 🔴",
        "info": "",
        "x": 150,
        "y": 480,
        "wires": []
    },
    {
        "id": "a34b00e281a9409d",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/polocuhe",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 600,
        "wires": [
            [
                "8e81f4bca40cb08d"
            ]
        ]
    },
    {
        "id": "8e81f4bca40cb08d",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 600,
        "wires": [
            [
                "51031a91487a71f6"
            ]
        ]
    },
    {
        "id": "aa7ae3f97f1245da",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "51031a91487a71f6",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Polocuhe",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "113",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 600,
        "wires": [
            [
                "1c282226bf1e1164"
            ]
        ]
    },
    {
        "id": "1c282226bf1e1164",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '648c6588-f02f-40a2-7cd1-de8456a5f59f') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '6e32f572-8f85-47d4-78ea-68aff0b4fe82') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '9b3b94d0-1103-42b4-4ab6-56174f94d805') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 600,
        "wires": [
            [
                "aa7ae3f97f1245da"
            ]
        ]
    },
    {
        "id": "f00ce7e515889e36",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "POLOCUHE 🐟 🔴",
        "info": "",
        "x": 150,
        "y": 560,
        "wires": []
    },
    {
        "id": "c4ce53389e1166d0",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/ilque",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 680,
        "wires": [
            [
                "7e4ef6063913404a"
            ]
        ]
    },
    {
        "id": "7e4ef6063913404a",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 680,
        "wires": [
            [
                "ea8ed2787b554430"
            ]
        ]
    },
    {
        "id": "a5fed14bd26f2c0d",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "ea8ed2787b554430",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Ilque",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "114",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 680,
        "wires": [
            [
                "3bb8652defe45f88"
            ]
        ]
    },
    {
        "id": "3bb8652defe45f88",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'c620e427-713e-4215-72d7-5921d28f59e0') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '61a2ed50-7875-4516-5c8a-62ae8ec45290') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '97569ac4-fa36-47c8-4331-7f9a3316b450') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 680,
        "wires": [
            [
                "a5fed14bd26f2c0d"
            ]
        ]
    },
    {
        "id": "848af76eb33394f5",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "ILQUE 🐟 🔴",
        "info": "",
        "x": 130,
        "y": 640,
        "wires": []
    },
    {
        "id": "08f25435ef13ef7d",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/lenca",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 760,
        "wires": [
            [
                "38e57533ee23318f"
            ]
        ]
    },
    {
        "id": "38e57533ee23318f",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 760,
        "wires": [
            [
                "f744e719a29b95d1"
            ]
        ]
    },
    {
        "id": "b39711c8f83349da",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "f744e719a29b95d1",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Lenca",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "115",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 760,
        "wires": [
            [
                "a4e22142eb782b2f"
            ]
        ]
    },
    {
        "id": "a4e22142eb782b2f",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '89bcf991-d1cf-4554-6b33-a22146bf18d9b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '428daded-561e-42a9-6b5f-d5eab68af911') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '116ba791-595b-40b3-5c91-c67f644c1970') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '537429d1-bd24-4ced-49d9-3f921244070d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration\n            };\n            // Agrega \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agrega \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 760,
        "wires": [
            [
                "b39711c8f83349da"
            ]
        ]
    },
    {
        "id": "93efaa4f9dfca546",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "LENCA 🐟 🔴",
        "info": "",
        "x": 140,
        "y": 720,
        "wires": []
    },
    {
        "id": "5461be8aa868069d",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/traiguen",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 840,
        "wires": [
            [
                "b0e7fb9f4bb2f32e"
            ]
        ]
    },
    {
        "id": "b0e7fb9f4bb2f32e",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 840,
        "wires": [
            [
                "ce784e21b01b9925"
            ]
        ]
    },
    {
        "id": "1419efe24797cdee",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "ce784e21b01b9925",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Traiguen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "116",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 840,
        "wires": [
            [
                "0316226e8b95a0cd"
            ]
        ]
    },
    {
        "id": "0316226e8b95a0cd",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '19a64f20-8ed4-4025-7ae4-008fb8d5b10b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'f03dba75-4eff-45ac-6bed-ee90688833d3') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'fd38f08b-5a6e-409b-69d2-2b5986b90107') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 840,
        "wires": [
            [
                "1419efe24797cdee"
            ]
        ]
    },
    {
        "id": "2338de550b164730",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "TRAIGUEN 🐟 🔴",
        "info": "",
        "x": 150,
        "y": 800,
        "wires": []
    },
    {
        "id": "11d98b523f8ca6e7",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/verdugo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "53cae0bd935b02af"
            ]
        ]
    },
    {
        "id": "53cae0bd935b02af",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 920,
        "wires": [
            [
                "ecd6c9328845018f"
            ]
        ]
    },
    {
        "id": "ea2d206ef78b8a6b",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "ecd6c9328845018f",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Verdugo",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "117",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 920,
        "wires": [
            [
                "9d50465117826eda"
            ]
        ]
    },
    {
        "id": "9d50465117826eda",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '3c1f5685-6fc1-458a-5cd4-f41c3d9d6850') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'f8f1302a-a787-42ca-795a-2067f535aad7') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '9cc50831-d829-4ede-6219-735cbc595b02') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 920,
        "wires": [
            [
                "ea2d206ef78b8a6b"
            ]
        ]
    },
    {
        "id": "29ebb7d9b45e7e82",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "VERDUGO 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 880,
        "wires": []
    },
    {
        "id": "d8bffabdda3a3272",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/becerra",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1000,
        "wires": [
            [
                "f06b74937f36d46e"
            ]
        ]
    },
    {
        "id": "f06b74937f36d46e",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1000,
        "wires": [
            [
                "e9a275c0106f80b0"
            ]
        ]
    },
    {
        "id": "36b3d442b7f6202a",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "e9a275c0106f80b0",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Becerra",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "152",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1000,
        "wires": [
            [
                "7ab94629b0a95d55"
            ]
        ]
    },
    {
        "id": "7ab94629b0a95d55",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '986cfa4a-432d-4d6d-4a78-f1420e07336e') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '63f937b2-2719-4ab7-7944-8a9e8d6aebfb') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '60af5210-e712-482f-76c7-67fba2e5bb2e') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '61cd7904-6aee-46b6-6ae0-e8aede41759c') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 1000,
        "wires": [
            [
                "36b3d442b7f6202a"
            ]
        ]
    },
    {
        "id": "9d9ca950e8ace3a7",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "BECERRA 🐟  🟢",
        "info": "",
        "x": 150,
        "y": 960,
        "wires": []
    },
    {
        "id": "495604f2d1a2270d",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/errazuriz",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1080,
        "wires": [
            [
                "cf18ab02024a5437"
            ]
        ]
    },
    {
        "id": "cf18ab02024a5437",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1080,
        "wires": [
            [
                "1b84e3c4db9397f1"
            ]
        ]
    },
    {
        "id": "9f5509b2a3b9bbfa",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "1b84e3c4db9397f1",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Errazuriz",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "153",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1080,
        "wires": [
            [
                "606361562c391d82"
            ]
        ]
    },
    {
        "id": "606361562c391d82",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'e693e896-6208-44d3-5462-f55503addf1b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '75c1a579-b5d6-4b2d-4f9d-65f4cfdcf679') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '632e0521-de8c-4cc4-68d5-047e08d077bc') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'bfc0aa7d-d27a-47cb-7a3f-9f4ed332e482') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 1080,
        "wires": [
            [
                "9f5509b2a3b9bbfa"
            ]
        ]
    },
    {
        "id": "74e044c81be6e237",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "ERRAZURIZ 🐟  🟢",
        "info": "",
        "x": 150,
        "y": 1040,
        "wires": []
    },
    {
        "id": "60b464da36275b6a",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/pichagua",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1160,
        "wires": [
            [
                "34a6054e76946253"
            ]
        ]
    },
    {
        "id": "34a6054e76946253",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1160,
        "wires": [
            [
                "722bbb89fc5d34a3"
            ]
        ]
    },
    {
        "id": "98de5bc63adc556b",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "722bbb89fc5d34a3",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pichagua",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "154",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1160,
        "wires": [
            [
                "1f5a23b26a043b52"
            ]
        ]
    },
    {
        "id": "1f5a23b26a043b52",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'e0d40027-fe8d-45f9-6166-a8b62a7677fe') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '0b0e935c-040b-41f2-6a14-226a1a3e2bf3') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '76a136fe-8493-4f70-5332-655a14c0ad9e') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '6bd61b2e-42fb-48f4-4363-8b85042ec50a') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 1160,
        "wires": [
            [
                "98de5bc63adc556b"
            ]
        ]
    },
    {
        "id": "37195687a13704c2",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "PICHAGUA 🐟  🔴",
        "info": "",
        "x": 150,
        "y": 1120,
        "wires": []
    },
    {
        "id": "2085928519c4db1e",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/puelo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1240,
        "wires": [
            [
                "e9c95d51f521267b"
            ]
        ]
    },
    {
        "id": "e9c95d51f521267b",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1240,
        "wires": [
            [
                "683e1a4bc622695f"
            ]
        ]
    },
    {
        "id": "3ad22be497846dbb",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "683e1a4bc622695f",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Puelo",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "155",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1240,
        "wires": [
            [
                "34d112a20ffd90a1"
            ]
        ]
    },
    {
        "id": "34d112a20ffd90a1",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'b809330e-4f45-4a6d-778f-5f273862e3d7') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'c1cfa334-881e-4e1c-4b8e-51290e70b24b') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '538b31b0-b0d3-41b8-6046-c665a5c74b56') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'c6a5fb17-16fb-4b2d-495d-ee2b312db9a7') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 1240,
        "wires": [
            [
                "3ad22be497846dbb"
            ]
        ]
    },
    {
        "id": "489fe28cb5104969",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "PUELO 🐟  🔴",
        "info": "",
        "x": 140,
        "y": 1200,
        "wires": []
    },
    {
        "id": "065a10836690aebc",
        "type": "http in",
        "z": "a2593de2bc0b6b95",
        "name": "NIO",
        "url": "/api/spotter/ralun",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1320,
        "wires": [
            [
                "aed615117a8ce366"
            ]
        ]
    },
    {
        "id": "aed615117a8ce366",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1320,
        "wires": [
            [
                "f8cd20c4c5de6a46"
            ]
        ]
    },
    {
        "id": "fa08a8423e917141",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "f8cd20c4c5de6a46",
        "type": "change",
        "z": "a2593de2bc0b6b95",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Ralun",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "156",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1320,
        "wires": [
            [
                "7b6a7cd66f7ff9ac"
            ]
        ]
    },
    {
        "id": "7b6a7cd66f7ff9ac",
        "type": "function",
        "z": "a2593de2bc0b6b95",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'ff74adf2-c691-4701-6887-91694c3e756b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '75daae33-1bc9-49db-6597-be7a2a44f3ab') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '1e9d846b-72f3-4187-5b40-c5f3b807b7a5') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '84674744-5a18-4aa6-54f7-de7b7a69a3b7') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 1320,
        "wires": [
            [
                "fa08a8423e917141"
            ]
        ]
    },
    {
        "id": "36990afd6398890e",
        "type": "comment",
        "z": "a2593de2bc0b6b95",
        "name": "RALUN 🐟  🟢",
        "info": "",
        "x": 140,
        "y": 1280,
        "wires": []
    },
    {
        "id": "a620dd2acf6bc7a9",
        "type": "switch",
        "z": "d9169b1be4365f62",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 320,
        "wires": [
            [
                "4b806a241d75ef7e"
            ],
            [
                "4b806a241d75ef7e"
            ]
        ]
    },
    {
        "id": "4b806a241d75ef7e",
        "type": "change",
        "z": "d9169b1be4365f62",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 320,
        "wires": [
            [
                "17db746922d157a1"
            ]
        ]
    },
    {
        "id": "17db746922d157a1",
        "type": "switch",
        "z": "d9169b1be4365f62",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 320,
        "wires": [
            [
                "3f8505c9ae252d91",
                "ca050111dd6c9155"
            ],
            [
                "3f8505c9ae252d91",
                "7217d7f61222499b",
                "8700a03599ceeb3c",
                "ca050111dd6c9155",
                "8e54329415e76fb8"
            ]
        ]
    },
    {
        "id": "3f8505c9ae252d91",
        "type": "mongodb-collection",
        "z": "d9169b1be4365f62",
        "name": "insert_seguridad_detalle",
        "config": "aea86e27262eaf28",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1090,
        "y": 40,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "7217d7f61222499b",
        "type": "mongodb-collection",
        "z": "d9169b1be4365f62",
        "name": "insert_seguridad",
        "config": "aea86e27262eaf28",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1170,
        "y": 220,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "8e54329415e76fb8",
        "type": "mongodb-collection",
        "z": "d9169b1be4365f62",
        "name": "insert_seguridad_movil",
        "config": "aea86e27262eaf28",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1150,
        "y": 280,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "ca050111dd6c9155",
        "type": "change",
        "z": "d9169b1be4365f62",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "8700a03599ceeb3c",
        "type": "change",
        "z": "d9169b1be4365f62",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "07ab3e4d1ccaf5c9",
        "type": "function",
        "z": "d9169b1be4365f62",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 320,
        "wires": [
            [
                "a620dd2acf6bc7a9"
            ]
        ]
    },
    {
        "id": "32f70377dbedb5bd",
        "type": "mongodb-collection",
        "z": "d9169b1be4365f62",
        "name": "findDB",
        "config": "aea86e27262eaf28",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 130,
        "y": 320,
        "wires": [
            [
                "07ab3e4d1ccaf5c9"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "a3b13574b3af507a",
        "type": "switch",
        "z": "b856591a365fb64c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 300,
        "wires": [
            [
                "8296221ed2da1075",
                "ec3256b58741f20e"
            ],
            [
                "8296221ed2da1075",
                "537b98603096716f",
                "0df2ae9f5e59b4f2",
                "ec3256b58741f20e",
                "83b8725ed08b2b24"
            ]
        ]
    },
    {
        "id": "537b98603096716f",
        "type": "mongodb-collection",
        "z": "b856591a365fb64c",
        "name": "insert_seguridad",
        "config": "569de601959fb505",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1030,
        "y": 140,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "e4800c250caa7f96",
        "type": "mongodb-collection",
        "z": "b856591a365fb64c",
        "name": "findDB",
        "config": "569de601959fb505",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "c4b3f46b38158b0f"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "c4b3f46b38158b0f",
        "type": "function",
        "z": "b856591a365fb64c",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 300,
        "wires": [
            [
                "0f15f949daf7de42"
            ]
        ]
    },
    {
        "id": "0f15f949daf7de42",
        "type": "switch",
        "z": "b856591a365fb64c",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 300,
        "wires": [
            [
                "59dcded378f07759"
            ],
            [
                "59dcded378f07759"
            ]
        ]
    },
    {
        "id": "ec3256b58741f20e",
        "type": "change",
        "z": "b856591a365fb64c",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "0df2ae9f5e59b4f2",
        "type": "change",
        "z": "b856591a365fb64c",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "59dcded378f07759",
        "type": "change",
        "z": "b856591a365fb64c",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 300,
        "wires": [
            [
                "a3b13574b3af507a"
            ]
        ]
    },
    {
        "id": "83b8725ed08b2b24",
        "type": "mongodb-collection",
        "z": "b856591a365fb64c",
        "name": "insert_seguridad_movil",
        "config": "569de601959fb505",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1010,
        "y": 180,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "8296221ed2da1075",
        "type": "mongodb-collection",
        "z": "b856591a365fb64c",
        "name": "insert_seguridad_detalle",
        "config": "569de601959fb505",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1010,
        "y": 100,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "fcf18c5201c38ea8",
        "type": "change",
        "z": "9c7e0c66e2ba9e8c",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 320,
        "wires": [
            [
                "1c5d53562d0e0ef2"
            ]
        ]
    },
    {
        "id": "1c5d53562d0e0ef2",
        "type": "switch",
        "z": "9c7e0c66e2ba9e8c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 320,
        "wires": [
            [
                "ef35fec29158d827",
                "9d331c3a724eec53",
                "eb6fe6e11ec7f5ed"
            ],
            [
                "ef35fec29158d827",
                "a94ca7d99dde3577",
                "9d331c3a724eec53",
                "1221861055fd5997",
                "dfaa87768f99507d",
                "6d9b5c888b23f6b6",
                "eb6fe6e11ec7f5ed"
            ]
        ]
    },
    {
        "id": "1221861055fd5997",
        "type": "mongodb-collection",
        "z": "9c7e0c66e2ba9e8c",
        "name": "insert_seguridad",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1010,
        "y": 100,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "132f1a57f4c0cfb7",
        "type": "mongodb-collection",
        "z": "9c7e0c66e2ba9e8c",
        "name": "findDB",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 130,
        "y": 360,
        "wires": [
            [
                "2223b63ee2439dd3"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "ef35fec29158d827",
        "type": "mongodb-collection",
        "z": "9c7e0c66e2ba9e8c",
        "name": "insert_seguridad_detalle",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 950,
        "y": 60,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "2223b63ee2439dd3",
        "type": "function",
        "z": "9c7e0c66e2ba9e8c",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 320,
        "wires": [
            [
                "00735757cfdff821"
            ]
        ]
    },
    {
        "id": "00735757cfdff821",
        "type": "switch",
        "z": "9c7e0c66e2ba9e8c",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 320,
        "wires": [
            [
                "fcf18c5201c38ea8"
            ],
            [
                "fcf18c5201c38ea8"
            ]
        ]
    },
    {
        "id": "9d331c3a724eec53",
        "type": "change",
        "z": "9c7e0c66e2ba9e8c",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "a94ca7d99dde3577",
        "type": "change",
        "z": "9c7e0c66e2ba9e8c",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "dfaa87768f99507d",
        "type": "mongodb-collection",
        "z": "9c7e0c66e2ba9e8c",
        "name": "insert_seguridad_movil",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1030,
        "y": 140,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "eb6fe6e11ec7f5ed",
        "type": "mongodb-collection",
        "z": "9c7e0c66e2ba9e8c",
        "name": "insert_seguridad_detallebk",
        "config": "97a6ac313177f8a4",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1140,
        "y": 220,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "6d9b5c888b23f6b6",
        "type": "mongodb-collection",
        "z": "9c7e0c66e2ba9e8c",
        "name": "insert_seguridadbk",
        "config": "97a6ac313177f8a4",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1170,
        "y": 260,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "bdd29d70679c7423",
        "type": "mongodb-collection",
        "z": "9c7e0c66e2ba9e8c",
        "name": "findDB2",
        "config": "97a6ac313177f8a4",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 140,
        "y": 260,
        "wires": [
            [
                "2223b63ee2439dd3"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "0a8a739cff39e62e",
        "type": "http in",
        "z": "d66f3889b2818ed0",
        "name": "NIO",
        "url": "/api/spotter/prueba3",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "16a54914f47bdf33",
                "66df86ba2bfec930"
            ]
        ]
    },
    {
        "id": "e926f062a0194660",
        "type": "http in",
        "z": "d66f3889b2818ed0",
        "name": "NIO",
        "url": "/api/spotter/betecoi",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "c181a2dd843de29a",
                "66df86ba2bfec930"
            ]
        ]
    },
    {
        "id": "e798ec132c15ad07",
        "type": "http in",
        "z": "d66f3889b2818ed0",
        "name": "NIO",
        "url": "/api/spotter/laurel",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "fee77b31e8969e18",
                "66df86ba2bfec930"
            ]
        ]
    },
    {
        "id": "3f5461a734ae78e4",
        "type": "http in",
        "z": "d66f3889b2818ed0",
        "name": "NIO",
        "url": "/api/spotter/leucayec",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "c1837b63b5830b73",
                "66df86ba2bfec930"
            ]
        ]
    },
    {
        "id": "16a54914f47bdf33",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "0f77845ebd24bbaf"
            ]
        ]
    },
    {
        "id": "c181a2dd843de29a",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 300,
        "wires": [
            [
                "ff394deb39372f18"
            ]
        ]
    },
    {
        "id": "fee77b31e8969e18",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 380,
        "wires": [
            [
                "68b368c295f6a3ca"
            ]
        ]
    },
    {
        "id": "c1837b63b5830b73",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 460,
        "wires": [
            [
                "a35b509488c513d8"
            ]
        ]
    },
    {
        "id": "0f77845ebd24bbaf",
        "type": "change",
        "z": "d66f3889b2818ed0",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Isla-Lola",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "103",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 220,
        "wires": [
            [
                "46821c3c8a73060b"
            ]
        ]
    },
    {
        "id": "ff394deb39372f18",
        "type": "change",
        "z": "d66f3889b2818ed0",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Betecoi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "104",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 300,
        "wires": [
            [
                "e1ab5ea309dd3bd0"
            ]
        ]
    },
    {
        "id": "68b368c295f6a3ca",
        "type": "change",
        "z": "d66f3889b2818ed0",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Laurel-Oeste",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "105",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 380,
        "wires": [
            [
                "befc6fe6d4afd88c"
            ]
        ]
    },
    {
        "id": "a35b509488c513d8",
        "type": "change",
        "z": "d66f3889b2818ed0",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Leucayec",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "106",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "f81646fe147f73ff"
            ]
        ]
    },
    {
        "id": "6c6192a96da51443",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "46821c3c8a73060b",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'bbca809d-850f-4bb0-4715-20cabb701093') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'ba8d7374-de08-45b9-67ba-1044a0d1af72') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'a80b5ad3-a43a-40df-5bf8-1e16fb05ac69') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n        \n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 220,
        "wires": [
            [
                "6c6192a96da51443"
            ]
        ]
    },
    {
        "id": "ece5b32a5a26623c",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "e1ab5ea309dd3bd0",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '73a6080d-47ba-4aa1-72e4-b3fe09deb827') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '2a3120cb-89f6-47e4-49b9-356d56db95dd') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'ff9c2731-34af-469b-5568-6a2dcf29d7fa') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 300,
        "wires": [
            [
                "ece5b32a5a26623c"
            ]
        ]
    },
    {
        "id": "286c866ab1056fdb",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "befc6fe6d4afd88c",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '788e5ae9-e599-450a-7333-a238f93e597a') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'b987898d-7724-4458-6660-35a68fdad31d') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === 'ebe0fc31-e41f-45b8-6052-8964d7f183c1') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '9e871b7b-9e48-4e34-4900-7d0fdbb94043') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n            \n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        \n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = ''; \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n            \n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n        \n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 380,
        "wires": [
            [
                "286c866ab1056fdb"
            ]
        ]
    },
    {
        "id": "f8a80dfa23709c9a",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "f81646fe147f73ff",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '1750cee8-b7bc-444b-703e-56ab480622e1') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '1c073df0-def2-48ce-67db-f94f59821dec') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 460,
        "wires": [
            [
                "f8a80dfa23709c9a"
            ]
        ]
    },
    {
        "id": "dae48aa5aa1324fb",
        "type": "comment",
        "z": "d66f3889b2818ed0",
        "name": "ISLA-LOLA 🐟 🟢",
        "info": "",
        "x": 190,
        "y": 180,
        "wires": []
    },
    {
        "id": "5711a149fe443565",
        "type": "comment",
        "z": "d66f3889b2818ed0",
        "name": "BETECOI 🐟 🟢",
        "info": "",
        "x": 180,
        "y": 260,
        "wires": []
    },
    {
        "id": "133cbb7eba0691e9",
        "type": "comment",
        "z": "d66f3889b2818ed0",
        "name": "LAUREL-OESTE 🐟 🟢",
        "info": "",
        "x": 210,
        "y": 340,
        "wires": []
    },
    {
        "id": "6f9aca3b49686817",
        "type": "comment",
        "z": "d66f3889b2818ed0",
        "name": "LEUCAYEC 🐟 🟢",
        "info": "",
        "x": 190,
        "y": 420,
        "wires": []
    },
    {
        "id": "66df86ba2bfec930",
        "type": "debug",
        "z": "d66f3889b2818ed0",
        "name": "debug 238",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 140,
        "wires": []
    },
    {
        "id": "7a430c7dacb97bba",
        "type": "http in",
        "z": "d66f3889b2818ed0",
        "name": "NIO",
        "url": "/api/spotter/bobe",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 540,
        "wires": [
            [
                "870edb07fa0c93d3"
            ]
        ]
    },
    {
        "id": "870edb07fa0c93d3",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 540,
        "wires": [
            [
                "e3a962f0deb77585"
            ]
        ]
    },
    {
        "id": "e3a962f0deb77585",
        "type": "change",
        "z": "d66f3889b2818ed0",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Bobe",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "160",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 540,
        "wires": [
            [
                "3a746112c0ac6bbb"
            ]
        ]
    },
    {
        "id": "9a0c738c4a9894cc",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "3a746112c0ac6bbb",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '7dc637e2-f26d-4bd6-5336-8cae482dffa9') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'c5a70ad0-2cd3-446a-4f1d-459d5d1e86ae') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 540,
        "wires": [
            [
                "9a0c738c4a9894cc"
            ]
        ]
    },
    {
        "id": "e36433be38923280",
        "type": "comment",
        "z": "d66f3889b2818ed0",
        "name": "BOBE 🐟 🟢",
        "info": "",
        "x": 170,
        "y": 500,
        "wires": []
    },
    {
        "id": "2e9a98e2f3374771",
        "type": "http in",
        "z": "d66f3889b2818ed0",
        "name": "NIO",
        "url": "/api/spotter/butan2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 620,
        "wires": [
            [
                "653375fa77664ac3"
            ]
        ]
    },
    {
        "id": "653375fa77664ac3",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 620,
        "wires": [
            [
                "02ff93027e5635a6"
            ]
        ]
    },
    {
        "id": "02ff93027e5635a6",
        "type": "change",
        "z": "d66f3889b2818ed0",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Butan 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "161",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 620,
        "wires": [
            [
                "8ea329d18ab604c0"
            ]
        ]
    },
    {
        "id": "b302954274eddd7f",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "8ea329d18ab604c0",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '7826a6f3-7f28-4130-4939-36d9eed1415b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '7e3fd59c-089a-4a34-6f62-a31b7c12854e') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 620,
        "wires": [
            [
                "b302954274eddd7f"
            ]
        ]
    },
    {
        "id": "5752e9059ead8010",
        "type": "comment",
        "z": "d66f3889b2818ed0",
        "name": "BUTAN 2 🐟 🟢",
        "info": "",
        "x": 180,
        "y": 580,
        "wires": []
    },
    {
        "id": "dc6970f162fa08a6",
        "type": "http in",
        "z": "d66f3889b2818ed0",
        "name": "NIO",
        "url": "/api/spotter/islasanchezmowi",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 700,
        "wires": [
            [
                "7a269741c33917bc"
            ]
        ]
    },
    {
        "id": "7a269741c33917bc",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 700,
        "wires": [
            [
                "08079e83105a5b39"
            ]
        ]
    },
    {
        "id": "08079e83105a5b39",
        "type": "change",
        "z": "d66f3889b2818ed0",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Isla Sanchez",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "162",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 700,
        "wires": [
            [
                "c0b093bc9c189d11"
            ]
        ]
    },
    {
        "id": "394d9b4fac4ba426",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "c0b093bc9c189d11",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '0129ccaa-ff18-44ba-58f8-9b68ea63ec14') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '0819e6d8-6e90-4477-6d1a-86776af5b408') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 700,
        "wires": [
            [
                "394d9b4fac4ba426"
            ]
        ]
    },
    {
        "id": "7cad2b8d86a1c1f4",
        "type": "comment",
        "z": "d66f3889b2818ed0",
        "name": "ISLA SANCHEZ 🐟 🟢",
        "info": "",
        "x": 200,
        "y": 660,
        "wires": []
    },
    {
        "id": "1aa1059a7d999edf",
        "type": "http in",
        "z": "d66f3889b2818ed0",
        "name": "NIO",
        "url": "/api/spotter/rodadonotable",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 860,
        "wires": [
            [
                "96f9dca4f7539618"
            ]
        ]
    },
    {
        "id": "96f9dca4f7539618",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 860,
        "wires": [
            [
                "29cb57be9869d415"
            ]
        ]
    },
    {
        "id": "29cb57be9869d415",
        "type": "change",
        "z": "d66f3889b2818ed0",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Rodado Notable",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "164",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 860,
        "wires": [
            [
                "b86d09f1e928e782"
            ]
        ]
    },
    {
        "id": "0ce913160e45f8d0",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "b86d09f1e928e782",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'e09682a3-421b-4299-689d-3dfd1d9faffa') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '65ba435d-3cc6-4264-7c7d-485695ddc9dd') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 860,
        "wires": [
            [
                "0ce913160e45f8d0"
            ]
        ]
    },
    {
        "id": "81ce22e8b74847c4",
        "type": "comment",
        "z": "d66f3889b2818ed0",
        "name": "RODADO NOTABLE 🐟 🟢",
        "info": "",
        "x": 220,
        "y": 820,
        "wires": []
    },
    {
        "id": "2ca7dd40cc5b6ad3",
        "type": "http in",
        "z": "d66f3889b2818ed0",
        "name": "NIO",
        "url": "/api/spotter/larenas",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 780,
        "wires": [
            [
                "14c9f6139fe8410d"
            ]
        ]
    },
    {
        "id": "14c9f6139fe8410d",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 780,
        "wires": [
            [
                "1ca1f1f5afa47527"
            ]
        ]
    },
    {
        "id": "1ca1f1f5afa47527",
        "type": "change",
        "z": "d66f3889b2818ed0",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Larenas",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "163",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 780,
        "wires": [
            [
                "87fba30d6df7db82"
            ]
        ]
    },
    {
        "id": "4a81a5ae85138a93",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "87fba30d6df7db82",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '423472df-eff6-4123-6775-ce2e40b594e4') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '6c67f145-b4bb-4be5-5084-907b88e6519a') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 780,
        "wires": [
            [
                "4a81a5ae85138a93"
            ]
        ]
    },
    {
        "id": "95169e6d4763ed74",
        "type": "comment",
        "z": "d66f3889b2818ed0",
        "name": "LARENAS 🐟 🟢",
        "info": "",
        "x": 190,
        "y": 740,
        "wires": []
    },
    {
        "id": "af3a7c8039fb27dd",
        "type": "http in",
        "z": "d66f3889b2818ed0",
        "name": "NIO",
        "url": "/api/spotter/level",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 940,
        "wires": [
            [
                "9dad50611e36ca22"
            ]
        ]
    },
    {
        "id": "9dad50611e36ca22",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 940,
        "wires": [
            [
                "d5a32c3afd7a4ff8"
            ]
        ]
    },
    {
        "id": "d5a32c3afd7a4ff8",
        "type": "change",
        "z": "d66f3889b2818ed0",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Level",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "165",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 940,
        "wires": [
            [
                "fd40765254aefda7"
            ]
        ]
    },
    {
        "id": "3c80bb37cac90da0",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "fd40765254aefda7",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '72bf6f2b-0da3-4ee3-67e9-343d3c5c1726') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '30ef9b59-ad67-49e7-6352-a6cb548c04cb') {\n            nombreModuloZona = '200';\n        }else if (currentItem.zones[0] === '3901427b-8667-468b-4946-dc76a7030b71') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 940,
        "wires": [
            [
                "3c80bb37cac90da0"
            ]
        ]
    },
    {
        "id": "6e3c4630bb03a3a2",
        "type": "comment",
        "z": "d66f3889b2818ed0",
        "name": "LEVEL 🐟 🟢",
        "info": "",
        "x": 170,
        "y": 900,
        "wires": []
    },
    {
        "id": "0e52fa962620126e",
        "type": "http in",
        "z": "d66f3889b2818ed0",
        "name": "NIO",
        "url": "/api/spotter/lyng2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "e9a7b46544c1b9e1"
            ]
        ]
    },
    {
        "id": "e9a7b46544c1b9e1",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1020,
        "wires": [
            [
                "c13abf1a4b03abde"
            ]
        ]
    },
    {
        "id": "c13abf1a4b03abde",
        "type": "change",
        "z": "d66f3889b2818ed0",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Lyng 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "167",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1020,
        "wires": [
            [
                "af9ab387e0827d36"
            ]
        ]
    },
    {
        "id": "774dc2920045e43a",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "af9ab387e0827d36",
        "type": "function",
        "z": "d66f3889b2818ed0",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '9eed0936-2bcc-477c-76fb-bf74f9b56944') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'f4827da0-1ad6-42b1-5a33-d855c442a963') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 770,
        "y": 1020,
        "wires": [
            [
                "774dc2920045e43a"
            ]
        ]
    },
    {
        "id": "83b0a8be0ebc1cca",
        "type": "comment",
        "z": "d66f3889b2818ed0",
        "name": "LYNG2 🐟 🟢",
        "info": "",
        "x": 180,
        "y": 980,
        "wires": []
    },
    {
        "id": "dfa30c6bcb139235",
        "type": "mqtt out",
        "z": "aba8d67a3351a1b7",
        "name": "checkBroker",
        "topic": "mqtt_mowi_seguridad",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 310,
        "y": 660,
        "wires": []
    },
    {
        "id": "6ff3b90a527db6e3",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "conectar",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 640,
        "wires": [
            [
                "dfa30c6bcb139235"
            ]
        ]
    },
    {
        "id": "9c9055cecdb152c8",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "desconectar",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 680,
        "wires": [
            [
                "dfa30c6bcb139235"
            ]
        ]
    },
    {
        "id": "ae391b1180c9041c",
        "type": "status",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "scope": [
            "dfa30c6bcb139235"
        ],
        "x": 460,
        "y": 660,
        "wires": [
            [
                "3cf250d1e4b2cab7"
            ]
        ]
    },
    {
        "id": "3cf250d1e4b2cab7",
        "type": "change",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mqtt_status",
                "pt": "flow",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "aa3671b9379d4ded",
        "type": "comment",
        "z": "aba8d67a3351a1b7",
        "name": "CONEXION MQTT",
        "info": "",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "3d328bf1478d166f",
        "type": "mqtt out",
        "z": "aba8d67a3351a1b7",
        "name": "envioMQTT",
        "topic": "mqtt_mowi_seguridad",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 650,
        "y": 820,
        "wires": []
    },
    {
        "id": "cbcca297d7d92edd",
        "type": "debug",
        "z": "aba8d67a3351a1b7",
        "name": "MOWI",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 740,
        "wires": []
    },
    {
        "id": "5202a824ef635761",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "Mowi",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "conectado desde Mowi",
        "payloadType": "str",
        "x": 430,
        "y": 840,
        "wires": [
            [
                "3d328bf1478d166f"
            ]
        ]
    },
    {
        "id": "56da658bc65ca104",
        "type": "mqtt in",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "topic": "mqtt_mowi_seguridad",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9f945835b1447245",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 720,
        "wires": [
            [
                "2963e791c3cbe33a"
            ]
        ]
    },
    {
        "id": "2963e791c3cbe33a",
        "type": "debug",
        "z": "aba8d67a3351a1b7",
        "name": "MOWI",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 720,
        "wires": []
    },
    {
        "id": "917287fb913ec2f6",
        "type": "subflow:d66f3889b2818ed0",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "cf708a2476165d45"
            ]
        ]
    },
    {
        "id": "cf708a2476165d45",
        "type": "subflow:9c7e0c66e2ba9e8c",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "x": 380,
        "y": 780,
        "wires": [
            [
                "cbcca297d7d92edd"
            ],
            [
                "3d328bf1478d166f"
            ]
        ]
    },
    {
        "id": "755e11515a94abf2",
        "type": "mqtt out",
        "z": "aba8d67a3351a1b7",
        "name": "checkBroker",
        "topic": "mqtt_ast_seguridad",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 310,
        "y": 100,
        "wires": []
    },
    {
        "id": "0ace87b867aa23d0",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "conectar",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "755e11515a94abf2"
            ]
        ]
    },
    {
        "id": "39319334bf0eea49",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "desconectar",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "755e11515a94abf2"
            ]
        ]
    },
    {
        "id": "fd6a132516be7457",
        "type": "status",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "scope": [
            "755e11515a94abf2"
        ],
        "x": 460,
        "y": 100,
        "wires": [
            [
                "e88196ed4ad88f29"
            ]
        ]
    },
    {
        "id": "e88196ed4ad88f29",
        "type": "change",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mqtt_status",
                "pt": "flow",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f30402298c71c435",
        "type": "subflow:9bbcb6f5ba9c78ab",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "fcebf0ac808814ce"
            ]
        ]
    },
    {
        "id": "fcebf0ac808814ce",
        "type": "subflow:b856591a365fb64c",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "x": 350,
        "y": 220,
        "wires": [
            [
                "69a48c7376387056"
            ],
            [
                "dbdc43ef95fed2f5"
            ]
        ]
    },
    {
        "id": "a6875de648baf89e",
        "type": "mqtt in",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "topic": "mqtt_ast_seguridad",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9f945835b1447245",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 160,
        "wires": [
            [
                "1b4531f574ce784d"
            ]
        ]
    },
    {
        "id": "1b4531f574ce784d",
        "type": "debug",
        "z": "aba8d67a3351a1b7",
        "name": "AST",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 160,
        "wires": []
    },
    {
        "id": "69a48c7376387056",
        "type": "debug",
        "z": "aba8d67a3351a1b7",
        "name": "AST",
        "active": false,
        "tosidebar": false,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 180,
        "wires": []
    },
    {
        "id": "dbdc43ef95fed2f5",
        "type": "mqtt out",
        "z": "aba8d67a3351a1b7",
        "name": "envioMQTT",
        "topic": "mqtt_ast_seguridad",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 650,
        "y": 260,
        "wires": []
    },
    {
        "id": "bcca8df58a470f5a",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "AST",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "conectado 12-09-2023 10:31",
        "payloadType": "str",
        "x": 390,
        "y": 300,
        "wires": [
            [
                "dbdc43ef95fed2f5"
            ]
        ]
    },
    {
        "id": "184de92aa8668fbe",
        "type": "mqtt out",
        "z": "aba8d67a3351a1b7",
        "name": "checkBroker",
        "topic": "mqtt_gmt_seguridad",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1551226ba6a8882c",
        "x": 310,
        "y": 400,
        "wires": []
    },
    {
        "id": "515f107fb64fdd9c",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "conectar",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "184de92aa8668fbe"
            ]
        ]
    },
    {
        "id": "b82c40d6fe1ed6f0",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "desconectar",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 420,
        "wires": [
            [
                "184de92aa8668fbe"
            ]
        ]
    },
    {
        "id": "a48cc8a771c16d9d",
        "type": "status",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "scope": [
            "184de92aa8668fbe"
        ],
        "x": 460,
        "y": 400,
        "wires": [
            [
                "44da12be6171b0e1"
            ]
        ]
    },
    {
        "id": "44da12be6171b0e1",
        "type": "change",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mqtt_status",
                "pt": "flow",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "940de37166f54097",
        "type": "subflow:e4c6aa3eb68f5823",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "3f542a10d6eb4157"
            ]
        ]
    },
    {
        "id": "3f542a10d6eb4157",
        "type": "subflow:d9169b1be4365f62",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "x": 350,
        "y": 500,
        "wires": [
            [
                "fd142ef212aecd3f"
            ],
            [
                "82af028654ced8de"
            ]
        ]
    },
    {
        "id": "fd142ef212aecd3f",
        "type": "debug",
        "z": "aba8d67a3351a1b7",
        "name": "GMT",
        "active": false,
        "tosidebar": false,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 460,
        "wires": []
    },
    {
        "id": "82af028654ced8de",
        "type": "mqtt out",
        "z": "aba8d67a3351a1b7",
        "name": "envioMQTT",
        "topic": "mqtt_gmt_seguridad",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1551226ba6a8882c",
        "x": 650,
        "y": 540,
        "wires": []
    },
    {
        "id": "fed5d8fbcc8f3c98",
        "type": "debug",
        "z": "aba8d67a3351a1b7",
        "name": "GMT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 460,
        "wires": []
    },
    {
        "id": "e229d179be6298d7",
        "type": "mqtt in",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "topic": "mqtt_gmt_seguridad",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1551226ba6a8882c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 460,
        "wires": [
            [
                "fed5d8fbcc8f3c98"
            ]
        ]
    },
    {
        "id": "e43550f6d2ea1e09",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "GMT",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "conectado 16-08-2023 09:22",
        "payloadType": "str",
        "x": 390,
        "y": 580,
        "wires": [
            [
                "82af028654ced8de"
            ]
        ]
    },
    {
        "id": "4ea9063eb0e31b84",
        "type": "subflow:a2593de2bc0b6b95",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "x": 170,
        "y": 1300,
        "wires": [
            [
                "565fb9f3c342efe1"
            ]
        ]
    },
    {
        "id": "565fb9f3c342efe1",
        "type": "subflow:f97af136a24da3eb",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "x": 470,
        "y": 1300,
        "wires": [
            [
                "96874e532911bd2b"
            ],
            [
                "9d726442c954bd44"
            ]
        ]
    },
    {
        "id": "91f9991e89de8834",
        "type": "debug",
        "z": "aba8d67a3351a1b7",
        "name": "SALMONES-AUSTRAL",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 1260,
        "wires": []
    },
    {
        "id": "ec987abb2865a922",
        "type": "mqtt in",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "topic": "mqtt_salmonesaustral_seguridad",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9f945835b1447245",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1260,
        "wires": [
            [
                "91f9991e89de8834"
            ]
        ]
    },
    {
        "id": "9d726442c954bd44",
        "type": "mqtt out",
        "z": "aba8d67a3351a1b7",
        "name": "envioMQTT",
        "topic": "mqtt_salmonesaustral_seguridad",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 810,
        "y": 1340,
        "wires": []
    },
    {
        "id": "96874e532911bd2b",
        "type": "debug",
        "z": "aba8d67a3351a1b7",
        "name": "SALMONES-AUSTRAL",
        "active": false,
        "tosidebar": false,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 1260,
        "wires": []
    },
    {
        "id": "0577a106ec72c1c4",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "SALMONES-AUSTRAL",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "conectado desde Traiguen",
        "payloadType": "str",
        "x": 540,
        "y": 1380,
        "wires": [
            [
                "9d726442c954bd44"
            ]
        ]
    },
    {
        "id": "f3753d293b106ef2",
        "type": "mqtt out",
        "z": "aba8d67a3351a1b7",
        "name": "checkBroker",
        "topic": "mqtt_salmonesaustral_seguridad",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 290,
        "y": 1200,
        "wires": []
    },
    {
        "id": "5372718ce37747f0",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "conectar",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 1180,
        "wires": [
            [
                "f3753d293b106ef2"
            ]
        ]
    },
    {
        "id": "ad3b5c98799c4837",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "desconectar",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 1220,
        "wires": [
            [
                "f3753d293b106ef2"
            ]
        ]
    },
    {
        "id": "0fd3c335c2ce5e0a",
        "type": "status",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "scope": [
            "f3753d293b106ef2"
        ],
        "x": 460,
        "y": 1200,
        "wires": [
            [
                "638b350375419994"
            ]
        ]
    },
    {
        "id": "638b350375419994",
        "type": "change",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mqtt_status",
                "pt": "flow",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "e472a109ceebd826",
        "type": "subflow:0640bd3b67d5f3d7",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "x": 160,
        "y": 1060,
        "wires": [
            [
                "e1221c2c68f56f9d"
            ]
        ]
    },
    {
        "id": "e1221c2c68f56f9d",
        "type": "subflow:1bb16629c0f9499d",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "x": 440,
        "y": 1060,
        "wires": [
            [
                "c0cb359db9c75830"
            ],
            [
                "d37c2528c758232a"
            ]
        ]
    },
    {
        "id": "5d2c929f23c17be0",
        "type": "mqtt in",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "topic": "mqtt_aquachile_seguridad",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9f945835b1447245",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "4e0d4399125ef8c7"
            ]
        ]
    },
    {
        "id": "4e0d4399125ef8c7",
        "type": "debug",
        "z": "aba8d67a3351a1b7",
        "name": "AQUACHILE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 1020,
        "wires": []
    },
    {
        "id": "c0cb359db9c75830",
        "type": "debug",
        "z": "aba8d67a3351a1b7",
        "name": "AQUACHILE",
        "active": false,
        "tosidebar": false,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d37c2528c758232a",
        "type": "mqtt out",
        "z": "aba8d67a3351a1b7",
        "name": "envioMQTT",
        "topic": "mqtt_aquachile_seguridad",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 810,
        "y": 1100,
        "wires": []
    },
    {
        "id": "9835a59162183868",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "AQUACHILE",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "conectado desde aquachile",
        "payloadType": "str",
        "x": 550,
        "y": 1120,
        "wires": [
            [
                "d37c2528c758232a"
            ]
        ]
    },
    {
        "id": "66b4bda7be1452b6",
        "type": "mqtt out",
        "z": "aba8d67a3351a1b7",
        "name": "checkBroker",
        "topic": "mqtt_aquachile_seguridad",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 310,
        "y": 960,
        "wires": []
    },
    {
        "id": "3620fc12cc43120f",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "conectar",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 940,
        "wires": [
            [
                "66b4bda7be1452b6"
            ]
        ]
    },
    {
        "id": "c995323e149e5ee6",
        "type": "inject",
        "z": "aba8d67a3351a1b7",
        "name": "desconectar",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 980,
        "wires": [
            [
                "66b4bda7be1452b6"
            ]
        ]
    },
    {
        "id": "b18538b50269140d",
        "type": "status",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "scope": [
            "66b4bda7be1452b6"
        ],
        "x": 460,
        "y": 960,
        "wires": [
            [
                "eabe92c6eaf7c67f"
            ]
        ]
    },
    {
        "id": "eabe92c6eaf7c67f",
        "type": "change",
        "z": "aba8d67a3351a1b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mqtt_status",
                "pt": "flow",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "ac3f02cfc8ae6b66",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Piren\":{\"codigo_centro\":\"101\",\"Modulo100\":{\"id\":\"a8d0c471-9893-4d6c-7bb3-d9b3fccb3c32\",\"name\":\"100\",\"vertices\":[{\"latitude\":-41.69829453205404,\"longitude\":-72.71016677805176},{\"latitude\":-41.69732881211663,\"longitude\":-72.71017477639973},{\"latitude\":-41.69737824804549,\"longitude\":-72.71274690972277},{\"latitude\":-41.69832259036954,\"longitude\":-72.71274411750576},{\"latitude\":-41.69829453205404,\"longitude\":-72.71016677805176}]},\"INTERIOR\":{\"id\":\"80a372cf-ded7-439b-6392-d8a758ff3a09\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-41.69838751985127,\"longitude\":-72.71001603427678},{\"latitude\":-41.69843169021967,\"longitude\":-72.71289984848224},{\"latitude\":-41.69725007153168,\"longitude\":-72.71290979506308},{\"latitude\":-41.6972507379182,\"longitude\":-72.71006782486445},{\"latitude\":-41.69773175462238,\"longitude\":-72.71003105152104},{\"latitude\":-41.698195004764486,\"longitude\":-72.70906604864406},{\"latitude\":-41.69702917350057,\"longitude\":-72.70947058215613},{\"latitude\":-41.69650594073257,\"longitude\":-72.71025593171424},{\"latitude\":-41.696513577322975,\"longitude\":-72.71302496268227},{\"latitude\":-41.69743676534817,\"longitude\":-72.71403656361554},{\"latitude\":-41.69836767208751,\"longitude\":-72.71404408891613},{\"latitude\":-41.69916580083953,\"longitude\":-72.71299457065813},{\"latitude\":-41.69915806851314,\"longitude\":-72.71021450871923},{\"latitude\":-41.698369380435864,\"longitude\":-72.70907604698414},{\"latitude\":-41.698246155605,\"longitude\":-72.7100105657884},{\"latitude\":-41.69838751985127,\"longitude\":-72.71001603427678}]},\"EXTERIOR\":{\"id\":\"fe5b4b7b-7632-48cb-6da4-8b8e7bf66a9e\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-41.698369380435864,\"longitude\":-72.70907604698414},{\"latitude\":-41.69881344088485,\"longitude\":-72.70933611636573},{\"latitude\":-41.69978752561401,\"longitude\":-72.7104135615659},{\"latitude\":-41.699932378966814,\"longitude\":-72.71257417687518},{\"latitude\":-41.699636587294094,\"longitude\":-72.71388707423118},{\"latitude\":-41.69861385786512,\"longitude\":-72.71503275606506},{\"latitude\":-41.69734302426062,\"longitude\":-72.71503741705276},{\"latitude\":-41.696271202283114,\"longitude\":-72.71420853169671},{\"latitude\":-41.695867117010906,\"longitude\":-72.71307175324682},{\"latitude\":-41.69581614431231,\"longitude\":-72.71089587381057},{\"latitude\":-41.696177887468444,\"longitude\":-72.7098608601822},{\"latitude\":-41.696868925333085,\"longitude\":-72.70922815993687},{\"latitude\":-41.69761108187867,\"longitude\":-72.70906246582014},{\"latitude\":-41.698195004764486,\"longitude\":-72.70906604864406},{\"latitude\":-41.69702917350057,\"longitude\":-72.70947058215613},{\"latitude\":-41.69650594073257,\"longitude\":-72.71025593171424},{\"latitude\":-41.696513577322975,\"longitude\":-72.71302496268227},{\"latitude\":-41.69743676534817,\"longitude\":-72.71403656361554},{\"latitude\":-41.69836767208751,\"longitude\":-72.71404408891613},{\"latitude\":-41.69916580083953,\"longitude\":-72.71299457065813},{\"latitude\":-41.69915806851314,\"longitude\":-72.71021450871923},{\"latitude\":-41.698369380435864,\"longitude\":-72.70907604698414}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "e041e415eedb7347"
            ]
        ]
    },
    {
        "id": "e041e415eedb7347",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 120,
        "wires": [
            [
                "284b2707be126ce9"
            ]
        ]
    },
    {
        "id": "1aa104278d4433dc",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 120,
        "wires": []
    },
    {
        "id": "0f1c39e2d33889a0",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT PIREN",
        "info": "",
        "x": 140,
        "y": 80,
        "wires": []
    },
    {
        "id": "fcaa6510992228e4",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "a8d89e3e914c9b81",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 120,
        "wires": [
            [
                "1aa104278d4433dc"
            ]
        ]
    },
    {
        "id": "284b2707be126ce9",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "101",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Piren;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Piren\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 120,
        "wires": [
            [
                "fcaa6510992228e4"
            ]
        ]
    },
    {
        "id": "d69aeaa666418768",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Estacionamiento\":{\"codigo_centro\":\"102\",\"INTERIOR\":{\"id\":\"294ecf99-e935-4e87-7fab-3dd224f00be4\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-41.462305766193076,\"longitude\":-72.9875711202294},{\"latitude\":-41.46240385529518,\"longitude\":-72.98731362816397},{\"latitude\":-41.462426367557356,\"longitude\":-72.98730719087871},{\"latitude\":-41.46244003567328,\"longitude\":-72.98727822305408},{\"latitude\":-41.46255581279049,\"longitude\":-72.98731684684753},{\"latitude\":-41.46243360361367,\"longitude\":-72.98764944076538},{\"latitude\":-41.462305766193076,\"longitude\":-72.9875711202294}]},\"EXTERIOR\":{\"id\":\"1bae8db5-b444-4e1c-5092-e48968806e8b\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-41.461886809779884,\"longitude\":-72.98823305781448},{\"latitude\":-41.46212752142793,\"longitude\":-72.98844248045496},{\"latitude\":-41.462241423076264,\"longitude\":-72.98853486769076},{\"latitude\":-41.46237765805583,\"longitude\":-72.9885616897809},{\"latitude\":-41.46254292636553,\"longitude\":-72.9885467886561},{\"latitude\":-41.46266896074228,\"longitude\":-72.98851607067466},{\"latitude\":-41.46301983427756,\"longitude\":-72.98828546499526},{\"latitude\":-41.463332784066225,\"longitude\":-72.9876966597214},{\"latitude\":-41.46257189289268,\"longitude\":-72.98731309168943},{\"latitude\":-41.462437623654836,\"longitude\":-72.98767036196294},{\"latitude\":-41.46229692206581,\"longitude\":-72.9875893592998},{\"latitude\":-41.461886809779884,\"longitude\":-72.98823305781448}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "c1005d77082a3945"
            ]
        ]
    },
    {
        "id": "c1005d77082a3945",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 280,
        "wires": [
            [
                "68c8df12c09ecc17"
            ]
        ]
    },
    {
        "id": "467c9d0f11c99cf8",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 280,
        "wires": []
    },
    {
        "id": "aa48f67b94a9ccf8",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT ESTACIONAMIENTO",
        "info": "",
        "x": 180,
        "y": 240,
        "wires": []
    },
    {
        "id": "9f2741c63c01725f",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "1e79621dc82ae388",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 280,
        "wires": [
            [
                "467c9d0f11c99cf8"
            ]
        ]
    },
    {
        "id": "68c8df12c09ecc17",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "102",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Estacionamiento;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Estacionamiento\";\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 280,
        "wires": [
            [
                "9f2741c63c01725f"
            ]
        ]
    },
    {
        "id": "407b2d9c0aeb6709",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Pocoihuen\":{\"codigo_centro\":\"107\",\"Modulo100\":{\"id\":\"e66fa9b0-b417-4b76-4998-f7970374a37b\",\"name\":\"100\",\"vertices\":[{\"latitude\":-41.48900500497875,\"longitude\":-72.32796502304029},{\"latitude\":-41.48901501159749,\"longitude\":-72.32715997262815},{\"latitude\":-41.49135600279887,\"longitude\":-72.32722793578002},{\"latitude\":-41.49137699943174,\"longitude\":-72.32799799880011},{\"latitude\":-41.48900500497875,\"longitude\":-72.32796502304029}]},\"INTERIOR\":{\"id\":\"00e657d7-826f-4958-5475-07a19f29f895\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-41.48889805967993,\"longitude\":-72.32813449198173},{\"latitude\":-41.49128346801151,\"longitude\":-72.32812153492017},{\"latitude\":-41.4915004674405,\"longitude\":-72.32795880666126},{\"latitude\":-41.49147943041369,\"longitude\":-72.32726967011615},{\"latitude\":-41.49136901443671,\"longitude\":-72.32709265982984},{\"latitude\":-41.48890919643165,\"longitude\":-72.32705724551252},{\"latitude\":-41.48890282684336,\"longitude\":-72.32743430251053},{\"latitude\":-41.48842261946318,\"longitude\":-72.32753958634589},{\"latitude\":-41.488681299844146,\"longitude\":-72.32653658012234},{\"latitude\":-41.48918240440499,\"longitude\":-72.32589775766215},{\"latitude\":-41.49150865566124,\"longitude\":-72.32589793371835},{\"latitude\":-41.49230894999668,\"longitude\":-72.32644631510132},{\"latitude\":-41.49249800680927,\"longitude\":-72.32748930844058},{\"latitude\":-41.49230466440881,\"longitude\":-72.32866526200375},{\"latitude\":-41.491368233144165,\"longitude\":-72.32907165545723},{\"latitude\":-41.48904382647858,\"longitude\":-72.32903701328063},{\"latitude\":-41.48862425220357,\"longitude\":-72.32844816444481},{\"latitude\":-41.48842983567826,\"longitude\":-72.32767192500218},{\"latitude\":-41.48889869372109,\"longitude\":-72.3277851470719},{\"latitude\":-41.48889805967993,\"longitude\":-72.32813449198173}]},\"EXTERIOR\":{\"id\":\"a17424f8-0ef5-4a43-4015-391c06bccbde\",\"name\":\"Zone Exterior\",\"vertices\":[{\"latitude\":-41.48862425220357,\"longitude\":-72.32844816444481},{\"latitude\":-41.48904382647858,\"longitude\":-72.32903701328063},{\"latitude\":-41.491368233144165,\"longitude\":-72.32907165545723},{\"latitude\":-41.49230466440881,\"longitude\":-72.32866526200375},{\"latitude\":-41.49249800680927,\"longitude\":-72.32748930844058},{\"latitude\":-41.49230894999668,\"longitude\":-72.32644631510132},{\"latitude\":-41.49150865566124,\"longitude\":-72.32589793371835},{\"latitude\":-41.48918240440499,\"longitude\":-72.32589775766215},{\"latitude\":-41.488681299844146,\"longitude\":-72.32653658012234},{\"latitude\":-41.48842261946318,\"longitude\":-72.32753958634589},{\"latitude\":-41.488641139924084,\"longitude\":-72.32610511981075},{\"latitude\":-41.4898570719579,\"longitude\":-72.32453784707985},{\"latitude\":-41.491325850715754,\"longitude\":-72.32396242240213},{\"latitude\":-41.49304929559991,\"longitude\":-72.32469246114903},{\"latitude\":-41.493786788687636,\"longitude\":-72.32625651968797},{\"latitude\":-41.49387137192082,\"longitude\":-72.32778675681602},{\"latitude\":-41.4935084160004,\"longitude\":-72.32866705482104},{\"latitude\":-41.493220233918855,\"longitude\":-72.32914067054885},{\"latitude\":-41.492610059799865,\"longitude\":-72.32919634415543},{\"latitude\":-41.49232926815595,\"longitude\":-72.32909482652222},{\"latitude\":-41.492066161376435,\"longitude\":-72.32915565126129},{\"latitude\":-41.491876734250866,\"longitude\":-72.32923814924821},{\"latitude\":-41.49155803303178,\"longitude\":-72.32916770684726},{\"latitude\":-41.49126613424068,\"longitude\":-72.32917820669195},{\"latitude\":-41.49099307058027,\"longitude\":-72.32919137676335},{\"latitude\":-41.49079064359788,\"longitude\":-72.32923126005089},{\"latitude\":-41.49044948550646,\"longitude\":-72.32941083916462},{\"latitude\":-41.49008973678185,\"longitude\":-72.3296140541114},{\"latitude\":-41.48968694312671,\"longitude\":-72.32969977793472},{\"latitude\":-41.489243283234465,\"longitude\":-72.32984005334035},{\"latitude\":-41.48889331523275,\"longitude\":-72.32998500506373},{\"latitude\":-41.48862174295145,\"longitude\":-72.3297350511219},{\"latitude\":-41.48850627059433,\"longitude\":-72.32948907594587},{\"latitude\":-41.48840259650501,\"longitude\":-72.32838975105541},{\"latitude\":-41.48842983567826,\"longitude\":-72.32767192500218},{\"latitude\":-41.48862425220357,\"longitude\":-72.32844816444481}]},\"ACTIVETRACKING\":{\"id\":\"b70ee8bc-90f6-4fb2-4d01-7b313ccd72e3\",\"name\":\"Zona Active Tracking\",\"vertices\":[{\"latitude\":-41.48895296938902,\"longitude\":-72.32757270332513},{\"latitude\":-41.48890689380344,\"longitude\":-72.32804410890213},{\"latitude\":-41.49059938717081,\"longitude\":-72.32806121882358},{\"latitude\":-41.49135373071653,\"longitude\":-72.32806884485201},{\"latitude\":-41.491438485787434,\"longitude\":-72.32800528686906},{\"latitude\":-41.49148953627098,\"longitude\":-72.32760072046156},{\"latitude\":-41.49144334061971,\"longitude\":-72.32721181373881},{\"latitude\":-41.49133842746285,\"longitude\":-72.32712300443332},{\"latitude\":-41.488939446514216,\"longitude\":-72.32709477007988},{\"latitude\":-41.48895296938902,\"longitude\":-72.32757270332513},{\"latitude\":-41.488167558850805,\"longitude\":-72.32702159745632},{\"latitude\":-41.48832105074298,\"longitude\":-72.32572954481864},{\"latitude\":-41.48887983484002,\"longitude\":-72.32442464541651},{\"latitude\":-41.490035626451686,\"longitude\":-72.32355960243007},{\"latitude\":-41.491260829890685,\"longitude\":-72.32342024224056},{\"latitude\":-41.49319858175363,\"longitude\":-72.32366375602572},{\"latitude\":-41.494448722384355,\"longitude\":-72.32480834140561},{\"latitude\":-41.49511347573943,\"longitude\":-72.32692074489437},{\"latitude\":-41.49486076089676,\"longitude\":-72.32830700981607},{\"latitude\":-41.493410373572324,\"longitude\":-72.32879843715297},{\"latitude\":-41.49318512126914,\"longitude\":-72.32920184800521},{\"latitude\":-41.49232256216268,\"longitude\":-72.32923118683343},{\"latitude\":-41.492053353619895,\"longitude\":-72.32934120789255},{\"latitude\":-41.49096398040706,\"longitude\":-72.32953867901107},{\"latitude\":-41.49043474122845,\"longitude\":-72.32962946078696},{\"latitude\":-41.48875914793289,\"longitude\":-72.3300148604112},{\"latitude\":-41.48830752488332,\"longitude\":-72.32988748783055},{\"latitude\":-41.488237554865705,\"longitude\":-72.32948838714779},{\"latitude\":-41.48821847212647,\"longitude\":-72.32818918710495},{\"latitude\":-41.488504712821346,\"longitude\":-72.32778159442705},{\"latitude\":-41.48895296938902,\"longitude\":-72.32757270332513}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 1340,
        "wires": [
            [
                "728480f815fdae36"
            ]
        ]
    },
    {
        "id": "728480f815fdae36",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 1340,
        "wires": [
            [
                "6f56421234091a48"
            ]
        ]
    },
    {
        "id": "396a3456f0b9ea37",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1340,
        "wires": []
    },
    {
        "id": "0f00a8d2149be1a4",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT POCOIHUEN",
        "info": "",
        "x": 160,
        "y": 1300,
        "wires": []
    },
    {
        "id": "4ba1a318459f5acc",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 1340,
        "wires": [
            [
                "396a3456f0b9ea37"
            ]
        ]
    },
    {
        "id": "6f56421234091a48",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "107",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Pocoihuen;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Pocoihuen\";\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1340,
        "wires": [
            [
                "4ba1a318459f5acc"
            ]
        ]
    },
    {
        "id": "3cfc9dc78f408067",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Contao\":{\"codigo_centro\":\"108\",\"Modulo100\":{\"id\":\"912eb136-60dd-4173-4b48-38d0dccd5fed\",\"name\":\"Modulo100\",\"vertices\":[{\"latitude\":-41.788691521392785,\"longitude\":-72.72512916840958},{\"latitude\":-41.78769821677646,\"longitude\":-72.72355696263314},{\"latitude\":-41.7871098547056,\"longitude\":-72.72429718811662},{\"latitude\":-41.78810003880772,\"longitude\":-72.72586495494357},{\"latitude\":-41.788691521392785,\"longitude\":-72.72512916840958}]},\"INTERIOR\":{\"id\":\"dede1a11-ffa6-47d8-7ba0-44f08d2de89c\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-41.78832463217464,\"longitude\":-72.72403834009569},{\"latitude\":-41.78766522161582,\"longitude\":-72.72313006742748},{\"latitude\":-41.78675690325791,\"longitude\":-72.72421222667286},{\"latitude\":-41.78809260311478,\"longitude\":-72.72623566059477},{\"latitude\":-41.789022610010356,\"longitude\":-72.72514822721766},{\"latitude\":-41.78848816035766,\"longitude\":-72.7242967052673},{\"latitude\":-41.788663278385314,\"longitude\":-72.72398633661754},{\"latitude\":-41.7891868791595,\"longitude\":-72.72519510678393},{\"latitude\":-41.78893593707023,\"longitude\":-72.72632961155936},{\"latitude\":-41.78853992580381,\"longitude\":-72.72697154477254},{\"latitude\":-41.78796951441315,\"longitude\":-72.72734360955158},{\"latitude\":-41.78685796143463,\"longitude\":-72.72716399127172},{\"latitude\":-41.78587444839037,\"longitude\":-72.72567999994831},{\"latitude\":-41.78601447501947,\"longitude\":-72.72423269541203},{\"latitude\":-41.78642464657289,\"longitude\":-72.72345203977532},{\"latitude\":-41.787002996514964,\"longitude\":-72.72292799526147},{\"latitude\":-41.787860738254054,\"longitude\":-72.72299765717781},{\"latitude\":-41.788663278385314,\"longitude\":-72.72398633661754},{\"latitude\":-41.78832463217464,\"longitude\":-72.72403834009569}]},\"EXTERIOR\":{\"id\":\"77901925-e744-45b3-724f-3e3731bfe6bf\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-41.788663278385314,\"longitude\":-72.72398633661754},{\"latitude\":-41.787860738254054,\"longitude\":-72.72299765717781},{\"latitude\":-41.787002996514964,\"longitude\":-72.72292799526147},{\"latitude\":-41.78643367761545,\"longitude\":-72.7234414428556},{\"latitude\":-41.78601447501947,\"longitude\":-72.72423269541203},{\"latitude\":-41.78587444839037,\"longitude\":-72.72567999994831},{\"latitude\":-41.78685796143462,\"longitude\":-72.72716399127172},{\"latitude\":-41.78796951441315,\"longitude\":-72.72734360955158},{\"latitude\":-41.78853992580381,\"longitude\":-72.72697154477254},{\"latitude\":-41.78893593707023,\"longitude\":-72.72632961155936},{\"latitude\":-41.7891868791595,\"longitude\":-72.72519510678393},{\"latitude\":-41.788663278385314,\"longitude\":-72.72398633661754},{\"latitude\":-41.789295932380305,\"longitude\":-72.7252996328981},{\"latitude\":-41.78906745240111,\"longitude\":-72.72695973608077},{\"latitude\":-41.78793011367729,\"longitude\":-72.72898778066391},{\"latitude\":-41.78604344268911,\"longitude\":-72.72841561879488},{\"latitude\":-41.7848457264863,\"longitude\":-72.72646517407914},{\"latitude\":-41.78487098045964,\"longitude\":-72.72371960990837},{\"latitude\":-41.78664608522801,\"longitude\":-72.72263915264513},{\"latitude\":-41.7877590712293,\"longitude\":-72.72274776817484},{\"latitude\":-41.788663278385314,\"longitude\":-72.72398633661754}]},\"ACTIVETRACKING\":{\"id\":\"c6b6a04b-1e1b-4889-71bf-12a0f118389a\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-41.78865705060489,\"longitude\":-72.72400502822799},{\"latitude\":-41.78769543563398,\"longitude\":-72.72356274046729},{\"latitude\":-41.787110700170246,\"longitude\":-72.72429864783383},{\"latitude\":-41.78810003619789,\"longitude\":-72.72587081357145},{\"latitude\":-41.78869584744798,\"longitude\":-72.72513118950103},{\"latitude\":-41.78769821677646,\"longitude\":-72.72355696263314},{\"latitude\":-41.78864779993733,\"longitude\":-72.72401419874147},{\"latitude\":-41.78900512570113,\"longitude\":-72.72525376516687},{\"latitude\":-41.788868197912336,\"longitude\":-72.72738291829283},{\"latitude\":-41.78720792520132,\"longitude\":-72.72904721588456},{\"latitude\":-41.7856588691063,\"longitude\":-72.72852497077818},{\"latitude\":-41.78466349882219,\"longitude\":-72.72671773437429},{\"latitude\":-41.7846080168219,\"longitude\":-72.72430363753097},{\"latitude\":-41.78633410101034,\"longitude\":-72.72265841399731},{\"latitude\":-41.78778988135511,\"longitude\":-72.72309591725484},{\"latitude\":-41.78865705060489,\"longitude\":-72.72400502822799}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 1420,
        "wires": [
            [
                "376a2e8bb1b2621b"
            ]
        ]
    },
    {
        "id": "376a2e8bb1b2621b",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 1420,
        "wires": [
            [
                "153876c3902505bb"
            ]
        ]
    },
    {
        "id": "88ecd3dc8f7aafe6",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1420,
        "wires": []
    },
    {
        "id": "09f7e4f4f5f8e1d7",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT CONTAO",
        "info": "",
        "x": 150,
        "y": 1380,
        "wires": []
    },
    {
        "id": "98171041288d1b07",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "88ecd3dc8f7aafe6"
            ]
        ]
    },
    {
        "id": "153876c3902505bb",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "108",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Contao;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Contao\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1420,
        "wires": [
            [
                "98171041288d1b07"
            ]
        ]
    },
    {
        "id": "88d653d96d7ced29",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Pirquen\":{\"codigo_centro\":\"109\",\"Modulo100\":{\"vertices\":[{\"latitude\":-42.21985984282243,\"longitude\":-73.34585034101794},{\"latitude\":-42.222555964941215,\"longitude\":-73.34581095931166},{\"latitude\":-42.222560054121814,\"longitude\":-73.34478002077711},{\"latitude\":-42.21984004741589,\"longitude\":-73.34481986984457},{\"latitude\":-42.21985984282243,\"longitude\":-73.34585034101794}]},\"INTERIOR\":{\"vertices\":[{\"latitude\":-42.22272275738248,\"longitude\":-73.34551389583397},{\"latitude\":-42.22270704565149,\"longitude\":-73.34607827400954},{\"latitude\":-42.21974316841162,\"longitude\":-73.34612667560577},{\"latitude\":-42.21960710179573,\"longitude\":-73.34583163261412},{\"latitude\":-42.21959121078497,\"longitude\":-73.34481239318846},{\"latitude\":-42.21974316841161,\"longitude\":-73.3445629477501},{\"latitude\":-42.22272635962656,\"longitude\":-73.34451876478497},{\"latitude\":-42.22272637661657,\"longitude\":-73.34514557144355},{\"latitude\":-42.22298112696578,\"longitude\":-73.34528768599893},{\"latitude\":-42.22296756342471,\"longitude\":-73.34453773459244},{\"latitude\":-42.22252568625298,\"longitude\":-73.3433455714285},{\"latitude\":-42.22085381109261,\"longitude\":-73.34280171213322},{\"latitude\":-42.21931528423878,\"longitude\":-73.34310407095474},{\"latitude\":-42.21841309782855,\"longitude\":-73.34426961257122},{\"latitude\":-42.21840587452779,\"longitude\":-73.34617154236184},{\"latitude\":-42.21934013160799,\"longitude\":-73.34763877713495},{\"latitude\":-42.22086128750881,\"longitude\":-73.34778854131433},{\"latitude\":-42.22240175972193,\"longitude\":-73.34713460512486},{\"latitude\":-42.222867382893895,\"longitude\":-73.3461659336899},{\"latitude\":-42.222970892184776,\"longitude\":-73.3453858589047},{\"latitude\":-42.22272275738248,\"longitude\":-73.34551389583397}]},\"EXTERIOR\":{\"vertices\":[{\"latitude\":-42.222970892184776,\"longitude\":-73.3453858589047},{\"latitude\":-42.222867382893895,\"longitude\":-73.3461659336899},{\"latitude\":-42.22240175972193,\"longitude\":-73.34713460512486},{\"latitude\":-42.22086128750881,\"longitude\":-73.34778854131433},{\"latitude\":-42.21934013160799,\"longitude\":-73.34763877713495},{\"latitude\":-42.21840587452779,\"longitude\":-73.34617154236184},{\"latitude\":-42.21841309782855,\"longitude\":-73.34426961257122},{\"latitude\":-42.21931528423878,\"longitude\":-73.34310407095474},{\"latitude\":-42.22085381109261,\"longitude\":-73.34280171213322},{\"latitude\":-42.22251274187552,\"longitude\":-73.3434471487999},{\"latitude\":-42.22290638629162,\"longitude\":-73.3445346627559},{\"latitude\":-42.22298112696578,\"longitude\":-73.34528768599893},{\"latitude\":-42.222967780066874,\"longitude\":-73.34418353762884},{\"latitude\":-42.22250190774874,\"longitude\":-73.34307163953781},{\"latitude\":-42.21927079151008,\"longitude\":-73.34147432478348},{\"latitude\":-42.21771387635101,\"longitude\":-73.3424954531074},{\"latitude\":-42.217001671268285,\"longitude\":-73.34437219857213},{\"latitude\":-42.21698307583153,\"longitude\":-73.34648638720023},{\"latitude\":-42.21777166360959,\"longitude\":-73.34855236826115},{\"latitude\":-42.219517534162144,\"longitude\":-73.34954137193563},{\"latitude\":-42.22237135422939,\"longitude\":-73.34761505800998},{\"latitude\":-42.22296362688982,\"longitude\":-73.34640562534331},{\"latitude\":-42.222970892184776,\"longitude\":-73.3453858589047}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 1500,
        "wires": [
            [
                "1ddb8aec9d4d0463"
            ]
        ]
    },
    {
        "id": "1ddb8aec9d4d0463",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 1500,
        "wires": [
            [
                "8edcac056ad9a44d"
            ]
        ]
    },
    {
        "id": "a4a6d66512744dc8",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1500,
        "wires": []
    },
    {
        "id": "efc4b19095cc7771",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT PIRQUEN",
        "info": "",
        "x": 150,
        "y": 1460,
        "wires": []
    },
    {
        "id": "97063fad449f3c3a",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 1500,
        "wires": [
            [
                "a4a6d66512744dc8"
            ]
        ]
    },
    {
        "id": "8edcac056ad9a44d",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "109",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Pirquen;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Pirquen\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1500,
        "wires": [
            [
                "97063fad449f3c3a"
            ]
        ]
    },
    {
        "id": "8f837097023ff30d",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Rollizo_DonMiguel\":{\"codigo_centro\":\"110\",\"Modulo100\":{\"id\":\"43bf1cec-ea21-44ea-5ef5-2902c9a38614\",\"name\":\"Mod100\",\"vertices\":[{\"latitude\":-41.474253287525386,\"longitude\":-72.32702415644945},{\"latitude\":-41.47433021740215,\"longitude\":-72.32621507881024},{\"latitude\":-41.472306229328304,\"longitude\":-72.32580733528123},{\"latitude\":-41.472219270045905,\"longitude\":-72.3266520454224},{\"latitude\":-41.474253287525386,\"longitude\":-72.32702415644945}]},\"INTERIOR\":{\"id\":\"9afdc2d1-827a-4e5a-5cf2-9da3e36d98fb\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-41.47480855883912,\"longitude\":-72.3267368558234},{\"latitude\":-41.474454153537984,\"longitude\":-72.32687062642957},{\"latitude\":-41.47441720337226,\"longitude\":-72.3273150849991},{\"latitude\":-41.47200631860299,\"longitude\":-72.32688507192597},{\"latitude\":-41.47213829039306,\"longitude\":-72.32551905413351},{\"latitude\":-41.474541435435476,\"longitude\":-72.32600024364577},{\"latitude\":-41.474499213242446,\"longitude\":-72.32649906927634},{\"latitude\":-41.47481415252282,\"longitude\":-72.32668483313624},{\"latitude\":-41.474697376804286,\"longitude\":-72.32578468934194},{\"latitude\":-41.47399750060487,\"longitude\":-72.32493216578249},{\"latitude\":-41.47296829835453,\"longitude\":-72.32447161321251},{\"latitude\":-41.471966141290764,\"longitude\":-72.32449544357128},{\"latitude\":-41.471440763457466,\"longitude\":-72.3246815919423},{\"latitude\":-41.47082882330153,\"longitude\":-72.3252894379999},{\"latitude\":-41.470685760320784,\"longitude\":-72.32670354182524},{\"latitude\":-41.47108719182851,\"longitude\":-72.32770692990715},{\"latitude\":-41.47175528648147,\"longitude\":-72.32806634168674},{\"latitude\":-41.47285954738723,\"longitude\":-72.32836593362454},{\"latitude\":-41.47379552356389,\"longitude\":-72.32814312398583},{\"latitude\":-41.474436778970954,\"longitude\":-72.32775970651313},{\"latitude\":-41.47480855883912,\"longitude\":-72.3267368558234}]},\"EXTERIOR\":{\"id\":\"b7e87ac0-22fd-4179-6caa-66c27bab61cc\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-41.47480855883912,\"longitude\":-72.3267368558234},{\"latitude\":-41.47443983883522,\"longitude\":-72.32775128815692},{\"latitude\":-41.47379552356389,\"longitude\":-72.32814312398583},{\"latitude\":-41.47285954738723,\"longitude\":-72.32836593362454},{\"latitude\":-41.47175528648147,\"longitude\":-72.32806634168674},{\"latitude\":-41.47108719182851,\"longitude\":-72.32770692990715},{\"latitude\":-41.470685760320784,\"longitude\":-72.32670354182524},{\"latitude\":-41.47082882330153,\"longitude\":-72.3252894379999},{\"latitude\":-41.471440763457466,\"longitude\":-72.3246815919423},{\"latitude\":-41.471966141290764,\"longitude\":-72.32449544357128},{\"latitude\":-41.47296829835453,\"longitude\":-72.32447161321251},{\"latitude\":-41.47399750060487,\"longitude\":-72.32493216578249},{\"latitude\":-41.474697376804286,\"longitude\":-72.32578468934194},{\"latitude\":-41.47481462378894,\"longitude\":-72.32669193746396},{\"latitude\":-41.47477014052472,\"longitude\":-72.3256095218382},{\"latitude\":-41.47403516265656,\"longitude\":-72.32438635902503},{\"latitude\":-41.4723578987132,\"longitude\":-72.32302679320642},{\"latitude\":-41.47065171535141,\"longitude\":-72.32346964005606},{\"latitude\":-41.46974270275847,\"longitude\":-72.32495671056273},{\"latitude\":-41.4695723122344,\"longitude\":-72.32702742517957},{\"latitude\":-41.47046484161067,\"longitude\":-72.32914755324288},{\"latitude\":-41.47092686094328,\"longitude\":-72.32930429977814},{\"latitude\":-41.4712027306793,\"longitude\":-72.3292100429535},{\"latitude\":-41.471538258683054,\"longitude\":-72.3293640090168},{\"latitude\":-41.47186996384998,\"longitude\":-72.32934951782227},{\"latitude\":-41.472370458140304,\"longitude\":-72.3292483234857},{\"latitude\":-41.472697966548644,\"longitude\":-72.32909202575684},{\"latitude\":-41.47330079773899,\"longitude\":-72.32905850241177},{\"latitude\":-41.47449660518436,\"longitude\":-72.3279032207582},{\"latitude\":-41.47480855883912,\"longitude\":-72.3267368558234}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 1580,
        "wires": [
            [
                "08914bc7303367eb"
            ]
        ]
    },
    {
        "id": "08914bc7303367eb",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 1580,
        "wires": [
            [
                "84236b94198b773d"
            ]
        ]
    },
    {
        "id": "e2281a6eddd60629",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1580,
        "wires": []
    },
    {
        "id": "438e1995e4bfea88",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT ROLLIZO_DONMIGUEL",
        "info": "",
        "x": 190,
        "y": 1540,
        "wires": []
    },
    {
        "id": "c64eec9ee5493b6b",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 1580,
        "wires": [
            [
                "e2281a6eddd60629"
            ]
        ]
    },
    {
        "id": "84236b94198b773d",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "110",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Rollizo_DonMiguel;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Rollizo_DonMiguel\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1580,
        "wires": [
            [
                "c64eec9ee5493b6b"
            ]
        ]
    },
    {
        "id": "9527fd759e4e64f0",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Rollizo_Fenix\":{\"codigo_centro\":\"111\",\"Modulo200\":{\"id\":\"9305f291-816e-4a7b-6b9c-61b0c0d84108\",\"name\":\"Modulo 200\",\"vertices\":[{\"latitude\":-41.46795900916077,\"longitude\":-72.32693871483205},{\"latitude\":-41.46570998011639,\"longitude\":-72.3263504728675},{\"latitude\":-41.465838363570825,\"longitude\":-72.32536509633064},{\"latitude\":-41.46812055312266,\"longitude\":-72.32594285328945},{\"latitude\":-41.46795900916077,\"longitude\":-72.32693871483205}]},\"INTERIOR\":{\"id\":\"8d69834a-470f-4cd8-4101-cd11fc353bca\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-41.466923176062416,\"longitude\":-72.32694276327656},{\"latitude\":-41.46547303108942,\"longitude\":-72.3265611841858},{\"latitude\":-41.46566777584982,\"longitude\":-72.32503193358444},{\"latitude\":-41.46833454809695,\"longitude\":-72.32574495667374},{\"latitude\":-41.4681365818721,\"longitude\":-72.32724085240662},{\"latitude\":-41.467519685800006,\"longitude\":-72.32709709768763},{\"latitude\":-41.467293086493356,\"longitude\":-72.3275761693263},{\"latitude\":-41.468053373930594,\"longitude\":-72.32773364091165},{\"latitude\":-41.46912783300119,\"longitude\":-72.32777667006302},{\"latitude\":-41.469846101219666,\"longitude\":-72.32743445075899},{\"latitude\":-41.470586853046306,\"longitude\":-72.32638897596344},{\"latitude\":-41.47056437102322,\"longitude\":-72.32512989418306},{\"latitude\":-41.4700950193608,\"longitude\":-72.32423370831664},{\"latitude\":-41.46894036582414,\"longitude\":-72.32339954262795},{\"latitude\":-41.46748458966972,\"longitude\":-72.32370650017972},{\"latitude\":-41.46648889152734,\"longitude\":-72.3226624658032},{\"latitude\":-41.46499160318418,\"longitude\":-72.32254120117167},{\"latitude\":-41.46363605386261,\"longitude\":-72.32354831317735},{\"latitude\":-41.46347009543423,\"longitude\":-72.32480326275243},{\"latitude\":-41.46373088710263,\"longitude\":-72.32590002612972},{\"latitude\":-41.46448309790482,\"longitude\":-72.32672500246466},{\"latitude\":-41.465909216397854,\"longitude\":-72.32716202320913},{\"latitude\":-41.4671898349759,\"longitude\":-72.32754217153116},{\"latitude\":-41.466923176062416,\"longitude\":-72.32694276327656}]},\"EXTERIOR\":{\"id\":\"2586cc68-525e-4630-6a33-c195a6ada8e8\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-41.46594117898307,\"longitude\":-72.32712245746187},{\"latitude\":-41.465406273867934,\"longitude\":-72.32697664785795},{\"latitude\":-41.465375843159144,\"longitude\":-72.32696835279752},{\"latitude\":-41.46448309790482,\"longitude\":-72.32672500246466},{\"latitude\":-41.463737058160795,\"longitude\":-72.32590980149165},{\"latitude\":-41.46347009543423,\"longitude\":-72.32480326275243},{\"latitude\":-41.46363605386261,\"longitude\":-72.32354831317735},{\"latitude\":-41.46499160318418,\"longitude\":-72.32254120117167},{\"latitude\":-41.46648889152734,\"longitude\":-72.3226624658032},{\"latitude\":-41.46748458966972,\"longitude\":-72.32370650017972},{\"latitude\":-41.46894036582414,\"longitude\":-72.32339954262795},{\"latitude\":-41.4700950193608,\"longitude\":-72.32423370831664},{\"latitude\":-41.47056437102322,\"longitude\":-72.32512989418306},{\"latitude\":-41.470586853046306,\"longitude\":-72.32638897596344},{\"latitude\":-41.469846101219666,\"longitude\":-72.32743445075899},{\"latitude\":-41.46912783300119,\"longitude\":-72.32777667006302},{\"latitude\":-41.46818020560189,\"longitude\":-72.32773872013657},{\"latitude\":-41.467293086493356,\"longitude\":-72.3275761693263},{\"latitude\":-41.4675591076546,\"longitude\":-72.32777974512707},{\"latitude\":-41.46808860088135,\"longitude\":-72.3279917381353},{\"latitude\":-41.46892410260935,\"longitude\":-72.32817159135803},{\"latitude\":-41.47023082496054,\"longitude\":-72.32819296738666},{\"latitude\":-41.471518571319486,\"longitude\":-72.32747615645091},{\"latitude\":-41.47219745167886,\"longitude\":-72.32642842066342},{\"latitude\":-41.472217680864105,\"longitude\":-72.32379264890243},{\"latitude\":-41.47117589385241,\"longitude\":-72.3218271115885},{\"latitude\":-41.46944444220124,\"longitude\":-72.32125237882309},{\"latitude\":-41.46819452815017,\"longitude\":-72.32145075620788},{\"latitude\":-41.46756628242896,\"longitude\":-72.32185643947841},{\"latitude\":-41.467518417845305,\"longitude\":-72.32309670978238},{\"latitude\":-41.46756628242896,\"longitude\":-72.32185643947841},{\"latitude\":-41.4672926899406,\"longitude\":-72.32116677812486},{\"latitude\":-41.46647337365302,\"longitude\":-72.32024438119105},{\"latitude\":-41.4656758426377,\"longitude\":-72.31991822562256},{\"latitude\":-41.46471107403688,\"longitude\":-72.32012421875103},{\"latitude\":-41.46306112941509,\"longitude\":-72.32077502994797},{\"latitude\":-41.46210918566645,\"longitude\":-72.32280063733924},{\"latitude\":-41.46226692822322,\"longitude\":-72.32470757699184},{\"latitude\":-41.462768628675754,\"longitude\":-72.32592637250625},{\"latitude\":-41.46421722148059,\"longitude\":-72.32734771533964},{\"latitude\":-41.46526286712103,\"longitude\":-72.32773367591972},{\"latitude\":-41.46602347251935,\"longitude\":-72.32789890147635},{\"latitude\":-41.466797828297786,\"longitude\":-72.32769523199148},{\"latitude\":-41.4671898349759,\"longitude\":-72.32754217153116},{\"latitude\":-41.46594117898307,\"longitude\":-72.32712245746187}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 1660,
        "wires": [
            [
                "8df3a87aaa0d624b"
            ]
        ]
    },
    {
        "id": "8df3a87aaa0d624b",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 1660,
        "wires": [
            [
                "f795ca65a11e1d3f"
            ]
        ]
    },
    {
        "id": "786dee5cac410922",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1660,
        "wires": []
    },
    {
        "id": "9e64c6050602905d",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT ROLLIZO_FENIX",
        "info": "",
        "x": 170,
        "y": 1620,
        "wires": []
    },
    {
        "id": "34f264025cb0384c",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 1660,
        "wires": [
            [
                "786dee5cac410922"
            ]
        ]
    },
    {
        "id": "f795ca65a11e1d3f",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "111",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Rollizo_Fenix;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Rollizo_Fenix\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_200\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1660,
        "wires": [
            [
                "34f264025cb0384c"
            ]
        ]
    },
    {
        "id": "421bf98f8b11a1dc",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Quillaipe\":{\"codigo_centro\":\"112\",\"Modulo100\":{\"id\":\"8121fee9-fa99-4816-77ac-d9bbcca8d3a3\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-41.55214727455776,\"longitude\":-72.77881237849749,\"altitude\":0},{\"latitude\":-41.5516539756512,\"longitude\":-72.77799047638632,\"altitude\":0},{\"latitude\":-41.55325286534118,\"longitude\":-72.77638370244695,\"altitude\":0},{\"latitude\":-41.55373776236027,\"longitude\":-72.77725159965637,\"altitude\":0},{\"latitude\":-41.55214727455776,\"longitude\":-72.77881237849749,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"44b3577b-0418-4b14-7af7-d3d58cb17b2a\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-41.55182980472674,\"longitude\":-72.77854489016886,\"altitude\":0},{\"latitude\":-41.55213714909149,\"longitude\":-72.77906017096817,\"altitude\":0},{\"latitude\":-41.553939703394065,\"longitude\":-72.77726886482252,\"altitude\":0},{\"latitude\":-41.553301058485694,\"longitude\":-72.7761165376816,\"altitude\":0},{\"latitude\":-41.55148949148004,\"longitude\":-72.77796870782433,\"altitude\":0},{\"latitude\":-41.55182980472674,\"longitude\":-72.77854489016886,\"altitude\":0},{\"latitude\":-41.5514891837332,\"longitude\":-72.77881592990401,\"altitude\":0},{\"latitude\":-41.55129338737689,\"longitude\":-72.77823369784737,\"altitude\":0},{\"latitude\":-41.551218845036985,\"longitude\":-72.77726711259163,\"altitude\":0},{\"latitude\":-41.55187636650983,\"longitude\":-72.77572825757365,\"altitude\":0},{\"latitude\":-41.553175375442436,\"longitude\":-72.77460242073549,\"altitude\":0},{\"latitude\":-41.554392348936595,\"longitude\":-72.7750955889769,\"altitude\":0},{\"latitude\":-41.555120749779555,\"longitude\":-72.7765561147539,\"altitude\":0},{\"latitude\":-41.55485147526382,\"longitude\":-72.77819440159244,\"altitude\":0},{\"latitude\":-41.55352178886441,\"longitude\":-72.77965202687001,\"altitude\":0},{\"latitude\":-41.55234303684613,\"longitude\":-72.77985774295374,\"altitude\":0},{\"latitude\":-41.55187737517915,\"longitude\":-72.77944578015614,\"altitude\":0},{\"latitude\":-41.551482729092626,\"longitude\":-72.77882055372368,\"altitude\":0},{\"latitude\":-41.55182980472674,\"longitude\":-72.77854489016886,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"c9973fc9-54b8-4bca-7768-ef36663d3d43\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-41.55187737517915,\"longitude\":-72.77944578015614,\"altitude\":0},{\"latitude\":-41.55234774139584,\"longitude\":-72.77985296121655,\"altitude\":0},{\"latitude\":-41.55352178886441,\"longitude\":-72.77965202687001,\"altitude\":0},{\"latitude\":-41.55485147526382,\"longitude\":-72.77819440159244,\"altitude\":0},{\"latitude\":-41.555120749779555,\"longitude\":-72.7765561147539,\"altitude\":0},{\"latitude\":-41.554392348936595,\"longitude\":-72.7750955889769,\"altitude\":0},{\"latitude\":-41.553175375442436,\"longitude\":-72.77460242073549,\"altitude\":0},{\"latitude\":-41.55187636650983,\"longitude\":-72.77572825757365,\"altitude\":0},{\"latitude\":-41.551218845036985,\"longitude\":-72.77726711259163,\"altitude\":0},{\"latitude\":-41.55129338737689,\"longitude\":-72.77823369784737,\"altitude\":0},{\"latitude\":-41.5514891837332,\"longitude\":-72.77881592990401,\"altitude\":0},{\"latitude\":-41.551120113600525,\"longitude\":-72.77811451604717,\"altitude\":0},{\"latitude\":-41.55083127649542,\"longitude\":-72.7770725402775,\"altitude\":0},{\"latitude\":-41.551279017893314,\"longitude\":-72.77506116185006,\"altitude\":0},{\"latitude\":-41.55173441117212,\"longitude\":-72.77437669006285,\"altitude\":0},{\"latitude\":-41.55328381292033,\"longitude\":-72.77319544917276,\"altitude\":0},{\"latitude\":-41.555130186178836,\"longitude\":-72.7740065110369,\"altitude\":0},{\"latitude\":-41.55602671127259,\"longitude\":-72.77571261088266,\"altitude\":0},{\"latitude\":-41.55606482822438,\"longitude\":-72.7782483021573,\"altitude\":0},{\"latitude\":-41.55475793321308,\"longitude\":-72.78002289517906,\"altitude\":0},{\"latitude\":-41.553873862218175,\"longitude\":-72.78043515150632,\"altitude\":0},{\"latitude\":-41.5525209265358,\"longitude\":-72.78028460112138,\"altitude\":0},{\"latitude\":-41.55199130889614,\"longitude\":-72.7798291963027,\"altitude\":0},{\"latitude\":-41.551520407774156,\"longitude\":-72.77886580911488,\"altitude\":0},{\"latitude\":-41.55187737517915,\"longitude\":-72.77944578015614,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"833695f9-42a3-4aba-4820-91b67203b9fc\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-41.55165780728159,\"longitude\":-72.77994811884233,\"altitude\":0},{\"latitude\":-41.55146083366009,\"longitude\":-72.77893901500501,\"altitude\":0},{\"latitude\":-41.55182183316677,\"longitude\":-72.77876020974963,\"altitude\":0},{\"latitude\":-41.55218275945486,\"longitude\":-72.778974578911,\"altitude\":0},{\"latitude\":-41.55396342407899,\"longitude\":-72.77730946292351,\"altitude\":0},{\"latitude\":-41.55342400923671,\"longitude\":-72.77638625472062,\"altitude\":0},{\"latitude\":-41.55165388340549,\"longitude\":-72.77807524399317,\"altitude\":0},{\"latitude\":-41.551837788549356,\"longitude\":-72.77856620411231,\"altitude\":0},{\"latitude\":-41.55141995559517,\"longitude\":-72.77886552186288,\"altitude\":0},{\"latitude\":-41.55061624229466,\"longitude\":-72.77786980613358,\"altitude\":0},{\"latitude\":-41.55031731362795,\"longitude\":-72.77640584482447,\"altitude\":0},{\"latitude\":-41.55048013314126,\"longitude\":-72.77466267900867,\"altitude\":0},{\"latitude\":-41.55162829245019,\"longitude\":-72.77306672780948,\"altitude\":0},{\"latitude\":-41.55391089175087,\"longitude\":-72.77250072177044,\"altitude\":0},{\"latitude\":-41.555091326690544,\"longitude\":-72.77336988048779,\"altitude\":0},{\"latitude\":-41.55660927647688,\"longitude\":-72.77603574002015,\"altitude\":0},{\"latitude\":-41.55649622056522,\"longitude\":-72.77814762350982,\"altitude\":0},{\"latitude\":-41.55491801217506,\"longitude\":-72.78032911661185,\"altitude\":0},{\"latitude\":-41.55332862059099,\"longitude\":-72.78129228832995,\"altitude\":0},{\"latitude\":-41.55245552823718,\"longitude\":-72.78072735346038,\"altitude\":0},{\"latitude\":-41.55165780728159,\"longitude\":-72.77994811884233,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 1740,
        "wires": [
            [
                "f491658911a71066"
            ]
        ]
    },
    {
        "id": "f491658911a71066",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 1740,
        "wires": [
            [
                "a2251e584ec79a0a"
            ]
        ]
    },
    {
        "id": "d1054085c7d500a3",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1740,
        "wires": []
    },
    {
        "id": "7bfbc79d89c15149",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT QUILLAIPE",
        "info": "",
        "x": 150,
        "y": 1700,
        "wires": []
    },
    {
        "id": "5f60ca0c79acbc8c",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 1740,
        "wires": [
            [
                "d1054085c7d500a3"
            ]
        ]
    },
    {
        "id": "a2251e584ec79a0a",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "112",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Quillaipe;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Quillaipe\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1740,
        "wires": [
            [
                "5f60ca0c79acbc8c"
            ]
        ]
    },
    {
        "id": "4e68f79a76f1f887",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Polocuhe\":{\"codigo_centro\":\"113\",\"Modulo100\":{\"id\":\"648c6588-f02f-40a2-7cd1-de8456a5f59f\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-42.43191121295644,\"longitude\":-73.27453981516695},{\"latitude\":-42.4350310470265,\"longitude\":-73.27421212568876},{\"latitude\":-42.43500704454897,\"longitude\":-73.27317377552389},{\"latitude\":-42.43184834965169,\"longitude\":-73.27345121651888},{\"latitude\":-42.43191121295644,\"longitude\":-73.27453981516695}]},\"INTERIOR\":{\"id\":\"6e32f572-8f85-47d4-78ea-68aff0b4fe82\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-42.43520116651434,\"longitude\":-73.27377273010067},{\"latitude\":-42.435178711550854,\"longitude\":-73.27422738075255},{\"latitude\":-42.43510150785468,\"longitude\":-73.27445536851884},{\"latitude\":-42.43192617600645,\"longitude\":-73.27482059597287},{\"latitude\":-42.43168333444413,\"longitude\":-73.27457338571548},{\"latitude\":-42.43162526339656,\"longitude\":-73.27346473921352},{\"latitude\":-42.431804755342895,\"longitude\":-73.27317863702774},{\"latitude\":-42.43504146050993,\"longitude\":-73.27289834618567},{\"latitude\":-42.4351372427062,\"longitude\":-73.27308822687166},{\"latitude\":-42.435174752389266,\"longitude\":-73.27335700392723},{\"latitude\":-42.43535687356369,\"longitude\":-73.27348574995995},{\"latitude\":-42.43515002495384,\"longitude\":-73.27256289396983},{\"latitude\":-42.434296472274404,\"longitude\":-73.27182501532661},{\"latitude\":-42.4335349782866,\"longitude\":-73.27135026433098},{\"latitude\":-42.43140206759713,\"longitude\":-73.27169763455225},{\"latitude\":-42.43041235984548,\"longitude\":-73.27271640257095},{\"latitude\":-42.43008768307383,\"longitude\":-73.27419161752915},{\"latitude\":-42.430475711214555,\"longitude\":-73.27543437480925},{\"latitude\":-42.431645313029605,\"longitude\":-73.27639659902857},{\"latitude\":-42.433780452255085,\"longitude\":-73.2761639356613},{\"latitude\":-42.43448123543126,\"longitude\":-73.27562481164932},{\"latitude\":-42.43524403768104,\"longitude\":-73.27467173327021},{\"latitude\":-42.435361492652646,\"longitude\":-73.27363640059046},{\"latitude\":-42.43520116651434,\"longitude\":-73.27377273010067}]},\"EXTERIOR\":{\"id\":\"9b3b94d0-1103-42b4-4ab6-56174f94d805\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-42.435361492652646,\"longitude\":-73.27363640059046},{\"latitude\":-42.43524403768104,\"longitude\":-73.27467173327021},{\"latitude\":-42.43448123543126,\"longitude\":-73.27562481164932},{\"latitude\":-42.433780452255085,\"longitude\":-73.2761639356613},{\"latitude\":-42.431645313029605,\"longitude\":-73.27639659902857},{\"latitude\":-42.430475711214555,\"longitude\":-73.27543437480925},{\"latitude\":-42.43008768307383,\"longitude\":-73.27419161752915},{\"latitude\":-42.43041235984548,\"longitude\":-73.27271640257095},{\"latitude\":-42.43140206759713,\"longitude\":-73.27169763455225},{\"latitude\":-42.4335349782866,\"longitude\":-73.27135026433098},{\"latitude\":-42.434296472274404,\"longitude\":-73.27182501532661},{\"latitude\":-42.43515002495384,\"longitude\":-73.27256289396983},{\"latitude\":-42.43535687356369,\"longitude\":-73.27348574995995},{\"latitude\":-42.435207889413206,\"longitude\":-73.2724946711321},{\"latitude\":-42.43462244689586,\"longitude\":-73.27126085758208},{\"latitude\":-42.43261017891742,\"longitude\":-73.26984667506817},{\"latitude\":-42.4306669188114,\"longitude\":-73.26987149670562},{\"latitude\":-42.42916379683967,\"longitude\":-73.27177941711851},{\"latitude\":-42.42877840024781,\"longitude\":-73.27449023723601},{\"latitude\":-42.42954718821272,\"longitude\":-73.27679690984124},{\"latitude\":-42.43114927527258,\"longitude\":-73.27813348480977},{\"latitude\":-42.433136410897546,\"longitude\":-73.27786624420695},{\"latitude\":-42.43477025688943,\"longitude\":-73.27623903751372},{\"latitude\":-42.43528626875901,\"longitude\":-73.27478975046687},{\"latitude\":-42.435361492652646,\"longitude\":-73.27363640059046}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 1820,
        "wires": [
            [
                "9805f896c81e216d"
            ]
        ]
    },
    {
        "id": "9805f896c81e216d",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 1820,
        "wires": [
            [
                "393b2aa093d16f0c"
            ]
        ]
    },
    {
        "id": "6afacf5f2dd712c9",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1820,
        "wires": []
    },
    {
        "id": "4de47461872b29c7",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT POLOCUHE",
        "info": "",
        "x": 160,
        "y": 1780,
        "wires": []
    },
    {
        "id": "2f3486544ab24a08",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 1820,
        "wires": [
            [
                "6afacf5f2dd712c9"
            ]
        ]
    },
    {
        "id": "393b2aa093d16f0c",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "113",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Polocuhe;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Polocuhe\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1820,
        "wires": [
            [
                "2f3486544ab24a08"
            ]
        ]
    },
    {
        "id": "88caa85aaa1b43d7",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Ilque\":{\"codigo_centro\":\"114\",\"Modulo100\":{\"id\":\"c620e427-713e-4215-72d7-5921d28f59e0\",\"name\":\"Mod 100\",\"vertices\":[{\"latitude\":-41.62833693164512,\"longitude\":-73.01844924688339},{\"latitude\":-41.630574828721706,\"longitude\":-73.02054204046726},{\"latitude\":-41.63102202291725,\"longitude\":-73.01969395950437},{\"latitude\":-41.628775087726844,\"longitude\":-73.0175945558529},{\"latitude\":-41.62833693164512,\"longitude\":-73.01844924688339}]},\"INTERIOR\":{\"id\":\"61a2ed50-7875-4516-5c8a-62ae8ec45290\",\"name\":\"Zona_Interior\",\"vertices\":[{\"latitude\":-41.631276115595256,\"longitude\":-73.02048709139315},{\"latitude\":-41.631089294496824,\"longitude\":-73.02004682459972},{\"latitude\":-41.631266809695845,\"longitude\":-73.01966542160397},{\"latitude\":-41.62872330328286,\"longitude\":-73.01725733240461},{\"latitude\":-41.62808551103651,\"longitude\":-73.01851305195547},{\"latitude\":-41.63062794002712,\"longitude\":-73.02086897537335},{\"latitude\":-41.63091366194995,\"longitude\":-73.02037823508283},{\"latitude\":-41.63126190330439,\"longitude\":-73.02051306255959},{\"latitude\":-41.6306659787087,\"longitude\":-73.02109602461297},{\"latitude\":-41.62982500892885,\"longitude\":-73.02132588589504},{\"latitude\":-41.628977553211655,\"longitude\":-73.02110217939398},{\"latitude\":-41.627432869794056,\"longitude\":-73.01969113119011},{\"latitude\":-41.62710938118544,\"longitude\":-73.01858194426697},{\"latitude\":-41.627440783453565,\"longitude\":-73.0170500886157},{\"latitude\":-41.6284267309938,\"longitude\":-73.01605721361715},{\"latitude\":-41.629260339444585,\"longitude\":-73.01617700848865},{\"latitude\":-41.63082697420862,\"longitude\":-73.01754943080604},{\"latitude\":-41.63135711776627,\"longitude\":-73.01846987721122},{\"latitude\":-41.631509239680796,\"longitude\":-73.01942593500068},{\"latitude\":-41.631276115595256,\"longitude\":-73.02048709139315}]},\"EXTERIOR\":{\"id\":\"97569ac4-fa36-47c8-4331-7f9a3316b450\",\"name\":\"Zona_Exterior\",\"vertices\":[{\"latitude\":-41.631509239680796,\"longitude\":-73.01942593500068},{\"latitude\":-41.63135711776627,\"longitude\":-73.01846987721122},{\"latitude\":-41.63082697420862,\"longitude\":-73.01754943080604},{\"latitude\":-41.629260339444585,\"longitude\":-73.01617700848865},{\"latitude\":-41.6284267309938,\"longitude\":-73.01605721361715},{\"latitude\":-41.627440783453565,\"longitude\":-73.0170500886157},{\"latitude\":-41.62710938118544,\"longitude\":-73.01858194426697},{\"latitude\":-41.62743286979406,\"longitude\":-73.01969113119011},{\"latitude\":-41.628977553211655,\"longitude\":-73.02110217939398},{\"latitude\":-41.62982500892885,\"longitude\":-73.02132588589504},{\"latitude\":-41.6306659787087,\"longitude\":-73.02109602461297},{\"latitude\":-41.63126190330439,\"longitude\":-73.02051306255959},{\"latitude\":-41.63064781994874,\"longitude\":-73.02124790462713},{\"latitude\":-41.62963589610312,\"longitude\":-73.0217020583607},{\"latitude\":-41.62768924610911,\"longitude\":-73.02179417940238},{\"latitude\":-41.626126196879916,\"longitude\":-73.02011333260464},{\"latitude\":-41.625925570783,\"longitude\":-73.01727152791757},{\"latitude\":-41.62697675591284,\"longitude\":-73.01516768029786},{\"latitude\":-41.62917002350221,\"longitude\":-73.01430345691739},{\"latitude\":-41.630893584532195,\"longitude\":-73.01587996369747},{\"latitude\":-41.63141390462178,\"longitude\":-73.01784718599824},{\"latitude\":-41.63162736809868,\"longitude\":-73.01939622559858},{\"latitude\":-41.63127539898285,\"longitude\":-73.0204903533318},{\"latitude\":-41.631509239680796,\"longitude\":-73.01942593500068}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 1900,
        "wires": [
            [
                "204b1fb8ff3f6aa0"
            ]
        ]
    },
    {
        "id": "204b1fb8ff3f6aa0",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 1900,
        "wires": [
            [
                "63c401e1c5ebb5ab"
            ]
        ]
    },
    {
        "id": "6021ed70742c1fb2",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1900,
        "wires": []
    },
    {
        "id": "fa16a72540184446",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT ILQUE",
        "info": "",
        "x": 140,
        "y": 1860,
        "wires": []
    },
    {
        "id": "0d322e783e2fd5a5",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 1900,
        "wires": [
            [
                "6021ed70742c1fb2"
            ]
        ]
    },
    {
        "id": "63c401e1c5ebb5ab",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "114",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Ilque;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Ilque\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1900,
        "wires": [
            [
                "0d322e783e2fd5a5"
            ]
        ]
    },
    {
        "id": "cad8338399465e41",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Lenca\":{\"codigo_centro\":\"115\",\"Modulo100\":{\"id\":\"89bcf991-d1cf-4554-6b33-a22146bf18d9\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-41.62707251464848,\"longitude\":-72.71028578259573,\"altitude\":0},{\"latitude\":-41.62692548785246,\"longitude\":-72.70921289898978,\"altitude\":0},{\"latitude\":-41.628516033180475,\"longitude\":-72.70881950877083,\"altitude\":0},{\"latitude\":-41.62864969057602,\"longitude\":-72.70992815494537,\"altitude\":0},{\"latitude\":-41.62707251464848,\"longitude\":-72.71028578259573,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"428daded-561e-42a9-6b5f-d5eab68af911\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-41.62610777465289,\"longitude\":-72.71003311393679,\"altitude\":0},{\"latitude\":-41.62680454056726,\"longitude\":-72.7101334274698,\"altitude\":0},{\"latitude\":-41.62686857248025,\"longitude\":-72.71057948395139,\"altitude\":0},{\"latitude\":-41.628874239245064,\"longitude\":-72.71013204110072,\"altitude\":0},{\"latitude\":-41.62868518504349,\"longitude\":-72.70854661310302,\"altitude\":0},{\"latitude\":-41.62666012375279,\"longitude\":-72.70900736909562,\"altitude\":0},{\"latitude\":-41.6267294984928,\"longitude\":-72.70964311281925,\"altitude\":0},{\"latitude\":-41.62610777465289,\"longitude\":-72.71003311393679,\"altitude\":0},{\"latitude\":-41.626207680520494,\"longitude\":-72.70860409522163,\"altitude\":0},{\"latitude\":-41.62650203900877,\"longitude\":-72.70769133709044,\"altitude\":0},{\"latitude\":-41.628784000956756,\"longitude\":-72.70620877786818,\"altitude\":0},{\"latitude\":-41.630151075518185,\"longitude\":-72.7062877489579,\"altitude\":0},{\"latitude\":-41.631278932126826,\"longitude\":-72.7073481159536,\"altitude\":0},{\"latitude\":-41.63160176143137,\"longitude\":-72.709460915733,\"altitude\":0},{\"latitude\":-41.630858994625285,\"longitude\":-72.71129572564566,\"altitude\":0},{\"latitude\":-41.629758986482116,\"longitude\":-72.7121073799716,\"altitude\":0},{\"latitude\":-41.62684305392419,\"longitude\":-72.71181808866932,\"altitude\":0},{\"latitude\":-41.62651174197242,\"longitude\":-72.7112367188501,\"altitude\":0},{\"latitude\":-41.62610777465289,\"longitude\":-72.71003311393679,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"116ba791-595b-40b3-5c91-c67f644c1970\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-41.62610777465289,\"longitude\":-72.71003311393679,\"altitude\":0},{\"latitude\":-41.62651174197242,\"longitude\":-72.7112367188501,\"altitude\":0},{\"latitude\":-41.62684305392419,\"longitude\":-72.71181808866932,\"altitude\":0},{\"latitude\":-41.629758986482116,\"longitude\":-72.7121073799716,\"altitude\":0},{\"latitude\":-41.630858994625285,\"longitude\":-72.71129572564566,\"altitude\":0},{\"latitude\":-41.63160176143137,\"longitude\":-72.709460915733,\"altitude\":0},{\"latitude\":-41.631278932126826,\"longitude\":-72.7073481159536,\"altitude\":0},{\"latitude\":-41.630151075518185,\"longitude\":-72.7062877489579,\"altitude\":0},{\"latitude\":-41.628784000956756,\"longitude\":-72.70620877786818,\"altitude\":0},{\"latitude\":-41.62650203900877,\"longitude\":-72.70769133709044,\"altitude\":0},{\"latitude\":-41.626207680520494,\"longitude\":-72.70860409522163,\"altitude\":0},{\"latitude\":-41.62610777465289,\"longitude\":-72.71003311393679,\"altitude\":0},{\"latitude\":-41.62602908629527,\"longitude\":-72.70763182101952,\"altitude\":0},{\"latitude\":-41.62686919289647,\"longitude\":-72.70621938485286,\"altitude\":0},{\"latitude\":-41.62878451031135,\"longitude\":-72.70439081796039,\"altitude\":0},{\"latitude\":-41.630991510818376,\"longitude\":-72.70458449703999,\"altitude\":0},{\"latitude\":-41.63269030721958,\"longitude\":-72.70651042839177,\"altitude\":0},{\"latitude\":-41.633097515242774,\"longitude\":-72.70944335338524,\"altitude\":0},{\"latitude\":-41.63219092867173,\"longitude\":-72.71232713188289,\"altitude\":0},{\"latitude\":-41.63033275799072,\"longitude\":-72.71350545569581,\"altitude\":0},{\"latitude\":-41.627545157958295,\"longitude\":-72.7131100388842,\"altitude\":0},{\"latitude\":-41.6265771544999,\"longitude\":-72.7120686805451,\"altitude\":0},{\"latitude\":-41.62610777465289,\"longitude\":-72.71003311393679,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"537429d1-bd24-4ced-49d9-3f921244070d\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-41.62615138437834,\"longitude\":-72.71001895612989,\"altitude\":0},{\"latitude\":-41.62621210661466,\"longitude\":-72.71224477718133,\"altitude\":0},{\"latitude\":-41.62689219175425,\"longitude\":-72.71442185762578,\"altitude\":0},{\"latitude\":-41.631300426818946,\"longitude\":-72.71620901321452,\"altitude\":0},{\"latitude\":-41.63411765332415,\"longitude\":-72.71219603657434,\"altitude\":0},{\"latitude\":-41.633170496083274,\"longitude\":-72.70381265217627,\"altitude\":0},{\"latitude\":-41.6289445480585,\"longitude\":-72.70261038387112,\"altitude\":0},{\"latitude\":-41.625532014301356,\"longitude\":-72.70581101706186,\"altitude\":0},{\"latitude\":-41.62538627930091,\"longitude\":-72.70766316012656,\"altitude\":0},{\"latitude\":-41.62610777465289,\"longitude\":-72.71003311393679,\"altitude\":0},{\"latitude\":-41.6267294984928,\"longitude\":-72.70964311281925,\"altitude\":0},{\"latitude\":-41.62666012375279,\"longitude\":-72.70900736909562,\"altitude\":0},{\"latitude\":-41.62868518504349,\"longitude\":-72.70854661310302,\"altitude\":0},{\"latitude\":-41.628874239245064,\"longitude\":-72.71013204110072,\"altitude\":0},{\"latitude\":-41.62686857248025,\"longitude\":-72.71057948395139,\"altitude\":0},{\"latitude\":-41.6267294984928,\"longitude\":-72.70964311281925,\"altitude\":0},{\"latitude\":-41.62615138437834,\"longitude\":-72.71001895612989,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 1980,
        "wires": [
            [
                "d3f68088d6d48501"
            ]
        ]
    },
    {
        "id": "d3f68088d6d48501",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 1980,
        "wires": [
            [
                "e2aee8cdd2695432"
            ]
        ]
    },
    {
        "id": "119d1ded7f4a1962",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1980,
        "wires": []
    },
    {
        "id": "81ee87f20e3ee75b",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT LENCA",
        "info": "",
        "x": 140,
        "y": 1940,
        "wires": []
    },
    {
        "id": "088bfeccccd60805",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 1980,
        "wires": [
            [
                "119d1ded7f4a1962"
            ]
        ]
    },
    {
        "id": "e2aee8cdd2695432",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "115",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Lenca;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Lenca\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1980,
        "wires": [
            [
                "088bfeccccd60805"
            ]
        ]
    },
    {
        "id": "37c7518f4bdd3827",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Traiguen\":{\"codigo_centro\":\"116\",\"Modulo100\":{\"id\":\"19a64f20-8ed4-4025-7ae4-008fb8d5b10b\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-42.54601002805649,\"longitude\":-73.38576998887531},{\"latitude\":-42.546010040406316,\"longitude\":-73.38470998406434},{\"latitude\":-42.54798999754382,\"longitude\":-73.3846999886445},{\"latitude\":-42.54799000371877,\"longitude\":-73.38577000878293},{\"latitude\":-42.54601002805649,\"longitude\":-73.38576998887531}]},\"INTERIOR\":{\"id\":\"f03dba75-4eff-45ac-6bed-ee90688833d3\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-42.546033574746886,\"longitude\":-73.38605835515776},{\"latitude\":-42.545803196103144,\"longitude\":-73.38582015050633},{\"latitude\":-42.545808984874554,\"longitude\":-73.3846336553767},{\"latitude\":-42.546004330318546,\"longitude\":-73.3844094097044},{\"latitude\":-42.54800363727036,\"longitude\":-73.38441358935057},{\"latitude\":-42.548245526811414,\"longitude\":-73.38465686153249},{\"latitude\":-42.5482118698784,\"longitude\":-73.38577784526545},{\"latitude\":-42.54801844402638,\"longitude\":-73.38601809741702},{\"latitude\":-42.548128296045874,\"longitude\":-73.38638478056087},{\"latitude\":-42.548338853930424,\"longitude\":-73.38614630672964},{\"latitude\":-42.54840485218336,\"longitude\":-73.38582980639329},{\"latitude\":-42.54841473218424,\"longitude\":-73.38447260830435},{\"latitude\":-42.548170026631496,\"longitude\":-73.3837201446887},{\"latitude\":-42.54763657843076,\"longitude\":-73.38326990604399},{\"latitude\":-42.54613509686431,\"longitude\":-73.3832631369363},{\"latitude\":-42.545574282651415,\"longitude\":-73.3835696239825},{\"latitude\":-42.544992601457665,\"longitude\":-73.3845841884613},{\"latitude\":-42.54500422404918,\"longitude\":-73.38591122921254},{\"latitude\":-42.545510339696904,\"longitude\":-73.38669776916504},{\"latitude\":-42.54595915967286,\"longitude\":-73.38696837118373},{\"latitude\":-42.547498073880035,\"longitude\":-73.38688298561036},{\"latitude\":-42.54809169274245,\"longitude\":-73.38642279537751},{\"latitude\":-42.54770672726642,\"longitude\":-73.38608622550964},{\"latitude\":-42.546033574746886,\"longitude\":-73.38605835515776}]},\"EXTERIOR\":{\"id\":\"fd38f08b-5a6e-409b-69d2-2b5986b90107\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-42.54786900741632,\"longitude\":-73.3867220057617},{\"latitude\":-42.54809169274245,\"longitude\":-73.38642279537751},{\"latitude\":-42.547498073880035,\"longitude\":-73.38688298561036},{\"latitude\":-42.54595915967286,\"longitude\":-73.38696837118373},{\"latitude\":-42.545510339696904,\"longitude\":-73.38669776916504},{\"latitude\":-42.5450160806959,\"longitude\":-73.38591122921254},{\"latitude\":-42.544992601457665,\"longitude\":-73.3845841884613},{\"latitude\":-42.545574282651415,\"longitude\":-73.3835696239825},{\"latitude\":-42.54613509686431,\"longitude\":-73.3832631369363},{\"latitude\":-42.54763657843076,\"longitude\":-73.38326990604399},{\"latitude\":-42.548170026631496,\"longitude\":-73.3837201446887},{\"latitude\":-42.54841473218424,\"longitude\":-73.38447260830435},{\"latitude\":-42.54840485218336,\"longitude\":-73.38582980639329},{\"latitude\":-42.548338853930424,\"longitude\":-73.38614630672964},{\"latitude\":-42.548128296045874,\"longitude\":-73.38638478056087},{\"latitude\":-42.54838439832154,\"longitude\":-73.38617710285561},{\"latitude\":-42.54865323483419,\"longitude\":-73.38515818119049},{\"latitude\":-42.54842360269023,\"longitude\":-73.38286100083047},{\"latitude\":-42.546908931680036,\"longitude\":-73.38166885041748},{\"latitude\":-42.54532177147023,\"longitude\":-73.38222025943054},{\"latitude\":-42.54442743191307,\"longitude\":-73.38374197483063},{\"latitude\":-42.54436814809791,\"longitude\":-73.38563561439513},{\"latitude\":-42.54496888815303,\"longitude\":-73.38705718517302},{\"latitude\":-42.54589714718716,\"longitude\":-73.38754382701718},{\"latitude\":-42.547307361176856,\"longitude\":-73.38713295498428},{\"latitude\":-42.54786900741632,\"longitude\":-73.3867220057617}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 2060,
        "wires": [
            [
                "d3ab60624c10c446"
            ]
        ]
    },
    {
        "id": "d3ab60624c10c446",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 2060,
        "wires": [
            [
                "fb85d73cb258c3a1"
            ]
        ]
    },
    {
        "id": "9f6a7a3766754499",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2060,
        "wires": []
    },
    {
        "id": "1681c358c46aab0e",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT TRAIGUEN",
        "info": "",
        "x": 150,
        "y": 2020,
        "wires": []
    },
    {
        "id": "35d6ff493062cb61",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 2060,
        "wires": [
            [
                "9f6a7a3766754499"
            ]
        ]
    },
    {
        "id": "fb85d73cb258c3a1",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "116",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Traiguen;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Traiguen\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2060,
        "wires": [
            [
                "35d6ff493062cb61"
            ]
        ]
    },
    {
        "id": "fc8efafdeb3497b8",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Verdugo\":{\"codigo_centro\":\"117\",\"Modulo100\":{\"id\":\"3c1f5685-6fc1-458a-5cd4-f41c3d9d6850\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-44.15184548507606,\"longitude\":-73.66194043661412},{\"latitude\":-44.15183418422183,\"longitude\":-73.66079853265745},{\"latitude\":-44.1498401118521,\"longitude\":-73.66087446604074},{\"latitude\":-44.14985106862419,\"longitude\":-73.66197840986416},{\"latitude\":-44.15184548507606,\"longitude\":-73.66194043661412}]},\"INTERIOR\":{\"id\":\"f8f1302a-a787-42ca-795a-2067f535aad7\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-44.152193077782556,\"longitude\":-73.66154604078542},{\"latitude\":-44.15193922813715,\"longitude\":-73.66221006399428},{\"latitude\":-44.1496532460132,\"longitude\":-73.66227476851473},{\"latitude\":-44.14961876313356,\"longitude\":-73.66059642070152},{\"latitude\":-44.152036551260906,\"longitude\":-73.66052391271295},{\"latitude\":-44.152189651131245,\"longitude\":-73.66115464399827},{\"latitude\":-44.152625270800506,\"longitude\":-73.66132164004739},{\"latitude\":-44.15216070691154,\"longitude\":-73.66012430138652},{\"latitude\":-44.15147407753478,\"longitude\":-73.65935276752643},{\"latitude\":-44.14945256505089,\"longitude\":-73.65936539484953},{\"latitude\":-44.14853798325809,\"longitude\":-73.6603174204356},{\"latitude\":-44.1483270485285,\"longitude\":-73.6614739894867},{\"latitude\":-44.148622664843494,\"longitude\":-73.66254687309265},{\"latitude\":-44.14955261453064,\"longitude\":-73.6633880134468},{\"latitude\":-44.151534292003674,\"longitude\":-73.6632581091034},{\"latitude\":-44.15218534014901,\"longitude\":-73.6623816487554},{\"latitude\":-44.15262204583699,\"longitude\":-73.66140383160165},{\"latitude\":-44.152193077782556,\"longitude\":-73.66154604078542}]},\"EXTERIOR\":{\"id\":\"9cc50831-d829-4ede-6219-735cbc595b02\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-44.15262204583699,\"longitude\":-73.66140383160165},{\"latitude\":-44.15226539751252,\"longitude\":-73.66261339200719},{\"latitude\":-44.151501766459425,\"longitude\":-73.6639866830228},{\"latitude\":-44.14940544130731,\"longitude\":-73.66520910458419},{\"latitude\":-44.1483151741361,\"longitude\":-73.66438347228276},{\"latitude\":-44.14736474581191,\"longitude\":-73.66304469134774},{\"latitude\":-44.14733395186594,\"longitude\":-73.66022086091105},{\"latitude\":-44.14838401642793,\"longitude\":-73.65823602624005},{\"latitude\":-44.14962651724302,\"longitude\":-73.65760302491252},{\"latitude\":-44.15151686797928,\"longitude\":-73.65888872235753},{\"latitude\":-44.152370088397646,\"longitude\":-73.66012430138652},{\"latitude\":-44.152625270800506,\"longitude\":-73.66132164004739},{\"latitude\":-44.15216070691154,\"longitude\":-73.66012430138652},{\"latitude\":-44.15147407753478,\"longitude\":-73.65935276752643},{\"latitude\":-44.14945256505089,\"longitude\":-73.65936539484953},{\"latitude\":-44.14853798325809,\"longitude\":-73.6603174204356},{\"latitude\":-44.1483270485285,\"longitude\":-73.6614739894867},{\"latitude\":-44.148622664843494,\"longitude\":-73.66254687309265},{\"latitude\":-44.14955261453064,\"longitude\":-73.6633880134468},{\"latitude\":-44.151534292003674,\"longitude\":-73.6632581091034},{\"latitude\":-44.15218534014901,\"longitude\":-73.6623816487554},{\"latitude\":-44.15262204583699,\"longitude\":-73.66140383160165}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 2140,
        "wires": [
            [
                "d9dec551caea44a0"
            ]
        ]
    },
    {
        "id": "d9dec551caea44a0",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 2140,
        "wires": [
            [
                "9406abecf1001913"
            ]
        ]
    },
    {
        "id": "9ed088727df0f7af",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2140,
        "wires": []
    },
    {
        "id": "e14a76ecb4465c59",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT VERDUGO",
        "info": "",
        "x": 150,
        "y": 2100,
        "wires": []
    },
    {
        "id": "472f2406880437c5",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 2140,
        "wires": [
            [
                "9ed088727df0f7af"
            ]
        ]
    },
    {
        "id": "9406abecf1001913",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "117",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Verdugo;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Verdugo\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2140,
        "wires": [
            [
                "472f2406880437c5"
            ]
        ]
    },
    {
        "id": "bbb59e0bf8e37611",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Isla_Lola\":{\"codigo_centro\":\"103\",\"Modulo100\":{\"id\":\"bbca809d-850f-4bb0-4715-20cabb701093\",\"name\":\"100\",\"vertices\":[{\"latitude\":-44.982451993748775,\"longitude\":-73.49412300231052},{\"latitude\":-44.980790008963524,\"longitude\":-73.49117000674595},{\"latitude\":-44.98020300071333,\"longitude\":-73.49183398182502},{\"latitude\":-44.98186597427821,\"longitude\":-73.49481298486353},{\"latitude\":-44.982451993748775,\"longitude\":-73.49412300231052}]},\"INTERIOR\":{\"id\":\"ba8d7374-de08-45b9-67ba-1044a0d1af72\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-44.98206127165258,\"longitude\":-73.4920597074597},{\"latitude\":-44.981617324573605,\"longitude\":-73.49237203583469},{\"latitude\":-44.98081627207589,\"longitude\":-73.49101901036191},{\"latitude\":-44.98011217969435,\"longitude\":-73.49182963338535},{\"latitude\":-44.98186817823122,\"longitude\":-73.49493920797613},{\"latitude\":-44.98258911296385,\"longitude\":-73.49410474285831},{\"latitude\":-44.981672133078135,\"longitude\":-73.49245548226462},{\"latitude\":-44.98210343169214,\"longitude\":-73.49210858345032},{\"latitude\":-44.982579328626564,\"longitude\":-73.4928209702231},{\"latitude\":-44.98318070129782,\"longitude\":-73.49431959830329},{\"latitude\":-44.98231633948199,\"longitude\":-73.49612712845554},{\"latitude\":-44.98058522948806,\"longitude\":-73.49524497898527},{\"latitude\":-44.97960539668669,\"longitude\":-73.4933733929938},{\"latitude\":-44.97936507349425,\"longitude\":-73.49104881228412},{\"latitude\":-44.98054467482669,\"longitude\":-73.48994991535588},{\"latitude\":-44.981478620319734,\"longitude\":-73.49100627872106},{\"latitude\":-44.98206127165258,\"longitude\":-73.4920597074597}]},\"EXTERIOR\":{\"id\":\"a80b5ad3-a43a-40df-5bf8-1e16fb05ac69\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-44.98206127165258,\"longitude\":-73.4920597074597},{\"latitude\":-44.981478620319734,\"longitude\":-73.49100627872106},{\"latitude\":-44.98054467482669,\"longitude\":-73.48994991535588},{\"latitude\":-44.97936507349425,\"longitude\":-73.49104881228412},{\"latitude\":-44.97960539668669,\"longitude\":-73.4933733929938},{\"latitude\":-44.98058522948806,\"longitude\":-73.49524497898527},{\"latitude\":-44.98231633948199,\"longitude\":-73.49612712845554},{\"latitude\":-44.98318070129782,\"longitude\":-73.49431959830329},{\"latitude\":-44.982579328626564,\"longitude\":-73.4928209702231},{\"latitude\":-44.98210343169214,\"longitude\":-73.49210858345032},{\"latitude\":-44.98287707404614,\"longitude\":-73.4928530966777},{\"latitude\":-44.98366926684781,\"longitude\":-73.4947628607152},{\"latitude\":-44.983068466149035,\"longitude\":-73.49747419328196},{\"latitude\":-44.98123872323872,\"longitude\":-73.49710464466625},{\"latitude\":-44.980046568640226,\"longitude\":-73.49604751191673},{\"latitude\":-44.97877227256624,\"longitude\":-73.49388360926241},{\"latitude\":-44.97840124150522,\"longitude\":-73.49040269786201},{\"latitude\":-44.980448948238546,\"longitude\":-73.48917093424478},{\"latitude\":-44.981410856640835,\"longitude\":-73.49039580446279},{\"latitude\":-44.98206127165258,\"longitude\":-73.4920597074597}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 440,
        "wires": [
            [
                "b1de1726246c6c02"
            ]
        ]
    },
    {
        "id": "b1de1726246c6c02",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 440,
        "wires": [
            [
                "6470dbc95a09982e"
            ]
        ]
    },
    {
        "id": "cf887a53eaa8df65",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 440,
        "wires": []
    },
    {
        "id": "d6480c4c96029d27",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT ISLA-LOLA",
        "info": "",
        "x": 150,
        "y": 400,
        "wires": []
    },
    {
        "id": "a16edfa48e680e50",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "8011183b04709ce1",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 720,
        "y": 440,
        "wires": [
            [
                "cf887a53eaa8df65"
            ]
        ]
    },
    {
        "id": "6470dbc95a09982e",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "103",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Isla_Lola;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Isla_Lola\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 440,
        "wires": [
            [
                "a16edfa48e680e50"
            ]
        ]
    },
    {
        "id": "80b43a8f9ac944a9",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Betecoi\":{\"codigo_centro\":\"104\",\"Modulo100\":{\"id\":\"73a6080d-47ba-4aa1-72e4-b3fe09deb827\",\"name\":\"100\",\"vertices\":[{\"latitude\":-43.994055927978906,\"longitude\":-73.83591398130761},{\"latitude\":-43.99483604929926,\"longitude\":-73.83582963142374},{\"latitude\":-43.99478893295012,\"longitude\":-73.83902976599643},{\"latitude\":-43.99408764598387,\"longitude\":-73.83905336726457},{\"latitude\":-43.994055927978906,\"longitude\":-73.83591398130761}]},\"INTERIOR\":{\"id\":\"2a3120cb-89f6-47e4-49b9-356d56db95dd\",\"name\":\"INTERIOR\",\"vertices\":[{\"latitude\":-43.99359336066319,\"longitude\":-73.83518934198946},{\"latitude\":-43.99398490644496,\"longitude\":-73.83579107893378},{\"latitude\":-43.99398750378016,\"longitude\":-73.83910695709346},{\"latitude\":-43.99483938709473,\"longitude\":-73.83910298322007},{\"latitude\":-43.99487233304081,\"longitude\":-73.83572403804106},{\"latitude\":-43.99398490644496,\"longitude\":-73.83579107893378},{\"latitude\":-43.99359336066319,\"longitude\":-73.83518934198946},{\"latitude\":-43.99359336066319,\"longitude\":-73.83518934198946},{\"latitude\":-43.993775182896236,\"longitude\":-73.83466672623803},{\"latitude\":-43.99515475612041,\"longitude\":-73.83498683266995},{\"latitude\":-43.99556440715295,\"longitude\":-73.8352894775744},{\"latitude\":-43.99571305523013,\"longitude\":-73.83599678643805},{\"latitude\":-43.995913156907946,\"longitude\":-73.83736371964915},{\"latitude\":-43.99597032953317,\"longitude\":-73.83792797692877},{\"latitude\":-43.99586255983416,\"longitude\":-73.83872349942976},{\"latitude\":-43.99578737877577,\"longitude\":-73.83921543725592},{\"latitude\":-43.995512952406465,\"longitude\":-73.83973995809355},{\"latitude\":-43.99516991742459,\"longitude\":-73.84004195511807},{\"latitude\":-43.994729686575155,\"longitude\":-73.84016911153594},{\"latitude\":-43.99426086546217,\"longitude\":-73.84024858441988},{\"latitude\":-43.99357620835925,\"longitude\":-73.83983850439108},{\"latitude\":-43.99276290020131,\"longitude\":-73.83846044518576},{\"latitude\":-43.99270658260844,\"longitude\":-73.83770624743192},{\"latitude\":-43.99266570264185,\"longitude\":-73.83640209794974},{\"latitude\":-43.993031621898666,\"longitude\":-73.83496363894665},{\"latitude\":-43.99349473508343,\"longitude\":-73.83519411050656},{\"latitude\":-43.99359336066319,\"longitude\":-73.83518934198946}]},\"EXTERIOR\":{\"id\":\"ff9c2731-34af-469b-5568-6a2dcf29d7fa\",\"name\":\"EXTERIOR\",\"vertices\":[{\"latitude\":-43.99359621941929,\"longitude\":-73.83519132859874},{\"latitude\":-43.99349473508343,\"longitude\":-73.83519411050656},{\"latitude\":-43.993034480681835,\"longitude\":-73.83496562555592},{\"latitude\":-43.99266485184528,\"longitude\":-73.83639956411781},{\"latitude\":-43.992705181386405,\"longitude\":-73.83757233114211},{\"latitude\":-43.99276290020131,\"longitude\":-73.83846044518576},{\"latitude\":-43.99357906711617,\"longitude\":-73.83984049100037},{\"latitude\":-43.994263724186105,\"longitude\":-73.84025057102916},{\"latitude\":-43.99475404012921,\"longitude\":-73.84016488958677},{\"latitude\":-43.99517277610474,\"longitude\":-73.84004394172734},{\"latitude\":-43.995515811070085,\"longitude\":-73.83974194470282},{\"latitude\":-43.99579023742618,\"longitude\":-73.8392174238652},{\"latitude\":-43.99597318817476,\"longitude\":-73.83792996353806},{\"latitude\":-43.99571305523013,\"longitude\":-73.83599678643805},{\"latitude\":-43.99556440715295,\"longitude\":-73.8352894775744},{\"latitude\":-43.99515475612041,\"longitude\":-73.83498683266995},{\"latitude\":-43.993775182896236,\"longitude\":-73.83466672623803},{\"latitude\":-43.99359621941929,\"longitude\":-73.83519132859874},{\"latitude\":-43.993531898728186,\"longitude\":-73.83431315332929},{\"latitude\":-43.99526568154478,\"longitude\":-73.8344232235977},{\"latitude\":-43.995988338513605,\"longitude\":-73.8349604603718},{\"latitude\":-43.99654233092689,\"longitude\":-73.83778691277257},{\"latitude\":-43.99641483869712,\"longitude\":-73.83946061119786},{\"latitude\":-43.996003203019896,\"longitude\":-73.8403427600133},{\"latitude\":-43.99541375823615,\"longitude\":-73.84095152192458},{\"latitude\":-43.99421312535262,\"longitude\":-73.84109457318118},{\"latitude\":-43.993235449388976,\"longitude\":-73.8408084709954},{\"latitude\":-43.99272087660114,\"longitude\":-73.84024421338836},{\"latitude\":-43.992354955487244,\"longitude\":-73.8392674919851},{\"latitude\":-43.99208680242103,\"longitude\":-73.83631467781014},{\"latitude\":-43.992412702525876,\"longitude\":-73.83467753692456},{\"latitude\":-43.99305877992089,\"longitude\":-73.83478085108436},{\"latitude\":-43.99359621941929,\"longitude\":-73.83519132859874}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "7a7ce83aafcaafaf"
            ]
        ]
    },
    {
        "id": "7a7ce83aafcaafaf",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 520,
        "wires": [
            [
                "d866dbef236ff5a4"
            ]
        ]
    },
    {
        "id": "bf121dfe3e903ab9",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 520,
        "wires": []
    },
    {
        "id": "9c7e0d96fa1bd927",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT BETECOI",
        "info": "",
        "x": 150,
        "y": 480,
        "wires": []
    },
    {
        "id": "37c355379d7e8be7",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "8011183b04709ce1",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 720,
        "y": 520,
        "wires": [
            [
                "bf121dfe3e903ab9"
            ]
        ]
    },
    {
        "id": "d866dbef236ff5a4",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "104",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Betecoi;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Betecoi\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 520,
        "wires": [
            [
                "37c355379d7e8be7"
            ]
        ]
    },
    {
        "id": "45dcb2e7c1e0e44d",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Laurel_Oeste\":{\"codigo_centro\":\"105\",\"Modulo100\":{\"id\":\"788e5ae9-e599-450a-7333-a238f93e597a\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-44.0122816406434,\"longitude\":-73.76378629743631},{\"latitude\":-44.01257230798898,\"longitude\":-73.76167595386504},{\"latitude\":-44.01330249825437,\"longitude\":-73.76184047177276},{\"latitude\":-44.0130191937895,\"longitude\":-73.76402825117111},{\"latitude\":-44.0122816406434,\"longitude\":-73.76378629743631}]},\"Modulo200\":{\"id\":\"b987898d-7724-4458-6660-35a68fdad31d\",\"name\":\"Modulo 200\",\"vertices\":[{\"latitude\":-44.01528027549246,\"longitude\":-73.76432258415764},{\"latitude\":-44.01539518740858,\"longitude\":-73.76320838939137},{\"latitude\":-44.01619889824575,\"longitude\":-73.76339614402241},{\"latitude\":-44.016067501929136,\"longitude\":-73.76448816584686},{\"latitude\":-44.01528027549246,\"longitude\":-73.76432258415764}]},\"INTERIOR\":{\"id\":\"ebe0fc31-e41f-45b8-6052-8964d7f183c1\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-44.014601332918964,\"longitude\":-73.76268678384068},{\"latitude\":-44.01422178133902,\"longitude\":-73.76213780668289},{\"latitude\":-44.013876787201006,\"longitude\":-73.76143991947174},{\"latitude\":-44.01284285113772,\"longitude\":-73.76106441020967},{\"latitude\":-44.011862910021556,\"longitude\":-73.76128435134888},{\"latitude\":-44.01106841277813,\"longitude\":-73.7618507274496},{\"latitude\":-44.01052414539729,\"longitude\":-73.76325845718382},{\"latitude\":-44.01077106679393,\"longitude\":-73.76459419727324},{\"latitude\":-44.01151471838367,\"longitude\":-73.76542836427687},{\"latitude\":-44.01249707651975,\"longitude\":-73.76564294099808},{\"latitude\":-44.01354596820158,\"longitude\":-73.76525402069092},{\"latitude\":-44.014016637243444,\"longitude\":-73.76549273729326},{\"latitude\":-44.01431564953867,\"longitude\":-73.76580414464027},{\"latitude\":-44.01477752301655,\"longitude\":-73.76688858365468},{\"latitude\":-44.01574919542873,\"longitude\":-73.76775082014716},{\"latitude\":-44.016645270439646,\"longitude\":-73.76770678508976},{\"latitude\":-44.01742580650405,\"longitude\":-73.76676484708553},{\"latitude\":-44.017689887786396,\"longitude\":-73.76533804479466},{\"latitude\":-44.017376937893935,\"longitude\":-73.76429323486347},{\"latitude\":-44.016845410694565,\"longitude\":-73.76327059062918},{\"latitude\":-44.0162356034244,\"longitude\":-73.76275269201354},{\"latitude\":-44.015521837293626,\"longitude\":-73.76262602543497},{\"latitude\":-44.0149972243632,\"longitude\":-73.76269319360196},{\"latitude\":-44.014650206039555,\"longitude\":-73.76272004595211},{\"latitude\":-44.01484192102,\"longitude\":-73.76284311003872},{\"latitude\":-44.01541759183408,\"longitude\":-73.76293562957596},{\"latitude\":-44.016404756564164,\"longitude\":-73.76316333155661},{\"latitude\":-44.016231369382936,\"longitude\":-73.76480800771117},{\"latitude\":-44.015037304802505,\"longitude\":-73.76454322712259},{\"latitude\":-44.01513799944455,\"longitude\":-73.76328473682383},{\"latitude\":-44.01503917780895,\"longitude\":-73.7631964223948},{\"latitude\":-44.01463696504529,\"longitude\":-73.76272538454238},{\"latitude\":-44.01460109925671,\"longitude\":-73.76269847192992},{\"latitude\":-44.01344828217031,\"longitude\":-73.76254119556776},{\"latitude\":-44.01318883033919,\"longitude\":-73.7643524921162},{\"latitude\":-44.01203306654661,\"longitude\":-73.76404748996886},{\"latitude\":-44.01241148093217,\"longitude\":-73.76138605927781},{\"latitude\":-44.013554897874876,\"longitude\":-73.76166270762755},{\"latitude\":-44.01351001540055,\"longitude\":-73.7620824530808},{\"latitude\":-44.014601332918964,\"longitude\":-73.76268678384068}]},\"EXTERIOR\":{\"id\":\"9e871b7b-9e48-4e34-4900-7d0fdbb94043\",\"name\":\"Clasificacion de botes\",\"vertices\":[{\"latitude\":-44.011990877234275,\"longitude\":-73.75924420983617},{\"latitude\":-44.01121016168384,\"longitude\":-73.75796988661061},{\"latitude\":-44.01066704915253,\"longitude\":-73.75962178708818},{\"latitude\":-44.00873217034061,\"longitude\":-73.7600937586532},{\"latitude\":-44.00818903511784,\"longitude\":-73.75938580130567},{\"latitude\":-44.00730642977341,\"longitude\":-73.75910261836667},{\"latitude\":-44.004896171357174,\"longitude\":-73.76316157382584},{\"latitude\":-44.00537144133167,\"longitude\":-73.76674855771999},{\"latitude\":-44.00764589492164,\"longitude\":-73.77160986483969},{\"latitude\":-44.01222848427492,\"longitude\":-73.77274259659575},{\"latitude\":-44.018236231656424,\"longitude\":-73.77330896247378},{\"latitude\":-44.02064594798189,\"longitude\":-73.77099630180517},{\"latitude\":-44.022682251623735,\"longitude\":-73.76783409231953},{\"latitude\":-44.02298769113764,\"longitude\":-73.76405831979937},{\"latitude\":-44.02302162876427,\"longitude\":-73.76184005344378},{\"latitude\":-44.02006898256782,\"longitude\":-73.76080171600073},{\"latitude\":-44.01643736548913,\"longitude\":-73.76094330747024},{\"latitude\":-44.01537171885035,\"longitude\":-73.76319408416748},{\"latitude\":-44.016235868601896,\"longitude\":-73.7633228302002},{\"latitude\":-44.016112419408394,\"longitude\":-73.76461029052734},{\"latitude\":-44.01523283646571,\"longitude\":-73.76439571380615},{\"latitude\":-44.01521740506956,\"longitude\":-73.76308679580688},{\"latitude\":-44.013072401932426,\"longitude\":-73.76409530639648},{\"latitude\":-44.01214647732432,\"longitude\":-73.76379489898682},{\"latitude\":-44.01245512046661,\"longitude\":-73.76149892807007},{\"latitude\":-44.013458199585855,\"longitude\":-73.76171350479126},{\"latitude\":-44.013103265837074,\"longitude\":-73.76405239105225},{\"latitude\":-44.015186542265205,\"longitude\":-73.76308679580688},{\"latitude\":-44.01543344425024,\"longitude\":-73.76197099685669},{\"latitude\":-44.01461893530339,\"longitude\":-73.76115183018555},{\"latitude\":-44.01421285553684,\"longitude\":-73.76154681034677},{\"latitude\":-44.013914223704184,\"longitude\":-73.76067558878276},{\"latitude\":-44.01317978257061,\"longitude\":-73.76021643467539},{\"latitude\":-44.01222456715575,\"longitude\":-73.75956734009377},{\"latitude\":-44.011990877234275,\"longitude\":-73.75924420983617}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 600,
        "wires": [
            [
                "e409babc9fa60aed"
            ]
        ]
    },
    {
        "id": "e409babc9fa60aed",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 600,
        "wires": [
            [
                "d618d07ab3c6bacd"
            ]
        ]
    },
    {
        "id": "f63bdce2535e8d12",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 600,
        "wires": []
    },
    {
        "id": "8cf10c9e52725933",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT LAUREL-OESTE",
        "info": "",
        "x": 170,
        "y": 560,
        "wires": []
    },
    {
        "id": "f7029a81c99d8382",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "8011183b04709ce1",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 720,
        "y": 600,
        "wires": [
            [
                "f63bdce2535e8d12"
            ]
        ]
    },
    {
        "id": "d618d07ab3c6bacd",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "105",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Laurel_Oeste;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Laurel_Oeste\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de Modulo200 al objeto de resultados\nresultados[\"coord_m_200\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 600,
        "wires": [
            [
                "f7029a81c99d8382"
            ]
        ]
    },
    {
        "id": "5ba291833a76dbce",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Leucayec\":{\"codigo_centro\":\"106\",\"Modulo100\":{\"id\":\"1750cee8-b7bc-444b-703e-56ab480622e1\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-44.03540664253039,\"longitude\":-73.74857391540672},{\"latitude\":-44.0357664129359,\"longitude\":-73.74761740676547},{\"latitude\":-44.037475225030974,\"longitude\":-73.7488605951222},{\"latitude\":-44.03711559666922,\"longitude\":-73.74980740559351},{\"latitude\":-44.03540664253039,\"longitude\":-73.74857391540672}]},\"INTERIOR\":{\"id\":\"1c073df0-def2-48ce-67db-f94f59821dec\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-44.03525983187906,\"longitude\":-73.74789555826281},{\"latitude\":-44.03555757060718,\"longitude\":-73.74805231851497},{\"latitude\":-44.035751825016405,\"longitude\":-73.74754766606202},{\"latitude\":-44.03753193628542,\"longitude\":-73.7488345301608},{\"latitude\":-44.037134868763665,\"longitude\":-73.74987959861755},{\"latitude\":-44.035379741685546,\"longitude\":-73.74860842995986},{\"latitude\":-44.03555757060718,\"longitude\":-73.74805231851497},{\"latitude\":-44.03525983187906,\"longitude\":-73.74789555826281},{\"latitude\":-44.03449952704601,\"longitude\":-73.7492847819611},{\"latitude\":-44.03463760667513,\"longitude\":-73.75130133302675},{\"latitude\":-44.03530459744452,\"longitude\":-73.75250803472004},{\"latitude\":-44.0365919425087,\"longitude\":-73.7531218005317},{\"latitude\":-44.037652614060356,\"longitude\":-73.75245521018357},{\"latitude\":-44.03857174599671,\"longitude\":-73.75089842924312},{\"latitude\":-44.03920755746314,\"longitude\":-73.74927709637873},{\"latitude\":-44.03943727189925,\"longitude\":-73.74755476272578},{\"latitude\":-44.03867105700964,\"longitude\":-73.74620928178501},{\"latitude\":-44.037504294652344,\"longitude\":-73.74572409622246},{\"latitude\":-44.03646941779992,\"longitude\":-73.74616682511258},{\"latitude\":-44.03561423014968,\"longitude\":-73.74694495231135},{\"latitude\":-44.03525983187906,\"longitude\":-73.74789555826281}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 680,
        "wires": [
            [
                "1e26ec0a4d6eb830"
            ]
        ]
    },
    {
        "id": "1e26ec0a4d6eb830",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 680,
        "wires": [
            [
                "e8b1c2155a37dd45"
            ]
        ]
    },
    {
        "id": "e9cc1c96d15a5e44",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 680,
        "wires": []
    },
    {
        "id": "251219c15a7dd47a",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT LEUCAYEC",
        "info": "",
        "x": 150,
        "y": 640,
        "wires": []
    },
    {
        "id": "2e2f0929aba4410f",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "8011183b04709ce1",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 720,
        "y": 680,
        "wires": [
            [
                "e9cc1c96d15a5e44"
            ]
        ]
    },
    {
        "id": "e8b1c2155a37dd45",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "106",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Leucayec;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Leucayec\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 680,
        "wires": [
            [
                "2e2f0929aba4410f"
            ]
        ]
    },
    {
        "id": "23a1eda00c9ed548",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "GMT",
        "info": "",
        "x": 530,
        "y": 40,
        "wires": []
    },
    {
        "id": "45df0d4c4f2b40fc",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "AST",
        "info": "",
        "x": 530,
        "y": 200,
        "wires": []
    },
    {
        "id": "f5d7849cea03d04b",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "MOWI",
        "info": "",
        "x": 530,
        "y": 360,
        "wires": []
    },
    {
        "id": "8ec82bb6bb811609",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "SALMONES-AUSTRAL",
        "info": "",
        "x": 540,
        "y": 1280,
        "wires": []
    },
    {
        "id": "f47eef7c55e471fb",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "AQUACHILE",
        "info": "",
        "x": 530,
        "y": 2620,
        "wires": []
    },
    {
        "id": "5baecb50297c59a3",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"AmparoGrande\":{\"codigo_centro\":\"118\",\"Modulo100\":{\"id\":\"abf76d76-ca23-4375-442f-1acf321ccb10\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-44.77387025285955,\"longitude\":-72.91302233983107,\"altitude\":0},{\"latitude\":-44.774296491585645,\"longitude\":-72.91256428000435,\"altitude\":0},{\"latitude\":-44.77325945167511,\"longitude\":-72.91070109070911,\"altitude\":0},{\"latitude\":-44.772838907176954,\"longitude\":-72.91117176605164,\"altitude\":0},{\"latitude\":-44.77387025285955,\"longitude\":-72.91302233983107,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"375b49b7-4590-4179-7636-5d04ad56541e\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-44.774339757214385,\"longitude\":-72.91333834715363,\"altitude\":0},{\"latitude\":-44.773830556390905,\"longitude\":-72.913106422965,\"altitude\":0},{\"latitude\":-44.77275106349855,\"longitude\":-72.91117048052992,\"altitude\":0},{\"latitude\":-44.773278542454044,\"longitude\":-72.91058928796123,\"altitude\":0},{\"latitude\":-44.77434856025964,\"longitude\":-72.9125237511652,\"altitude\":0},{\"latitude\":-44.7743844768171,\"longitude\":-72.91329836388967,\"altitude\":0},{\"latitude\":-44.77487737551292,\"longitude\":-72.91226473205292,\"altitude\":0},{\"latitude\":-44.773754562233655,\"longitude\":-72.90969099890636,\"altitude\":0},{\"latitude\":-44.773091806706965,\"longitude\":-72.90952186836283,\"altitude\":0},{\"latitude\":-44.772027063161524,\"longitude\":-72.9107144465146,\"altitude\":0},{\"latitude\":-44.771901464298836,\"longitude\":-72.91170057028641,\"altitude\":0},{\"latitude\":-44.773423343391165,\"longitude\":-72.9136904242991,\"altitude\":0},{\"latitude\":-44.774339757214385,\"longitude\":-72.91333834715363,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"30e955bf-3dad-482b-63c3-1a78e1f6ca99\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-44.774339757214385,\"longitude\":-72.91333834715363,\"altitude\":0},{\"latitude\":-44.77348522807694,\"longitude\":-72.91413467151769,\"altitude\":0},{\"latitude\":-44.771276479092926,\"longitude\":-72.91233582279585,\"altitude\":0},{\"latitude\":-44.771034401041966,\"longitude\":-72.91017625882513,\"altitude\":0},{\"latitude\":-44.772698042532696,\"longitude\":-72.9082764808395,\"altitude\":0},{\"latitude\":-44.774222650751994,\"longitude\":-72.9090745443905,\"altitude\":0},{\"latitude\":-44.77513210911512,\"longitude\":-72.91217222995012,\"altitude\":0},{\"latitude\":-44.7743844768171,\"longitude\":-72.91329836388967,\"altitude\":0},{\"latitude\":-44.77487737551292,\"longitude\":-72.91226473205292,\"altitude\":0},{\"latitude\":-44.773754562233655,\"longitude\":-72.90969099890636,\"altitude\":0},{\"latitude\":-44.773091806706965,\"longitude\":-72.90952186836283,\"altitude\":0},{\"latitude\":-44.772027063161524,\"longitude\":-72.9107144465146,\"altitude\":0},{\"latitude\":-44.771901464298836,\"longitude\":-72.91170057028641,\"altitude\":0},{\"latitude\":-44.773423343391165,\"longitude\":-72.9136904242991,\"altitude\":0},{\"latitude\":-44.774339757214385,\"longitude\":-72.91333834715363,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"ab3ee495-3bb7-45f7-5fcd-c09bdf7dfca1\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-44.77445097416754,\"longitude\":-72.9133879970997,\"altitude\":0},{\"latitude\":-44.773491418187255,\"longitude\":-72.91433078594343,\"altitude\":0},{\"latitude\":-44.77255425238904,\"longitude\":-72.9136134892259,\"altitude\":0},{\"latitude\":-44.77102914606145,\"longitude\":-72.9120677912755,\"altitude\":0},{\"latitude\":-44.77106929819507,\"longitude\":-72.91020289694102,\"altitude\":0},{\"latitude\":-44.77242999635889,\"longitude\":-72.90807949683521,\"altitude\":0},{\"latitude\":-44.77301853195304,\"longitude\":-72.90806579707687,\"altitude\":0},{\"latitude\":-44.7738707006487,\"longitude\":-72.90875597828486,\"altitude\":0},{\"latitude\":-44.774357198670565,\"longitude\":-72.90895133541787,\"altitude\":0},{\"latitude\":-44.77520286472825,\"longitude\":-72.91206504683484,\"altitude\":0},{\"latitude\":-44.77445097416754,\"longitude\":-72.9133879970997,\"altitude\":0},{\"latitude\":-44.774290899296446,\"longitude\":-72.91254239528766,\"altitude\":0},{\"latitude\":-44.773270411562414,\"longitude\":-72.91066328014979,\"altitude\":0},{\"latitude\":-44.772810185703925,\"longitude\":-72.9111800368127,\"altitude\":0},{\"latitude\":-44.77384402126625,\"longitude\":-72.9130309652235,\"altitude\":0},{\"latitude\":-44.77430605727915,\"longitude\":-72.91257128420412,\"altitude\":0},{\"latitude\":-44.77445097416754,\"longitude\":-72.9133879970997,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 2700,
        "wires": [
            [
                "5f25ad5b51702acc"
            ]
        ]
    },
    {
        "id": "5f25ad5b51702acc",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 2700,
        "wires": [
            [
                "431636a15c3f8214"
            ]
        ]
    },
    {
        "id": "5d32e0dbb2c84a12",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2700,
        "wires": []
    },
    {
        "id": "efcf037b72d250e9",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT AMPARO GRANDE",
        "info": "",
        "x": 180,
        "y": 2660,
        "wires": []
    },
    {
        "id": "e12b628bfb199865",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 2700,
        "wires": [
            [
                "5d32e0dbb2c84a12"
            ]
        ]
    },
    {
        "id": "431636a15c3f8214",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "118",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.AmparoGrande;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"AmparoGrande\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2700,
        "wires": [
            [
                "e12b628bfb199865"
            ]
        ]
    },
    {
        "id": "92a84c856782307f",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Angostura\":{\"codigo_centro\":\"119\",\"Modulo100\":{\"id\":\"d6fd449c-5f8d-4d86-6c71-946af104099f\",\"name\":\"Mod100\",\"vertices\":[{\"latitude\":-44.62955531270538,\"longitude\":-72.88713291226225,\"altitude\":0},{\"latitude\":-44.63010282903943,\"longitude\":-72.88734699330223,\"altitude\":0},{\"latitude\":-44.63073270146906,\"longitude\":-72.88435401355848,\"altitude\":0},{\"latitude\":-44.63016774572748,\"longitude\":-72.88413791759328,\"altitude\":0},{\"latitude\":-44.62955531270538,\"longitude\":-72.88713291226225,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"72b15177-6a01-48c0-69ad-921f55454151\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-44.629546181347195,\"longitude\":-72.8873546455256,\"altitude\":0},{\"latitude\":-44.630093377180025,\"longitude\":-72.8875609564883,\"altitude\":0},{\"latitude\":-44.63022494783579,\"longitude\":-72.8874993322097,\"altitude\":0},{\"latitude\":-44.63088899568977,\"longitude\":-72.88430245640171,\"altitude\":0},{\"latitude\":-44.63082515565758,\"longitude\":-72.88409794764911,\"altitude\":0},{\"latitude\":-44.63025464038543,\"longitude\":-72.88389921115593,\"altitude\":0},{\"latitude\":-44.63001928770095,\"longitude\":-72.88398306234883,\"altitude\":0},{\"latitude\":-44.6294706289545,\"longitude\":-72.88676669654038,\"altitude\":0},{\"latitude\":-44.62921948762913,\"longitude\":-72.88652488823816,\"altitude\":0},{\"latitude\":-44.62928922723485,\"longitude\":-72.88619658471701,\"altitude\":0},{\"latitude\":-44.62915750953772,\"longitude\":-72.88358762466686,\"altitude\":0},{\"latitude\":-44.62963045683327,\"longitude\":-72.88166999816895,\"altitude\":0},{\"latitude\":-44.63054105434553,\"longitude\":-72.88090653363189,\"altitude\":0},{\"latitude\":-44.63172366084602,\"longitude\":-72.88153148184374,\"altitude\":0},{\"latitude\":-44.632279578652366,\"longitude\":-72.88263934458291,\"altitude\":0},{\"latitude\":-44.6320369969917,\"longitude\":-72.88442896900773,\"altitude\":0},{\"latitude\":-44.63160043494773,\"longitude\":-72.88580926716186,\"altitude\":0},{\"latitude\":-44.63184552144205,\"longitude\":-72.88800733104357,\"altitude\":0},{\"latitude\":-44.63129913820811,\"longitude\":-72.88914448733344,\"altitude\":0},{\"latitude\":-44.63065309565502,\"longitude\":-72.88959655564996,\"altitude\":0},{\"latitude\":-44.62948523222013,\"longitude\":-72.88868102408324,\"altitude\":0},{\"latitude\":-44.62912109135628,\"longitude\":-72.88736247181609,\"altitude\":0},{\"latitude\":-44.62921758278929,\"longitude\":-72.88653291799429,\"altitude\":0},{\"latitude\":-44.629546181347195,\"longitude\":-72.8873546455256,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"4f39df0d-c1d2-40b7-7781-5f21cc4998c7\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-44.62921758278929,\"longitude\":-72.88653291799429,\"altitude\":0},{\"latitude\":-44.629124049453736,\"longitude\":-72.88736708499792,\"altitude\":0},{\"latitude\":-44.62948523222013,\"longitude\":-72.88868102408324,\"altitude\":0},{\"latitude\":-44.63065309565502,\"longitude\":-72.88959655564996,\"altitude\":0},{\"latitude\":-44.63129913820811,\"longitude\":-72.88914448733344,\"altitude\":0},{\"latitude\":-44.63184552144205,\"longitude\":-72.88800733104357,\"altitude\":0},{\"latitude\":-44.631603554730106,\"longitude\":-72.88578968555566,\"altitude\":0},{\"latitude\":-44.6320369969917,\"longitude\":-72.88442896900773,\"altitude\":0},{\"latitude\":-44.632279578652366,\"longitude\":-72.88263934458291,\"altitude\":0},{\"latitude\":-44.63172366084602,\"longitude\":-72.88153148184374,\"altitude\":0},{\"latitude\":-44.63054105434553,\"longitude\":-72.88090653363189,\"altitude\":0},{\"latitude\":-44.62963531973095,\"longitude\":-72.88166658159464,\"altitude\":0},{\"latitude\":-44.62916237247504,\"longitude\":-72.88358420809256,\"altitude\":0},{\"latitude\":-44.62929409016113,\"longitude\":-72.88619316814271,\"altitude\":0},{\"latitude\":-44.62921948762913,\"longitude\":-72.88652488823816,\"altitude\":0},{\"latitude\":-44.629225489400234,\"longitude\":-72.88618947279384,\"altitude\":0},{\"latitude\":-44.62852948099321,\"longitude\":-72.8837356181059,\"altitude\":0},{\"latitude\":-44.628634640177225,\"longitude\":-72.88152926545236,\"altitude\":0},{\"latitude\":-44.629619385540806,\"longitude\":-72.87977656283785,\"altitude\":0},{\"latitude\":-44.63124530325071,\"longitude\":-72.87907361984252,\"altitude\":0},{\"latitude\":-44.632913905981425,\"longitude\":-72.88016605230773,\"altitude\":0},{\"latitude\":-44.63366429621812,\"longitude\":-72.88259673447756,\"altitude\":0},{\"latitude\":-44.63341161299541,\"longitude\":-72.88459940942914,\"altitude\":0},{\"latitude\":-44.632531615913386,\"longitude\":-72.8855519182918,\"altitude\":0},{\"latitude\":-44.63290402905008,\"longitude\":-72.88767314418105,\"altitude\":0},{\"latitude\":-44.63235168421859,\"longitude\":-72.88994885311973,\"altitude\":0},{\"latitude\":-44.63044411129299,\"longitude\":-72.89115123189534,\"altitude\":0},{\"latitude\":-44.62922706976309,\"longitude\":-72.8902011519676,\"altitude\":0},{\"latitude\":-44.62877147766733,\"longitude\":-72.8883647918701,\"altitude\":0},{\"latitude\":-44.62887751394845,\"longitude\":-72.8871034023969,\"altitude\":0},{\"latitude\":-44.62921758278929,\"longitude\":-72.88653291799429,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"50d50de5-0a71-4753-7284-95e70ee5aa06\",\"name\":\"ActiveTracking\",\"vertices\":[{\"latitude\":-44.6292700357465,\"longitude\":-72.88651280819573,\"altitude\":0},{\"latitude\":-44.62880198585073,\"longitude\":-72.88721663920852,\"altitude\":0},{\"latitude\":-44.628596699618015,\"longitude\":-72.89052810643257,\"altitude\":0},{\"latitude\":-44.62949995361113,\"longitude\":-72.89213191808464,\"altitude\":0},{\"latitude\":-44.63147885186211,\"longitude\":-72.8936318858168,\"altitude\":0},{\"latitude\":-44.63326062367995,\"longitude\":-72.89202807416473,\"altitude\":0},{\"latitude\":-44.633917484282,\"longitude\":-72.8877358588081,\"altitude\":0},{\"latitude\":-44.6346810753867,\"longitude\":-72.88497822582362,\"altitude\":0},{\"latitude\":-44.63457433744926,\"longitude\":-72.88148214718638,\"altitude\":0},{\"latitude\":-44.6328008168348,\"longitude\":-72.8789668166817,\"altitude\":0},{\"latitude\":-44.631355685890234,\"longitude\":-72.87866682313526,\"altitude\":0},{\"latitude\":-44.63014043428881,\"longitude\":-72.87978602982771,\"altitude\":0},{\"latitude\":-44.629573855588504,\"longitude\":-72.87990141196094,\"altitude\":0},{\"latitude\":-44.62864596838006,\"longitude\":-72.88151676182635,\"altitude\":0},{\"latitude\":-44.62846529623967,\"longitude\":-72.88316130638123,\"altitude\":0},{\"latitude\":-44.62859090892404,\"longitude\":-72.88428526295347,\"altitude\":0},{\"latitude\":-44.62869741397369,\"longitude\":-72.88560748100281,\"altitude\":0},{\"latitude\":-44.62885012253403,\"longitude\":-72.88618254635367,\"altitude\":0},{\"latitude\":-44.6292700357465,\"longitude\":-72.88651280819573,\"altitude\":0},{\"latitude\":-44.62960148641407,\"longitude\":-72.88709937563878,\"altitude\":0},{\"latitude\":-44.63001928770095,\"longitude\":-72.88398306234883,\"altitude\":0},{\"latitude\":-44.63059187553682,\"longitude\":-72.88412498824135,\"altitude\":0},{\"latitude\":-44.63015632980448,\"longitude\":-72.88724717601065,\"altitude\":0},{\"latitude\":-44.629604116016104,\"longitude\":-72.88710307064807,\"altitude\":0},{\"latitude\":-44.6292700357465,\"longitude\":-72.88651280819573,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 2780,
        "wires": [
            [
                "9aa93d1128df4995"
            ]
        ]
    },
    {
        "id": "9aa93d1128df4995",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 2780,
        "wires": [
            [
                "66eeb0b83166a32e"
            ]
        ]
    },
    {
        "id": "27789580668d7a5f",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2780,
        "wires": []
    },
    {
        "id": "e768bbbaaf6f56a0",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT ANGOSTURA",
        "info": "",
        "x": 160,
        "y": 2740,
        "wires": []
    },
    {
        "id": "25c9c6f38f94006c",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 2780,
        "wires": [
            [
                "27789580668d7a5f"
            ]
        ]
    },
    {
        "id": "66eeb0b83166a32e",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "119",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Angostura;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Angostura\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2780,
        "wires": [
            [
                "25c9c6f38f94006c"
            ]
        ]
    },
    {
        "id": "b595ae088def8f33",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Aysen4\":{\"codigo_centro\":\"120\",\"Modulo100\":{\"id\":\"5df3c5ca-15eb-47ea-671e-6140d106f5a7\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-45.33753700014775,\"longitude\":-73.14676699577831,\"altitude\":0},{\"latitude\":-45.337497001621216,\"longitude\":-73.1459230009932,\"altitude\":0},{\"latitude\":-45.33494000164492,\"longitude\":-73.14598199911414,\"altitude\":0},{\"latitude\":-45.33495700050085,\"longitude\":-73.14677600632422,\"altitude\":0},{\"latitude\":-45.33753700014775,\"longitude\":-73.14676699577831,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"3c9e92ae-70ef-4aad-4b40-58cde9bec7a7\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-45.33614122745425,\"longitude\":-73.14792215824127,\"altitude\":0},{\"latitude\":-45.33627881052104,\"longitude\":-73.14697602645558,\"altitude\":0},{\"latitude\":-45.33757863741287,\"longitude\":-73.14690783463298,\"altitude\":0},{\"latitude\":-45.337661631925535,\"longitude\":-73.14676572119832,\"altitude\":0},{\"latitude\":-45.337637326023874,\"longitude\":-73.1458910434461,\"altitude\":0},{\"latitude\":-45.33748652390129,\"longitude\":-73.14577562913288,\"altitude\":0},{\"latitude\":-45.33492414646691,\"longitude\":-73.1457638659722,\"altitude\":0},{\"latitude\":-45.33480717701259,\"longitude\":-73.1460293431631,\"altitude\":0},{\"latitude\":-45.33481831011578,\"longitude\":-73.14672135899164,\"altitude\":0},{\"latitude\":-45.33494457593407,\"longitude\":-73.14696014201942,\"altitude\":0},{\"latitude\":-45.335982859784814,\"longitude\":-73.14699121361748,\"altitude\":0},{\"latitude\":-45.33614122745425,\"longitude\":-73.14792215824127,\"altitude\":0},{\"latitude\":-45.33475234181705,\"longitude\":-73.14725160598755,\"altitude\":0},{\"latitude\":-45.33448460091055,\"longitude\":-73.14677953720091,\"altitude\":0},{\"latitude\":-45.334514768963295,\"longitude\":-73.14577102661133,\"altitude\":0},{\"latitude\":-45.33477119676275,\"longitude\":-73.14536333084106,\"altitude\":0},{\"latitude\":-45.337591825922296,\"longitude\":-73.14519166946411,\"altitude\":0},{\"latitude\":-45.33796890473509,\"longitude\":-73.1458353996277,\"altitude\":0},{\"latitude\":-45.33796890473509,\"longitude\":-73.14682245254517,\"altitude\":0},{\"latitude\":-45.33748624340474,\"longitude\":-73.14731597900389,\"altitude\":0},{\"latitude\":-45.33748624340474,\"longitude\":-73.14731597900389,\"altitude\":0},{\"latitude\":-45.33614122745425,\"longitude\":-73.14792215824127,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"77e131de-8d26-4c8d-7c01-ef1ae3f3ac30\",\"name\":\"Exterior\",\"vertices\":[{\"latitude\":-45.33614110961371,\"longitude\":-73.14792215824127,\"altitude\":0},{\"latitude\":-45.33475234181705,\"longitude\":-73.14725160598755,\"altitude\":0},{\"latitude\":-45.33448460091055,\"longitude\":-73.14677953720091,\"altitude\":0},{\"latitude\":-45.334514768963295,\"longitude\":-73.14577102661133,\"altitude\":0},{\"latitude\":-45.33477119676275,\"longitude\":-73.14536333084106,\"altitude\":0},{\"latitude\":-45.337591825922296,\"longitude\":-73.14519166946411,\"altitude\":0},{\"latitude\":-45.33796890473509,\"longitude\":-73.1458353996277,\"altitude\":0},{\"latitude\":-45.33796890473509,\"longitude\":-73.14682245254517,\"altitude\":0},{\"latitude\":-45.33748624340474,\"longitude\":-73.14731597900389,\"altitude\":0},{\"latitude\":-45.33614147786539,\"longitude\":-73.14792245160788,\"altitude\":0},{\"latitude\":-45.336141890307275,\"longitude\":-73.14792454708368,\"altitude\":0},{\"latitude\":-45.33614675122929,\"longitude\":-73.14792903140186,\"altitude\":0},{\"latitude\":-45.33639741220885,\"longitude\":-73.14789265394211,\"altitude\":0},{\"latitude\":-45.33664534704069,\"longitude\":-73.14790606498718,\"altitude\":0},{\"latitude\":-45.336833889912405,\"longitude\":-73.14792752265932,\"altitude\":0},{\"latitude\":-45.33754726003762,\"longitude\":-73.14779399601011,\"altitude\":0},{\"latitude\":-45.337995300157964,\"longitude\":-73.1474983692169,\"altitude\":0},{\"latitude\":-45.338534518246014,\"longitude\":-73.14667224884033,\"altitude\":0},{\"latitude\":-45.33844402046394,\"longitude\":-73.14508438110352,\"altitude\":0},{\"latitude\":-45.33761445072187,\"longitude\":-73.14418315887451,\"altitude\":0},{\"latitude\":-45.33693570280209,\"longitude\":-73.1439471244812,\"altitude\":0},{\"latitude\":-45.33545751251329,\"longitude\":-73.1440544128418,\"altitude\":0},{\"latitude\":-45.334552479006625,\"longitude\":-73.14441919326782,\"altitude\":0},{\"latitude\":-45.33406978855562,\"longitude\":-73.14527750015259,\"altitude\":0},{\"latitude\":-45.33404495782995,\"longitude\":-73.14677870608345,\"altitude\":0},{\"latitude\":-45.33439786766938,\"longitude\":-73.1474447250366,\"altitude\":0},{\"latitude\":-45.33475988379609,\"longitude\":-73.14777731895448,\"altitude\":0},{\"latitude\":-45.33555932787767,\"longitude\":-73.1477987766266,\"altitude\":0},{\"latitude\":-45.335791239968714,\"longitude\":-73.147873878479,\"altitude\":0},{\"latitude\":-45.336129207717896,\"longitude\":-73.14793422818184,\"altitude\":0},{\"latitude\":-45.33614110961371,\"longitude\":-73.14792215824127,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"af3a2f73-528e-4b91-5c98-6a5b5b4d32ee\",\"name\":\"Active_Tracking\",\"vertices\":[{\"latitude\":-45.33614217017856,\"longitude\":-73.14792014658451,\"altitude\":0},{\"latitude\":-45.33619001341682,\"longitude\":-73.14682245254517,\"altitude\":0},{\"latitude\":-45.33752937200155,\"longitude\":-73.14682178199293,\"altitude\":0},{\"latitude\":-45.33756802273799,\"longitude\":-73.14673259854315,\"altitude\":0},{\"latitude\":-45.33753785631178,\"longitude\":-73.14594604074954,\"altitude\":0},{\"latitude\":-45.33748459367632,\"longitude\":-73.1458581984043,\"altitude\":0},{\"latitude\":-45.334935705897706,\"longitude\":-73.14592927694322,\"altitude\":0},{\"latitude\":-45.3348885686586,\"longitude\":-73.14602047204971,\"altitude\":0},{\"latitude\":-45.3349055380692,\"longitude\":-73.14674869179724,\"altitude\":0},{\"latitude\":-45.3349385341308,\"longitude\":-73.14682781696318,\"altitude\":0},{\"latitude\":-45.33605473243179,\"longitude\":-73.14682647585867,\"altitude\":0},{\"latitude\":-45.33611223867397,\"longitude\":-73.1479650735855,\"altitude\":0},{\"latitude\":-45.335650103747575,\"longitude\":-73.14855544030979,\"altitude\":0},{\"latitude\":-45.33397616798671,\"longitude\":-73.1485232611431,\"altitude\":0},{\"latitude\":-45.33293558838571,\"longitude\":-73.1471502833645,\"altitude\":0},{\"latitude\":-45.332912966877686,\"longitude\":-73.14497282641874,\"altitude\":0},{\"latitude\":-45.3339083046825,\"longitude\":-73.14367493336239,\"altitude\":0},{\"latitude\":-45.33815337480778,\"longitude\":-73.14336386808442,\"altitude\":0},{\"latitude\":-45.33905814434863,\"longitude\":-73.14455449725182,\"altitude\":0},{\"latitude\":-45.33923909652193,\"longitude\":-73.14731117919793,\"altitude\":0},{\"latitude\":-45.3382513922063,\"longitude\":-73.14866270419876,\"altitude\":0},{\"latitude\":-45.33641919277768,\"longitude\":-73.14863052503208,\"altitude\":0},{\"latitude\":-45.33614217017856,\"longitude\":-73.14792014658451,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 2860,
        "wires": [
            [
                "bcf6ca4a5e83387f"
            ]
        ]
    },
    {
        "id": "bcf6ca4a5e83387f",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 2860,
        "wires": [
            [
                "58122b5f38866960"
            ]
        ]
    },
    {
        "id": "a7a7667d921aca52",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2860,
        "wires": []
    },
    {
        "id": "fcc9076dfc2c166d",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT AYSEN 4",
        "info": "",
        "x": 150,
        "y": 2820,
        "wires": []
    },
    {
        "id": "b655311da8bacb62",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 2860,
        "wires": [
            [
                "a7a7667d921aca52"
            ]
        ]
    },
    {
        "id": "58122b5f38866960",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "120",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Aysen4;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Aysen4\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2860,
        "wires": [
            [
                "b655311da8bacb62"
            ]
        ]
    },
    {
        "id": "e42b1597ac1efc90",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"BrazoGuardramiro\":{\"codigo_centro\":\"121\",\"Modulo100\":{\"id\":\"56205a75-6858-472e-7601-627ec18e7b83\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-52.17931000752808,\"longitude\":-73.07953099894804,\"altitude\":0},{\"latitude\":-52.17655300258155,\"longitude\":-73.07755098911001,\"altitude\":0},{\"latitude\":-52.176732007238435,\"longitude\":-73.0770050076535,\"altitude\":0},{\"latitude\":-52.17945399651899,\"longitude\":-73.07895799109245,\"altitude\":0},{\"latitude\":-52.17931000752808,\"longitude\":-73.07953099894804,\"altitude\":0}]},\"INTERIOR100\":{\"id\":\"55493518-c15c-4baa-5374-89ebff3b5383\",\"name\":\"Zona 2 interior Mod100\",\"vertices\":[{\"latitude\":-52.179205557326185,\"longitude\":-73.07965363560305,\"altitude\":0},{\"latitude\":-52.176478038102374,\"longitude\":-73.07768409899444,\"altitude\":0},{\"latitude\":-52.17673858081947,\"longitude\":-73.07680207331616,\"altitude\":0},{\"latitude\":-52.179479226004126,\"longitude\":-73.07877121936347,\"altitude\":0},{\"latitude\":-52.1795700472257,\"longitude\":-73.07906673380079,\"altitude\":0},{\"latitude\":-52.179399254295085,\"longitude\":-73.07959683510802,\"altitude\":0},{\"latitude\":-52.179205557326185,\"longitude\":-73.07965363560305,\"altitude\":0},{\"latitude\":-52.179134201969696,\"longitude\":-73.08128468989565,\"altitude\":0},{\"latitude\":-52.17994887333116,\"longitude\":-73.07853739375022,\"altitude\":0},{\"latitude\":-52.17981304729176,\"longitude\":-73.07693607503802,\"altitude\":0},{\"latitude\":-52.17873147260808,\"longitude\":-73.07551916342501,\"altitude\":0},{\"latitude\":-52.17736413194864,\"longitude\":-73.07516010475487,\"altitude\":0},{\"latitude\":-52.17638930293796,\"longitude\":-73.07588064335262,\"altitude\":0},{\"latitude\":-52.175863943083115,\"longitude\":-73.07748857097766,\"altitude\":0},{\"latitude\":-52.176201020963155,\"longitude\":-73.07880316632645,\"altitude\":0},{\"latitude\":-52.177383693056946,\"longitude\":-73.07991756465199,\"altitude\":0},{\"latitude\":-52.17895277194249,\"longitude\":-73.0806605788678,\"altitude\":0},{\"latitude\":-52.179134201969696,\"longitude\":-73.08128468989565,\"altitude\":0},{\"latitude\":-52.179205557326185,\"longitude\":-73.07965363560305,\"altitude\":0}]},\"EXTERIOR100\":{\"id\":\"2ab030cf-91af-4ca1-57c4-4ae3d1778ff7\",\"name\":\"Zona 1 exterior Mod100\",\"vertices\":[{\"latitude\":-52.179134201969696,\"longitude\":-73.08128468989565,\"altitude\":0},{\"latitude\":-52.17895277194249,\"longitude\":-73.0806605788678,\"altitude\":0},{\"latitude\":-52.177383693056946,\"longitude\":-73.07991756465199,\"altitude\":0},{\"latitude\":-52.176201020963155,\"longitude\":-73.07880316632645,\"altitude\":0},{\"latitude\":-52.175863943083115,\"longitude\":-73.07748857097766,\"altitude\":0},{\"latitude\":-52.17638930293796,\"longitude\":-73.07588064335262,\"altitude\":0},{\"latitude\":-52.17736413194864,\"longitude\":-73.07516010475487,\"altitude\":0},{\"latitude\":-52.17873147260808,\"longitude\":-73.07551916342501,\"altitude\":0},{\"latitude\":-52.17981304729176,\"longitude\":-73.07693607503802,\"altitude\":0},{\"latitude\":-52.17994887333116,\"longitude\":-73.07853739375022,\"altitude\":0},{\"latitude\":-52.179134201969696,\"longitude\":-73.08128468989565,\"altitude\":0},{\"latitude\":-52.179393978970126,\"longitude\":-73.08089487069238,\"altitude\":0},{\"latitude\":-52.17997249712309,\"longitude\":-73.07908160720021,\"altitude\":0},{\"latitude\":-52.18042958459022,\"longitude\":-73.07716210987299,\"altitude\":0},{\"latitude\":-52.18017321593435,\"longitude\":-73.07550657439202,\"altitude\":0},{\"latitude\":-52.17907456797673,\"longitude\":-73.07338395810653,\"altitude\":0},{\"latitude\":-52.177572837302804,\"longitude\":-73.073054856724,\"altitude\":0},{\"latitude\":-52.1761288385114,\"longitude\":-73.07437568407127,\"altitude\":0},{\"latitude\":-52.17514478645759,\"longitude\":-73.07735735246675,\"altitude\":0},{\"latitude\":-52.17559681571949,\"longitude\":-73.07951042515231,\"altitude\":0},{\"latitude\":-52.177973838877215,\"longitude\":-73.0812193923522,\"altitude\":0},{\"latitude\":-52.179134201969696,\"longitude\":-73.08128468989565,\"altitude\":0}]},\"ACTIVETRACKING100\":{\"id\":\"905e5a0d-f566-427d-63a8-520c9d827b5a\",\"name\":\"Active_tracking_Mod100\",\"vertices\":[{\"latitude\":-52.17916625531883,\"longitude\":-73.08124843495527,\"altitude\":0},{\"latitude\":-52.179991677070234,\"longitude\":-73.07947630524535,\"altitude\":0},{\"latitude\":-52.18012097788676,\"longitude\":-73.07909850796975,\"altitude\":0},{\"latitude\":-52.18028997912259,\"longitude\":-73.07851585012777,\"altitude\":0},{\"latitude\":-52.180453307234316,\"longitude\":-73.07764390495703,\"altitude\":0},{\"latitude\":-52.18064181246017,\"longitude\":-73.07642077366337,\"altitude\":0},{\"latitude\":-52.18062591429817,\"longitude\":-73.07561624258459,\"altitude\":0},{\"latitude\":-52.18031138245213,\"longitude\":-73.07422120007493,\"altitude\":0},{\"latitude\":-52.179043790068924,\"longitude\":-73.07236303846497,\"altitude\":0},{\"latitude\":-52.176894729561596,\"longitude\":-73.07278454687116,\"altitude\":0},{\"latitude\":-52.175858841354255,\"longitude\":-73.07352209585514,\"altitude\":0},{\"latitude\":-52.175245216757936,\"longitude\":-73.07467839209669,\"altitude\":0},{\"latitude\":-52.174863754132204,\"longitude\":-73.0765833694453,\"altitude\":0},{\"latitude\":-52.17497104082632,\"longitude\":-73.07839115407207,\"altitude\":0},{\"latitude\":-52.17566243775923,\"longitude\":-73.07992679907758,\"altitude\":0},{\"latitude\":-52.17718652470177,\"longitude\":-73.08151617516533,\"altitude\":0},{\"latitude\":-52.17805713074513,\"longitude\":-73.08158366632706,\"altitude\":0},{\"latitude\":-52.17912034382078,\"longitude\":-73.0812825272814,\"altitude\":0},{\"latitude\":-52.1791735284825,\"longitude\":-73.07943298033042,\"altitude\":0},{\"latitude\":-52.17650425572458,\"longitude\":-73.07753562927246,\"altitude\":0},{\"latitude\":-52.176754266718014,\"longitude\":-73.07691335678099,\"altitude\":0},{\"latitude\":-52.17945399651899,\"longitude\":-73.07895799109245,\"altitude\":0},{\"latitude\":-52.17931000752808,\"longitude\":-73.07953099894804,\"altitude\":0},{\"latitude\":-52.17921034352823,\"longitude\":-73.07945942069591,\"altitude\":0},{\"latitude\":-52.17916625531883,\"longitude\":-73.08124843495527,\"altitude\":0}]},\"Modulo200\":{\"id\":\"17773584-6548-4b87-7fc8-4c0cf807e391\",\"name\":\"Modulo 200\",\"vertices\":[{\"latitude\":-52.180048312741725,\"longitude\":-73.08144233479321,\"altitude\":0},{\"latitude\":-52.180357004121944,\"longitude\":-73.08042400691194,\"altitude\":0},{\"latitude\":-52.18172598882671,\"longitude\":-73.08150199824011,\"altitude\":0},{\"latitude\":-52.18144500192387,\"longitude\":-73.08258898963686,\"altitude\":0},{\"latitude\":-52.180048312741725,\"longitude\":-73.08144233479321,\"altitude\":0}]},\"INTERIOR200\":{\"id\":\"04dbfc8a-ff43-4a8b-72dd-d9e806d2844c\",\"name\":\"Zona 2 interior Mod200\",\"vertices\":[{\"latitude\":-52.179148870423454,\"longitude\":-73.08126267859676,\"altitude\":0},{\"latitude\":-52.17994230012997,\"longitude\":-73.08147324927224,\"altitude\":0},{\"latitude\":-52.180366371100085,\"longitude\":-73.08020074639386,\"altitude\":0},{\"latitude\":-52.18191454891124,\"longitude\":-73.08152906048682,\"altitude\":0},{\"latitude\":-52.18146068026934,\"longitude\":-73.08291794619116,\"altitude\":0},{\"latitude\":-52.17989185977846,\"longitude\":-73.08164579010499,\"altitude\":0},{\"latitude\":-52.17994230012997,\"longitude\":-73.08147324927224,\"altitude\":0},{\"latitude\":-52.17965424119527,\"longitude\":-73.08140028740898,\"altitude\":0},{\"latitude\":-52.179148870423454,\"longitude\":-73.08126267859676,\"altitude\":0},{\"latitude\":-52.17958739378666,\"longitude\":-73.08225312541033,\"altitude\":0},{\"latitude\":-52.17955772628541,\"longitude\":-73.08323570418086,\"altitude\":0},{\"latitude\":-52.18073797771876,\"longitude\":-73.08465663537282,\"altitude\":0},{\"latitude\":-52.18132555344206,\"longitude\":-73.08481361858983,\"altitude\":0},{\"latitude\":-52.182425031902035,\"longitude\":-73.08474661683731,\"altitude\":0},{\"latitude\":-52.18326546057822,\"longitude\":-73.08168936808951,\"altitude\":0},{\"latitude\":-52.18274417298766,\"longitude\":-73.07909727172044,\"altitude\":0},{\"latitude\":-52.18106695417957,\"longitude\":-73.07866675887908,\"altitude\":0},{\"latitude\":-52.18031729980274,\"longitude\":-73.07915926084301,\"altitude\":0},{\"latitude\":-52.17968733363859,\"longitude\":-73.0810938429074,\"altitude\":0},{\"latitude\":-52.1794306091533,\"longitude\":-73.08123339994543,\"altitude\":0},{\"latitude\":-52.17914903580618,\"longitude\":-73.08126243042547,\"altitude\":0},{\"latitude\":-52.179148870423454,\"longitude\":-73.08126267859676,\"altitude\":0}]},\"EXTERIOR200\":{\"id\":\"9824c787-23ef-4913-545e-416a6eecc74e\",\"name\":\"Zona1 exterior Mod200\",\"vertices\":[{\"latitude\":-52.17958739378666,\"longitude\":-73.08225312541033,\"altitude\":0},{\"latitude\":-52.17956883593086,\"longitude\":-73.08325354582553,\"altitude\":0},{\"latitude\":-52.18072346741364,\"longitude\":-73.08464480322198,\"altitude\":0},{\"latitude\":-52.18132555344206,\"longitude\":-73.08481361858983,\"altitude\":0},{\"latitude\":-52.182425031902035,\"longitude\":-73.08474661683731,\"altitude\":0},{\"latitude\":-52.18326546057822,\"longitude\":-73.08168936808951,\"altitude\":0},{\"latitude\":-52.18274417298766,\"longitude\":-73.07909727172044,\"altitude\":0},{\"latitude\":-52.18106695417957,\"longitude\":-73.07866675887908,\"altitude\":0},{\"latitude\":-52.18031729980274,\"longitude\":-73.07915926084301,\"altitude\":0},{\"latitude\":-52.179685462412934,\"longitude\":-73.08108773963001,\"altitude\":0},{\"latitude\":-52.1794306091533,\"longitude\":-73.08123339994543,\"altitude\":0},{\"latitude\":-52.17914903580618,\"longitude\":-73.08126243042547,\"altitude\":0},{\"latitude\":-52.179393978970126,\"longitude\":-73.08089487069238,\"altitude\":0},{\"latitude\":-52.17997249712309,\"longitude\":-73.07908160720021,\"altitude\":0},{\"latitude\":-52.18132384266039,\"longitude\":-73.07785406844441,\"altitude\":0},{\"latitude\":-52.18318590475149,\"longitude\":-73.07723641948407,\"altitude\":0},{\"latitude\":-52.18400275026895,\"longitude\":-73.07804248947801,\"altitude\":0},{\"latitude\":-52.18470945149453,\"longitude\":-73.08190534944674,\"altitude\":0},{\"latitude\":-52.18374456443452,\"longitude\":-73.08557490089296,\"altitude\":0},{\"latitude\":-52.182687041285284,\"longitude\":-73.08660911505471,\"altitude\":0},{\"latitude\":-52.181257503714356,\"longitude\":-73.08598303517432,\"altitude\":0},{\"latitude\":-52.18030640959824,\"longitude\":-73.08513578667679,\"altitude\":0},{\"latitude\":-52.17940406281344,\"longitude\":-73.08342022952912,\"altitude\":0},{\"latitude\":-52.17914903580618,\"longitude\":-73.08126243042547,\"altitude\":0},{\"latitude\":-52.17958739378666,\"longitude\":-73.08225312541033,\"altitude\":0}]},\"ACTIVETRACKING200\":{\"id\":\"69b95b43-bb84-4019-6596-9c1b25a2757d\",\"name\":\"Active_Tracking_Mod200\",\"vertices\":[{\"latitude\":-52.17917416903604,\"longitude\":-73.08124366151904,\"altitude\":0},{\"latitude\":-52.179302687462204,\"longitude\":-73.08093093694852,\"altitude\":0},{\"latitude\":-52.17949242022177,\"longitude\":-73.08052133860568,\"altitude\":0},{\"latitude\":-52.179739395280826,\"longitude\":-73.08001199221836,\"altitude\":0},{\"latitude\":-52.17997047238858,\"longitude\":-73.0795420860655,\"altitude\":0},{\"latitude\":-52.18011933320667,\"longitude\":-73.07909582576073,\"altitude\":0},{\"latitude\":-52.18027876775302,\"longitude\":-73.07854644556714,\"altitude\":0},{\"latitude\":-52.18044456438179,\"longitude\":-73.07788529780849,\"altitude\":0},{\"latitude\":-52.180780119055854,\"longitude\":-73.07735316116919,\"altitude\":0},{\"latitude\":-52.18333593238186,\"longitude\":-73.07681751848791,\"altitude\":0},{\"latitude\":-52.18442166830926,\"longitude\":-73.07840173023818,\"altitude\":0},{\"latitude\":-52.18476704913316,\"longitude\":-73.0804504986554,\"altitude\":0},{\"latitude\":-52.184669850507234,\"longitude\":-73.0833216845529,\"altitude\":0},{\"latitude\":-52.18378528534448,\"longitude\":-73.08576166866347,\"altitude\":0},{\"latitude\":-52.18270100530647,\"longitude\":-73.08700224351783,\"altitude\":0},{\"latitude\":-52.18220855384877,\"longitude\":-73.0868532071876,\"altitude\":0},{\"latitude\":-52.180291109233444,\"longitude\":-73.08551617471915,\"altitude\":0},{\"latitude\":-52.17925026259178,\"longitude\":-73.08354606914409,\"altitude\":0},{\"latitude\":-52.1791620972402,\"longitude\":-73.08127705952741,\"altitude\":0},{\"latitude\":-52.18014038030015,\"longitude\":-73.08137850350434,\"altitude\":0},{\"latitude\":-52.18011436625679,\"longitude\":-73.08149432879873,\"altitude\":0},{\"latitude\":-52.181443357292764,\"longitude\":-73.08258630742786,\"altitude\":0},{\"latitude\":-52.18173034450161,\"longitude\":-73.08149993419649,\"altitude\":0},{\"latitude\":-52.180355359450594,\"longitude\":-73.08042132470291,\"altitude\":0},{\"latitude\":-52.180156038589416,\"longitude\":-73.08130878628324,\"altitude\":0},{\"latitude\":-52.17917416903604,\"longitude\":-73.08124366151904,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 2940,
        "wires": [
            [
                "3efde6be6cbd0a7f"
            ]
        ]
    },
    {
        "id": "3efde6be6cbd0a7f",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 2940,
        "wires": [
            [
                "cbe458087f232644"
            ]
        ]
    },
    {
        "id": "54a7a990d96569aa",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2940,
        "wires": []
    },
    {
        "id": "405ae844ea486364",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT BRAZO GUARDRAMIRO",
        "info": "",
        "x": 200,
        "y": 2900,
        "wires": []
    },
    {
        "id": "94eced7c08da15b6",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 2940,
        "wires": [
            [
                "54a7a990d96569aa"
            ]
        ]
    },
    {
        "id": "cbe458087f232644",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "121",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.BrazoGuardramiro;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"BrazoGuardramiro\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int_100\"] = convertirCoordenadas(json.INTERIOR100.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext_100\"] = convertirCoordenadas(json.EXTERIOR100.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act_100\"] = convertirCoordenadas(json.ACTIVETRACKING100.vertices);\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_200\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int_200\"] = convertirCoordenadas(json.INTERIOR200.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext_200\"] = convertirCoordenadas(json.EXTERIOR200.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act_200\"] = convertirCoordenadas(json.ACTIVETRACKING200.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2940,
        "wires": [
            [
                "94eced7c08da15b6"
            ]
        ]
    },
    {
        "id": "d2162fd051d85a99",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"BrazoHojeda\":{\"codigo_centro\":\"122\",\"Modulo100\":{\"id\":\"b116b092-70e9-4fac-6d93-a460f9a215f7\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-52.15423300431751,\"longitude\":-73.03879399696577,\"altitude\":0},{\"latitude\":-52.1546169911062,\"longitude\":-73.03882002452156,\"altitude\":0},{\"latitude\":-52.15469600129691,\"longitude\":-73.03196698572717,\"altitude\":0},{\"latitude\":-52.15434199570411,\"longitude\":-73.03195398060937,\"altitude\":0},{\"latitude\":-52.15423300431751,\"longitude\":-73.03879399696577,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"e08f3cde-c985-4864-67be-63574509c569\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-52.15382636400496,\"longitude\":-73.03901374340056,\"altitude\":0},{\"latitude\":-52.154450329523215,\"longitude\":-73.03974245638773,\"altitude\":0},{\"latitude\":-52.154395024827345,\"longitude\":-73.03895592660409,\"altitude\":0},{\"latitude\":-52.15409862721617,\"longitude\":-73.0389559267678,\"altitude\":0},{\"latitude\":-52.154178251468025,\"longitude\":-73.03154562563822,\"altitude\":0},{\"latitude\":-52.15487575111842,\"longitude\":-73.03157206373703,\"altitude\":0},{\"latitude\":-52.15475651351771,\"longitude\":-73.03897231813608,\"altitude\":0},{\"latitude\":-52.15449010552935,\"longitude\":-73.03895592660409,\"altitude\":0},{\"latitude\":-52.15454687313098,\"longitude\":-73.03974245638773,\"altitude\":0},{\"latitude\":-52.15503754758075,\"longitude\":-73.03907096364127,\"altitude\":0},{\"latitude\":-52.15537105624621,\"longitude\":-73.03121745499084,\"altitude\":0},{\"latitude\":-52.15495855835201,\"longitude\":-73.03071677641127,\"altitude\":0},{\"latitude\":-52.15419498858171,\"longitude\":-73.0307453862042,\"altitude\":0},{\"latitude\":-52.15372104213667,\"longitude\":-73.03116023540495,\"altitude\":0},{\"latitude\":-52.15382636400496,\"longitude\":-73.03901374340056,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"2f80be27-755a-44a4-4340-b75d62f80b00\",\"name\":\"Zone 1 Exterior\",\"vertices\":[{\"latitude\":-52.154450329523215,\"longitude\":-73.03974245638773,\"altitude\":0},{\"latitude\":-52.15382636400496,\"longitude\":-73.03901374340056,\"altitude\":0},{\"latitude\":-52.15372104213667,\"longitude\":-73.03116023540495,\"altitude\":0},{\"latitude\":-52.15419498858171,\"longitude\":-73.0307453862042,\"altitude\":0},{\"latitude\":-52.15495855835201,\"longitude\":-73.03071677641127,\"altitude\":0},{\"latitude\":-52.15537105624621,\"longitude\":-73.03121745499084,\"altitude\":0},{\"latitude\":-52.15503754758075,\"longitude\":-73.03907096364127,\"altitude\":0},{\"latitude\":-52.15454687313098,\"longitude\":-73.03974245638773,\"altitude\":0},{\"latitude\":-52.15572483116516,\"longitude\":-73.03941498663899,\"altitude\":0},{\"latitude\":-52.156537771225,\"longitude\":-73.03091159884393,\"altitude\":0},{\"latitude\":-52.15503974179093,\"longitude\":-73.02894294174622,\"altitude\":0},{\"latitude\":-52.15397776375408,\"longitude\":-73.02901446819305,\"altitude\":0},{\"latitude\":-52.15237904215337,\"longitude\":-73.03126763076453,\"altitude\":0},{\"latitude\":-52.153020854308124,\"longitude\":-73.03937199854397,\"altitude\":0},{\"latitude\":-52.154450329523215,\"longitude\":-73.03974245638773,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"9061fc6e-0b49-4185-6388-18051d93eabc\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-52.1542364750503,\"longitude\":-73.03990034561909,\"altitude\":0},{\"latitude\":-52.15287868077898,\"longitude\":-73.0393102063911,\"altitude\":0},{\"latitude\":-52.15194613237096,\"longitude\":-73.03026513173003,\"altitude\":0},{\"latitude\":-52.15424778986353,\"longitude\":-73.02728611480855,\"altitude\":0},{\"latitude\":-52.155299381601054,\"longitude\":-73.02775144373298,\"altitude\":0},{\"latitude\":-52.157098532429025,\"longitude\":-73.03073167655384,\"altitude\":0},{\"latitude\":-52.15588878616394,\"longitude\":-73.03936262887424,\"altitude\":0},{\"latitude\":-52.15452685783286,\"longitude\":-73.03979754433385,\"altitude\":0},{\"latitude\":-52.15449010552935,\"longitude\":-73.03895592660409,\"altitude\":0},{\"latitude\":-52.15475651351771,\"longitude\":-73.03897231813608,\"altitude\":0},{\"latitude\":-52.154879992589336,\"longitude\":-73.03157222450746,\"altitude\":0},{\"latitude\":-52.154178251468025,\"longitude\":-73.03154562563822,\"altitude\":0},{\"latitude\":-52.15409862721617,\"longitude\":-73.0389559267678,\"altitude\":0},{\"latitude\":-52.154395024827345,\"longitude\":-73.03895592660409,\"altitude\":0},{\"latitude\":-52.154453718801555,\"longitude\":-73.03980946529919,\"altitude\":0},{\"latitude\":-52.1542364750503,\"longitude\":-73.03990034561909,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 3020,
        "wires": [
            [
                "260121d298070e2f"
            ]
        ]
    },
    {
        "id": "260121d298070e2f",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 3020,
        "wires": [
            [
                "1888cff907a57e1a"
            ]
        ]
    },
    {
        "id": "38435ed6f5735624",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3020,
        "wires": []
    },
    {
        "id": "5d2f74e9f7fc267d",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT BRAZO HOJEDA",
        "info": "",
        "x": 170,
        "y": 2980,
        "wires": []
    },
    {
        "id": "0a38e5b9d7562b76",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 3020,
        "wires": [
            [
                "38435ed6f5735624"
            ]
        ]
    },
    {
        "id": "1888cff907a57e1a",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "122",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.BrazoHojeda;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"BrazoHojeda\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3020,
        "wires": [
            [
                "0a38e5b9d7562b76"
            ]
        ]
    },
    {
        "id": "69d88ff5052d1ac6",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"BrazoHojeda2\":{\"codigo_centro\":\"123\",\"Modulo100\":{\"id\":\"f2c061fc-7780-4229-41ef-3a1fa11f53cb\",\"name\":\"MOD100\",\"vertices\":[{\"latitude\":-52.1507999880875,\"longitude\":-73.05099499062628,\"altitude\":0},{\"latitude\":-52.15119500115301,\"longitude\":-73.0510640010467,\"altitude\":0},{\"latitude\":-52.15195500943752,\"longitude\":-73.04448299490635,\"altitude\":0},{\"latitude\":-52.15157999273,\"longitude\":-73.04435199068382,\"altitude\":0},{\"latitude\":-52.1507999880875,\"longitude\":-73.05099499062628,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"91fef178-7b26-4bb7-5e47-0ffbe0934987\",\"name\":\"Zona_Interior\",\"vertices\":[{\"latitude\":-52.1507405914399,\"longitude\":-73.05191343093584,\"altitude\":0},{\"latitude\":-52.15095904558175,\"longitude\":-73.05116029142614,\"altitude\":0},{\"latitude\":-52.15067337458297,\"longitude\":-73.05100966352421,\"altitude\":0},{\"latitude\":-52.15150517636228,\"longitude\":-73.04420402398608,\"altitude\":0},{\"latitude\":-52.15200335574519,\"longitude\":-73.04434523008435,\"altitude\":0},{\"latitude\":-52.15121950886773,\"longitude\":-73.05126983926473,\"altitude\":0},{\"latitude\":-52.15095904558175,\"longitude\":-73.05116029142614,\"altitude\":0},{\"latitude\":-52.1507405914399,\"longitude\":-73.05191343093584,\"altitude\":0},{\"latitude\":-52.1513959506498,\"longitude\":-73.05221468598754,\"altitude\":0},{\"latitude\":-52.151874861027984,\"longitude\":-73.05151632114932,\"altitude\":0},{\"latitude\":-52.152345364659304,\"longitude\":-73.04932537114765,\"altitude\":0},{\"latitude\":-52.152715042117585,\"longitude\":-73.04640866784369,\"altitude\":0},{\"latitude\":-52.15283266609866,\"longitude\":-73.04447789358252,\"altitude\":0},{\"latitude\":-52.152404177177054,\"longitude\":-73.0433961113093,\"altitude\":0},{\"latitude\":-52.151412754658516,\"longitude\":-73.04306746929797,\"altitude\":0},{\"latitude\":-52.15066497243988,\"longitude\":-73.04384799576732,\"altitude\":0},{\"latitude\":-52.150253266639574,\"longitude\":-73.04518995302885,\"altitude\":0},{\"latitude\":-52.15001800462131,\"longitude\":-73.04725766133605,\"altitude\":0},{\"latitude\":-52.14985836174294,\"longitude\":-73.04907888926303,\"altitude\":0},{\"latitude\":-52.14982475266123,\"longitude\":-73.05029760483008,\"altitude\":0},{\"latitude\":-52.149942384394016,\"longitude\":-73.05144785412631,\"altitude\":0},{\"latitude\":-52.1507405914399,\"longitude\":-73.05191343093584,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"f9059498-ce8a-49dd-58dd-fe2e0ace3fab\",\"name\":\"Zona_Exterior\",\"vertices\":[{\"latitude\":-52.1506310795949,\"longitude\":-73.05184955456441,\"altitude\":0},{\"latitude\":-52.149942384394016,\"longitude\":-73.05144785412631,\"altitude\":0},{\"latitude\":-52.14982475266123,\"longitude\":-73.05029760483008,\"altitude\":0},{\"latitude\":-52.14985836174294,\"longitude\":-73.04907888926303,\"altitude\":0},{\"latitude\":-52.150253266639574,\"longitude\":-73.04518995302885,\"altitude\":0},{\"latitude\":-52.15066497243988,\"longitude\":-73.04384799576732,\"altitude\":0},{\"latitude\":-52.151412754658516,\"longitude\":-73.04306746929797,\"altitude\":0},{\"latitude\":-52.152404177177054,\"longitude\":-73.0433961113093,\"altitude\":0},{\"latitude\":-52.15283266609866,\"longitude\":-73.04447789358252,\"altitude\":0},{\"latitude\":-52.152715042117585,\"longitude\":-73.04640866784369,\"altitude\":0},{\"latitude\":-52.152345364659304,\"longitude\":-73.04932537114765,\"altitude\":0},{\"latitude\":-52.151874861027984,\"longitude\":-73.05151632114932,\"altitude\":0},{\"latitude\":-52.1513959506498,\"longitude\":-73.05221468598754,\"altitude\":0},{\"latitude\":-52.150638955505435,\"longitude\":-73.051854148442,\"altitude\":0},{\"latitude\":-52.150731128826735,\"longitude\":-73.05339309997781,\"altitude\":0},{\"latitude\":-52.151363068526024,\"longitude\":-73.0541831748948,\"altitude\":0},{\"latitude\":-52.15253170045345,\"longitude\":-73.05428193416255,\"altitude\":0},{\"latitude\":-52.15364836484001,\"longitude\":-73.05260302506082,\"altitude\":0},{\"latitude\":-52.15439279188659,\"longitude\":-73.04827172076459,\"altitude\":0},{\"latitude\":-52.1547005264472,\"longitude\":-73.0446105192853,\"altitude\":0},{\"latitude\":-52.154186666665495,\"longitude\":-73.04176288416802,\"altitude\":0},{\"latitude\":-52.15289526873301,\"longitude\":-73.04029760913943,\"altitude\":0},{\"latitude\":-52.15128515864016,\"longitude\":-73.04010009060394,\"altitude\":0},{\"latitude\":-52.149467222756606,\"longitude\":-73.04145450485805,\"altitude\":0},{\"latitude\":-52.1486889502108,\"longitude\":-73.04345508702542,\"altitude\":0},{\"latitude\":-52.14815082770633,\"longitude\":-73.0468448816744,\"altitude\":0},{\"latitude\":-52.148189776518905,\"longitude\":-73.05075908799456,\"altitude\":0},{\"latitude\":-52.14902744411539,\"longitude\":-73.05236318057128,\"altitude\":0},{\"latitude\":-52.150109568506345,\"longitude\":-73.05216566203579,\"altitude\":0},{\"latitude\":-52.1506310795949,\"longitude\":-73.05184955456441,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 3100,
        "wires": [
            [
                "5e56979763ce849d"
            ]
        ]
    },
    {
        "id": "5e56979763ce849d",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 3100,
        "wires": [
            [
                "17a64fe9284f88c8"
            ]
        ]
    },
    {
        "id": "aa931b5b99bd94d7",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3100,
        "wires": []
    },
    {
        "id": "a0b979be61e7e1ea",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT BRAZO HOJEDA 2",
        "info": "",
        "x": 180,
        "y": 3060,
        "wires": []
    },
    {
        "id": "54d15c5503a727dd",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 3100,
        "wires": [
            [
                "aa931b5b99bd94d7"
            ]
        ]
    },
    {
        "id": "17a64fe9284f88c8",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "123",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.BrazoHojeda2;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"BrazoHojeda2\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3100,
        "wires": [
            [
                "54d15c5503a727dd"
            ]
        ]
    },
    {
        "id": "f02418b8a06ebd77",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Caceres\":{\"codigo_centro\":\"124\",\"Modulo100\":{\"id\":\"ac4a5b41-2a1c-4a47-65d5-a0781e66416f\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-44.28925089997332,\"longitude\":-73.86194255947656,\"altitude\":0},{\"latitude\":-44.28948351816109,\"longitude\":-73.85925669595395,\"altitude\":0},{\"latitude\":-44.28894037693877,\"longitude\":-73.85912551916931,\"altitude\":0},{\"latitude\":-44.28867146845337,\"longitude\":-73.86182558163794,\"altitude\":0},{\"latitude\":-44.28925089997332,\"longitude\":-73.86194255947656,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"1de453f2-0ebb-4230-796c-4b637ed70e8b\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-44.2896352325352,\"longitude\":-73.85926061855571,\"altitude\":0},{\"latitude\":-44.28938448313569,\"longitude\":-73.86193370832189,\"altitude\":0},{\"latitude\":-44.28927036613155,\"longitude\":-73.86216113369093,\"altitude\":0},{\"latitude\":-44.28855389184893,\"longitude\":-73.86201417442862,\"altitude\":0},{\"latitude\":-44.28849360343314,\"longitude\":-73.86177062988281,\"altitude\":0},{\"latitude\":-44.28877622878843,\"longitude\":-73.85904121372731,\"altitude\":0},{\"latitude\":-44.28892099693222,\"longitude\":-73.85892802463785,\"altitude\":0},{\"latitude\":-44.28953961765865,\"longitude\":-73.85906052550126,\"altitude\":0},{\"latitude\":-44.28961334475386,\"longitude\":-73.85919356333035,\"altitude\":0},{\"latitude\":-44.290015002605756,\"longitude\":-73.8591216803252,\"altitude\":0},{\"latitude\":-44.289803038275245,\"longitude\":-73.85869145393372,\"altitude\":0},{\"latitude\":-44.28881462886445,\"longitude\":-73.85847848647244,\"altitude\":0},{\"latitude\":-44.28811267155664,\"longitude\":-73.85892319653065,\"altitude\":0},{\"latitude\":-44.28776860207928,\"longitude\":-73.85969567272694,\"altitude\":0},{\"latitude\":-44.287479827585486,\"longitude\":-73.86107754668045,\"altitude\":0},{\"latitude\":-44.28755355750062,\"longitude\":-73.86218476269276,\"altitude\":0},{\"latitude\":-44.28815568005565,\"longitude\":-73.86293149007541,\"altitude\":0},{\"latitude\":-44.288671780407775,\"longitude\":-73.86296582182693,\"altitude\":0},{\"latitude\":-44.2894244188358,\"longitude\":-73.8625940680504,\"altitude\":0},{\"latitude\":-44.28970805180772,\"longitude\":-73.86210909599012,\"altitude\":0},{\"latitude\":-44.289984283291965,\"longitude\":-73.85937058912533,\"altitude\":0},{\"latitude\":-44.2896352325352,\"longitude\":-73.85926061855571,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"3cc88abe-5031-4799-4aee-3ff56c3c2260\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-44.289984283291965,\"longitude\":-73.85937058912533,\"altitude\":0},{\"latitude\":-44.28970805180772,\"longitude\":-73.86210909599012,\"altitude\":0},{\"latitude\":-44.2894244188358,\"longitude\":-73.8625940680504,\"altitude\":0},{\"latitude\":-44.288671780407775,\"longitude\":-73.86296582182693,\"altitude\":0},{\"latitude\":-44.28815568005565,\"longitude\":-73.86293149007541,\"altitude\":0},{\"latitude\":-44.28755355750062,\"longitude\":-73.86218476269276,\"altitude\":0},{\"latitude\":-44.287479827585486,\"longitude\":-73.86107754668045,\"altitude\":0},{\"latitude\":-44.28776860207928,\"longitude\":-73.85969567272694,\"altitude\":0},{\"latitude\":-44.28811267155664,\"longitude\":-73.85892319653065,\"altitude\":0},{\"latitude\":-44.28881462886445,\"longitude\":-73.85847848647244,\"altitude\":0},{\"latitude\":-44.289803038275245,\"longitude\":-73.85869145393372,\"altitude\":0},{\"latitude\":-44.288670244542104,\"longitude\":-73.85807132734043,\"altitude\":0},{\"latitude\":-44.28727647588216,\"longitude\":-73.85852200832923,\"altitude\":0},{\"latitude\":-44.286716406352014,\"longitude\":-73.85954038815629,\"altitude\":0},{\"latitude\":-44.286313014819946,\"longitude\":-73.86074789190602,\"altitude\":0},{\"latitude\":-44.286272410961665,\"longitude\":-73.86207305964358,\"altitude\":0},{\"latitude\":-44.28670883825748,\"longitude\":-73.86329391377733,\"altitude\":0},{\"latitude\":-44.287430674413564,\"longitude\":-73.86387777354685,\"altitude\":0},{\"latitude\":-44.2891878763423,\"longitude\":-73.86402153955713,\"altitude\":0},{\"latitude\":-44.29016475948454,\"longitude\":-73.86286282526271,\"altitude\":0},{\"latitude\":-44.29030951905409,\"longitude\":-73.86091343101562,\"altitude\":0},{\"latitude\":-44.289984283291965,\"longitude\":-73.85937058912533,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"4767e03a-9866-4483-5787-a02998aaedc2\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-44.28947990630618,\"longitude\":-73.85924586647903,\"altitude\":0},{\"latitude\":-44.289246868036024,\"longitude\":-73.86193853623595,\"altitude\":0},{\"latitude\":-44.28866743647628,\"longitude\":-73.86182155839734,\"altitude\":0},{\"latitude\":-44.28893634498015,\"longitude\":-73.85912149592869,\"altitude\":0},{\"latitude\":-44.28916311890296,\"longitude\":-73.8591762650949,\"altitude\":0},{\"latitude\":-44.28922224444457,\"longitude\":-73.85742142803808,\"altitude\":0},{\"latitude\":-44.2884603874378,\"longitude\":-73.85740426150747,\"altitude\":0},{\"latitude\":-44.28719470040426,\"longitude\":-73.85809090701528,\"altitude\":0},{\"latitude\":-44.285944345938184,\"longitude\":-73.86185887437037,\"altitude\":0},{\"latitude\":-44.28712404196819,\"longitude\":-73.864073306395,\"altitude\":0},{\"latitude\":-44.28942769979041,\"longitude\":-73.86540319773144,\"altitude\":0},{\"latitude\":-44.29110073181638,\"longitude\":-73.86332014131783,\"altitude\":0},{\"latitude\":-44.29095328150189,\"longitude\":-73.85892561032976,\"altitude\":0},{\"latitude\":-44.29008450528249,\"longitude\":-73.85757833719254,\"altitude\":0},{\"latitude\":-44.28922434411482,\"longitude\":-73.85742174647646,\"altitude\":0},{\"latitude\":-44.28916533096764,\"longitude\":-73.8591767993414,\"altitude\":0},{\"latitude\":-44.28947990630618,\"longitude\":-73.85924586647903,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 3180,
        "wires": [
            [
                "0a66b00c6459c035"
            ]
        ]
    },
    {
        "id": "0a66b00c6459c035",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 3180,
        "wires": [
            [
                "7634a0baa133f99d"
            ]
        ]
    },
    {
        "id": "55a777226f0add6f",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3180,
        "wires": []
    },
    {
        "id": "5534c465a90ad4dd",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT CACERES",
        "info": "",
        "x": 150,
        "y": 3140,
        "wires": []
    },
    {
        "id": "5ac25073f5718392",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 3180,
        "wires": [
            [
                "55a777226f0add6f"
            ]
        ]
    },
    {
        "id": "7634a0baa133f99d",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "124",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Caceres;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Caceres\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3180,
        "wires": [
            [
                "5ac25073f5718392"
            ]
        ]
    },
    {
        "id": "17b5dda42e5b3221",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Canalad6\":{\"codigo_centro\":\"125\",\"Modulo100\":{\"id\":\"85e04d09-ff07-4239-43ba-e468c1770f6d\",\"name\":\"Mod 100\",\"vertices\":[{\"latitude\":-44.560174993571785,\"longitude\":-73.29962900286773,\"altitude\":0},{\"latitude\":-44.56241700490215,\"longitude\":-73.29960300325183,\"altitude\":0},{\"latitude\":-44.562427989634976,\"longitude\":-73.29882300953614,\"altitude\":0},{\"latitude\":-44.560173011540336,\"longitude\":-73.2988419997855,\"altitude\":0},{\"latitude\":-44.560174993571785,\"longitude\":-73.29962900286773,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"aa23ea56-01b3-4049-4e29-e4066c0dd5b2\",\"name\":\"Zona Interior 2\",\"vertices\":[{\"latitude\":-44.562577786537695,\"longitude\":-73.30010505136394,\"altitude\":0},{\"latitude\":-44.562405581598966,\"longitude\":-73.29972848296165,\"altitude\":0},{\"latitude\":-44.56009915081589,\"longitude\":-73.29974204641746,\"altitude\":0},{\"latitude\":-44.56009310483972,\"longitude\":-73.29871531262467,\"altitude\":0},{\"latitude\":-44.56248943112839,\"longitude\":-73.29870194069339,\"altitude\":0},{\"latitude\":-44.56248393410431,\"longitude\":-73.29965606331825,\"altitude\":0},{\"latitude\":-44.56262021465871,\"longitude\":-73.30013299360871,\"altitude\":0},{\"latitude\":-44.56262472643714,\"longitude\":-73.29847675431004,\"altitude\":0},{\"latitude\":-44.56224903974749,\"longitude\":-73.29800780635888,\"altitude\":0},{\"latitude\":-44.55991001544574,\"longitude\":-73.29765911481391,\"altitude\":0},{\"latitude\":-44.55950888474828,\"longitude\":-73.29921119687262,\"altitude\":0},{\"latitude\":-44.559801866287486,\"longitude\":-73.30054555263757,\"altitude\":0},{\"latitude\":-44.56215965472428,\"longitude\":-73.30037010170463,\"altitude\":0},{\"latitude\":-44.562577786537695,\"longitude\":-73.30010505136394,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"12cad551-a9e5-46f5-4313-291356539a59\",\"name\":\"Zona Exterior 1\",\"vertices\":[{\"latitude\":-44.562577786537695,\"longitude\":-73.30010505136394,\"altitude\":0},{\"latitude\":-44.56215965472428,\"longitude\":-73.30037010170463,\"altitude\":0},{\"latitude\":-44.559801866287486,\"longitude\":-73.30054555263757,\"altitude\":0},{\"latitude\":-44.55950888474828,\"longitude\":-73.29921119687262,\"altitude\":0},{\"latitude\":-44.55991001544574,\"longitude\":-73.29765911481391,\"altitude\":0},{\"latitude\":-44.56225410949735,\"longitude\":-73.29800788754387,\"altitude\":0},{\"latitude\":-44.56262472643714,\"longitude\":-73.29847675431004,\"altitude\":0},{\"latitude\":-44.56262021465871,\"longitude\":-73.30013299360871,\"altitude\":0},{\"latitude\":-44.56263502514671,\"longitude\":-73.30017289146781,\"altitude\":0},{\"latitude\":-44.56265248729562,\"longitude\":-73.29803770687438,\"altitude\":0},{\"latitude\":-44.56223964848744,\"longitude\":-73.29725730731714,\"altitude\":0},{\"latitude\":-44.55974055072012,\"longitude\":-73.2964233412143,\"altitude\":0},{\"latitude\":-44.55880062702483,\"longitude\":-73.29809075548786,\"altitude\":0},{\"latitude\":-44.55880024750033,\"longitude\":-73.30053104360299,\"altitude\":0},{\"latitude\":-44.55968558784462,\"longitude\":-73.30184359279491,\"altitude\":0},{\"latitude\":-44.562107741768,\"longitude\":-73.30111861974606,\"altitude\":0},{\"latitude\":-44.56261675091501,\"longitude\":-73.30019451677798,\"altitude\":0},{\"latitude\":-44.562577786537695,\"longitude\":-73.30010505136394,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"2fed287c-55e4-4ef6-4654-fb0a9694f1e6\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-44.562405581598966,\"longitude\":-73.29972848296165,\"altitude\":0},{\"latitude\":-44.56009915081589,\"longitude\":-73.29974204641746,\"altitude\":0},{\"latitude\":-44.56009310483972,\"longitude\":-73.29871531262467,\"altitude\":0},{\"latitude\":-44.56248943112839,\"longitude\":-73.29870194069339,\"altitude\":0},{\"latitude\":-44.56248393410431,\"longitude\":-73.29965606331825,\"altitude\":0},{\"latitude\":-44.56259810726016,\"longitude\":-73.30005583594308,\"altitude\":0},{\"latitude\":-44.5626967498048,\"longitude\":-73.29801443782526,\"altitude\":0},{\"latitude\":-44.56238408301597,\"longitude\":-73.29736462893499,\"altitude\":0},{\"latitude\":-44.56150492426015,\"longitude\":-73.29671137693762,\"altitude\":0},{\"latitude\":-44.55958148019544,\"longitude\":-73.29639737322324,\"altitude\":0},{\"latitude\":-44.559021082988124,\"longitude\":-73.29696401970912,\"altitude\":0},{\"latitude\":-44.558564156453485,\"longitude\":-73.29822990853806,\"altitude\":0},{\"latitude\":-44.55859753096038,\"longitude\":-73.29968167817947,\"altitude\":0},{\"latitude\":-44.55907075137712,\"longitude\":-73.3007101305709,\"altitude\":0},{\"latitude\":-44.559648412604716,\"longitude\":-73.30134429100228,\"altitude\":0},{\"latitude\":-44.56088440577194,\"longitude\":-73.30148528812417,\"altitude\":0},{\"latitude\":-44.56219146926947,\"longitude\":-73.30109352396524,\"altitude\":0},{\"latitude\":-44.562533229378666,\"longitude\":-73.30041955470199,\"altitude\":0},{\"latitude\":-44.56255919348342,\"longitude\":-73.30006439302956,\"altitude\":0},{\"latitude\":-44.562405581598966,\"longitude\":-73.29972848296165,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 3260,
        "wires": [
            [
                "8a39a37040d04a2b"
            ]
        ]
    },
    {
        "id": "8a39a37040d04a2b",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 3260,
        "wires": [
            [
                "ae5dfb46276bafac"
            ]
        ]
    },
    {
        "id": "52a1fa60fc25e4d5",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3260,
        "wires": []
    },
    {
        "id": "fbc50575b6958e85",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT CANALAD6",
        "info": "",
        "x": 150,
        "y": 3220,
        "wires": []
    },
    {
        "id": "5e29862c9b7bc596",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 3260,
        "wires": [
            [
                "52a1fa60fc25e4d5"
            ]
        ]
    },
    {
        "id": "ae5dfb46276bafac",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "125",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Canalad6;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Canalad6\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3260,
        "wires": [
            [
                "5e29862c9b7bc596"
            ]
        ]
    },
    {
        "id": "65c3c50670645824",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"CanalPerezNorte\":{\"codigo_centro\":\"126\",\"Modulo100\":{\"id\":\"30fa9ca3-ea8f-4db0-70cd-2aaccd2ea0ac\",\"name\":\"modulo100\",\"vertices\":[{\"latitude\":-44.15087699932562,\"longitude\":-73.8516289985273,\"altitude\":0},{\"latitude\":-44.151436526293324,\"longitude\":-73.85126173496245,\"altitude\":0},{\"latitude\":-44.15052816080037,\"longitude\":-73.84841591119765,\"altitude\":0},{\"latitude\":-44.149993001421755,\"longitude\":-73.84872100199571,\"altitude\":0},{\"latitude\":-44.15087699932562,\"longitude\":-73.8516289985273,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"3bfe21da-dd0a-44b1-719f-8e1beaba1c63\",\"name\":\"Zone interior\",\"vertices\":[{\"latitude\":-44.151421130384506,\"longitude\":-73.85230779647826,\"altitude\":0},{\"latitude\":-44.15026000731733,\"longitude\":-73.85205898333572,\"altitude\":0},{\"latitude\":-44.14907609412775,\"longitude\":-73.84928226470947,\"altitude\":0},{\"latitude\":-44.148942048385,\"longitude\":-73.84816930353199,\"altitude\":0},{\"latitude\":-44.149237757393315,\"longitude\":-73.84731888771057,\"altitude\":0},{\"latitude\":-44.15015275731329,\"longitude\":-73.84674090132367,\"altitude\":0},{\"latitude\":-44.15077733793978,\"longitude\":-73.84672122263164,\"altitude\":0},{\"latitude\":-44.15126235984041,\"longitude\":-73.84742617607117,\"altitude\":0},{\"latitude\":-44.15224769255965,\"longitude\":-73.85073065757751,\"altitude\":0},{\"latitude\":-44.151421130384506,\"longitude\":-73.85230779647826,\"altitude\":0},{\"latitude\":-44.15127198230977,\"longitude\":-73.85188400745392,\"altitude\":0},{\"latitude\":-44.15158809177652,\"longitude\":-73.85115817819594,\"altitude\":0},{\"latitude\":-44.15060187682613,\"longitude\":-73.84809380504515,\"altitude\":0},{\"latitude\":-44.14974647331457,\"longitude\":-73.84857299084267,\"altitude\":0},{\"latitude\":-44.150742548127376,\"longitude\":-73.85169495934088,\"altitude\":0},{\"latitude\":-44.15127198230977,\"longitude\":-73.85188400745392,\"altitude\":0},{\"latitude\":-44.151421130384506,\"longitude\":-73.85230779647826,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"ec251a7a-04ea-49e0-6f73-572fcb06f382\",\"name\":\"Zone exterior\",\"vertices\":[{\"latitude\":-44.151421130384506,\"longitude\":-73.85230779647826,\"altitude\":0},{\"latitude\":-44.15015812560299,\"longitude\":-73.85270228973313,\"altitude\":0},{\"latitude\":-44.14956934077321,\"longitude\":-73.85229354982977,\"altitude\":0},{\"latitude\":-44.14787515315009,\"longitude\":-73.8494861125946,\"altitude\":0},{\"latitude\":-44.14774457599406,\"longitude\":-73.84769233373495,\"altitude\":0},{\"latitude\":-44.14822927931199,\"longitude\":-73.84575247764587,\"altitude\":0},{\"latitude\":-44.149506565051,\"longitude\":-73.84466241115574,\"altitude\":0},{\"latitude\":-44.151085306123846,\"longitude\":-73.84451866149902,\"altitude\":0},{\"latitude\":-44.15252481442293,\"longitude\":-73.84664297103882,\"altitude\":0},{\"latitude\":-44.15311754292899,\"longitude\":-73.84986162185668,\"altitude\":0},{\"latitude\":-44.15280193498495,\"longitude\":-73.85138511657715,\"altitude\":0},{\"latitude\":-44.151421130384506,\"longitude\":-73.85230779647826,\"altitude\":0},{\"latitude\":-44.15224769255965,\"longitude\":-73.85073065757751,\"altitude\":0},{\"latitude\":-44.15126235984041,\"longitude\":-73.84742617607117,\"altitude\":0},{\"latitude\":-44.15077733793978,\"longitude\":-73.84672122263164,\"altitude\":0},{\"latitude\":-44.15015275731329,\"longitude\":-73.84674090132367,\"altitude\":0},{\"latitude\":-44.149237757393315,\"longitude\":-73.84731888771057,\"altitude\":0},{\"latitude\":-44.148942048385,\"longitude\":-73.84816930353199,\"altitude\":0},{\"latitude\":-44.14907609412775,\"longitude\":-73.84928226470947,\"altitude\":0},{\"latitude\":-44.15026000731733,\"longitude\":-73.85205898333572,\"altitude\":0},{\"latitude\":-44.151421130384506,\"longitude\":-73.85230779647826,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"9b80128f-7d2c-4f71-43ac-e07755549c38\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-44.151421130384506,\"longitude\":-73.85230779647826,\"altitude\":0},{\"latitude\":-44.15020002957384,\"longitude\":-73.85287642478943,\"altitude\":0},{\"latitude\":-44.14925315387171,\"longitude\":-73.85238289833069,\"altitude\":0},{\"latitude\":-44.1475210248636,\"longitude\":-73.84955048561096,\"altitude\":0},{\"latitude\":-44.14732856294722,\"longitude\":-73.84750127792358,\"altitude\":0},{\"latitude\":-44.147944438870674,\"longitude\":-73.84529113769533,\"altitude\":0},{\"latitude\":-44.14929164505011,\"longitude\":-73.84384274482727,\"altitude\":0},{\"latitude\":-44.15141631916217,\"longitude\":-73.8440465927124,\"altitude\":0},{\"latitude\":-44.15294049477797,\"longitude\":-73.84648203849792,\"altitude\":0},{\"latitude\":-44.15342545149171,\"longitude\":-73.84991526603699,\"altitude\":0},{\"latitude\":-44.152894308216446,\"longitude\":-73.85149240493774,\"altitude\":0},{\"latitude\":-44.151421130384506,\"longitude\":-73.85230779647826,\"altitude\":0},{\"latitude\":-44.15127198230977,\"longitude\":-73.85188400745392,\"altitude\":0},{\"latitude\":-44.15158809177652,\"longitude\":-73.85115817819594,\"altitude\":0},{\"latitude\":-44.15060559708343,\"longitude\":-73.84810536455527,\"altitude\":0},{\"latitude\":-44.14974647331457,\"longitude\":-73.84857299084267,\"altitude\":0},{\"latitude\":-44.150742548127376,\"longitude\":-73.85169495934088,\"altitude\":0},{\"latitude\":-44.15127198230977,\"longitude\":-73.85188400745392,\"altitude\":0},{\"latitude\":-44.151421130384506,\"longitude\":-73.85230779647826,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 3340,
        "wires": [
            [
                "38ac5a43a28e61d1"
            ]
        ]
    },
    {
        "id": "38ac5a43a28e61d1",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 3340,
        "wires": [
            [
                "399af0a6a463f81c"
            ]
        ]
    },
    {
        "id": "ede69240eb42fb10",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3340,
        "wires": []
    },
    {
        "id": "975aaa8933eea78d",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT CANAL PEREZ NORTE",
        "info": "",
        "x": 190,
        "y": 3300,
        "wires": []
    },
    {
        "id": "7e10697192b20f9e",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 3340,
        "wires": [
            [
                "ede69240eb42fb10"
            ]
        ]
    },
    {
        "id": "399af0a6a463f81c",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "126",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.CanalPerezNorte;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"CanalPerezNorte\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3340,
        "wires": [
            [
                "7e10697192b20f9e"
            ]
        ]
    },
    {
        "id": "d7ca70e6bac37d7b",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Cascada\":{\"codigo_centro\":\"127\",\"Modulo100\":{\"id\":\"96bf214d-0740-4a6d-7022-cbf0ffd9926a\",\"name\":\"MOD100\",\"vertices\":[{\"latitude\":-44.074241584851165,\"longitude\":-73.14659551023729,\"altitude\":0},{\"latitude\":-44.077060147367916,\"longitude\":-73.14650668948275,\"altitude\":0},{\"latitude\":-44.0770629895638,\"longitude\":-73.14571221918072,\"altitude\":0},{\"latitude\":-44.07425438899201,\"longitude\":-73.14579465013784,\"altitude\":0},{\"latitude\":-44.074241584851165,\"longitude\":-73.14659551023729,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"f374ff18-d4f2-4996-578a-8accfbab932d\",\"name\":\"Zona_Interior\",\"vertices\":[{\"latitude\":-44.07387222947221,\"longitude\":-73.14610885693308,\"altitude\":0},{\"latitude\":-44.07390420683839,\"longitude\":-73.14607444014013,\"altitude\":0},{\"latitude\":-44.07387222947221,\"longitude\":-73.14610885693308,\"altitude\":0},{\"latitude\":-44.07390420683839,\"longitude\":-73.14607444014013,\"altitude\":0},{\"latitude\":-44.07390420683839,\"longitude\":-73.14607444014013,\"altitude\":0},{\"latitude\":-44.07413855153564,\"longitude\":-73.14614653587341,\"altitude\":0},{\"latitude\":-44.074150963326275,\"longitude\":-73.1456285944061,\"altitude\":0},{\"latitude\":-44.07563696038472,\"longitude\":-73.14560943797845,\"altitude\":0},{\"latitude\":-44.0772001014203,\"longitude\":-73.1455365155986,\"altitude\":0},{\"latitude\":-44.07719354976818,\"longitude\":-73.14667171236577,\"altitude\":0},{\"latitude\":-44.07413754251311,\"longitude\":-73.14674159613409,\"altitude\":0},{\"latitude\":-44.07413855153564,\"longitude\":-73.14614653587341,\"altitude\":0},{\"latitude\":-44.07390420683839,\"longitude\":-73.14607444014013,\"altitude\":0},{\"latitude\":-44.07387031079198,\"longitude\":-73.14611092198123,\"altitude\":0},{\"latitude\":-44.07374255577303,\"longitude\":-73.1462484227352,\"altitude\":0},{\"latitude\":-44.073983439707504,\"longitude\":-73.14721889368553,\"altitude\":0},{\"latitude\":-44.07448313022745,\"longitude\":-73.14792155475396,\"altitude\":0},{\"latitude\":-44.07706335728815,\"longitude\":-73.14829304319268,\"altitude\":0},{\"latitude\":-44.07775012652128,\"longitude\":-73.14752086154144,\"altitude\":0},{\"latitude\":-44.0780514866401,\"longitude\":-73.14623477716026,\"altitude\":0},{\"latitude\":-44.07776118558812,\"longitude\":-73.1448531554675,\"altitude\":0},{\"latitude\":-44.07711202319004,\"longitude\":-73.14410727325705,\"altitude\":0},{\"latitude\":-44.07469920787332,\"longitude\":-73.14437457250861,\"altitude\":0},{\"latitude\":-44.073997994839544,\"longitude\":-73.14515244372237,\"altitude\":0},{\"latitude\":-44.07374255577303,\"longitude\":-73.1462484227352,\"altitude\":0},{\"latitude\":-44.07387031079198,\"longitude\":-73.14611092198123,\"altitude\":0},{\"latitude\":-44.07390420683839,\"longitude\":-73.14607444014013,\"altitude\":0},{\"latitude\":-44.07387222947221,\"longitude\":-73.14610885693308,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"f0c6dd98-c1ab-4c54-782e-4d1660211cb4\",\"name\":\"Zona_Exterior\",\"vertices\":[{\"latitude\":-44.07374255577303,\"longitude\":-73.1462484227352,\"altitude\":0},{\"latitude\":-44.073997994839544,\"longitude\":-73.14515244372237,\"altitude\":0},{\"latitude\":-44.07469920787332,\"longitude\":-73.14437457250861,\"altitude\":0},{\"latitude\":-44.07711202319004,\"longitude\":-73.14410727325705,\"altitude\":0},{\"latitude\":-44.07776118558812,\"longitude\":-73.1448531554675,\"altitude\":0},{\"latitude\":-44.0780514866401,\"longitude\":-73.14623477716026,\"altitude\":0},{\"latitude\":-44.07775012652128,\"longitude\":-73.14752086154144,\"altitude\":0},{\"latitude\":-44.07706335728815,\"longitude\":-73.14829304319268,\"altitude\":0},{\"latitude\":-44.07448313022745,\"longitude\":-73.14792155475396,\"altitude\":0},{\"latitude\":-44.073983439707504,\"longitude\":-73.14721889368553,\"altitude\":0},{\"latitude\":-44.07374255577303,\"longitude\":-73.1462484227352,\"altitude\":0},{\"latitude\":-44.07382216459352,\"longitude\":-73.14748405824854,\"altitude\":0},{\"latitude\":-44.07452072582569,\"longitude\":-73.14880806167123,\"altitude\":0},{\"latitude\":-44.07687308411133,\"longitude\":-73.14984971219637,\"altitude\":0},{\"latitude\":-44.07875922220646,\"longitude\":-73.14851630581771,\"altitude\":0},{\"latitude\":-44.07930499344637,\"longitude\":-73.1459569583327,\"altitude\":0},{\"latitude\":-44.0787868894089,\"longitude\":-73.14360317404302,\"altitude\":0},{\"latitude\":-44.07680129315173,\"longitude\":-73.14215759046556,\"altitude\":0},{\"latitude\":-44.0747170925377,\"longitude\":-73.14339418422371,\"altitude\":0},{\"latitude\":-44.07379598766305,\"longitude\":-73.14479553681201,\"altitude\":0},{\"latitude\":-44.07374255577303,\"longitude\":-73.1462484227352,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"0e72211e-fd79-42ea-5bb2-6afc7b82ae30\",\"name\":\"Zona Activetraking\",\"vertices\":[{\"latitude\":-44.073730161413344,\"longitude\":-73.146234183569,\"altitude\":0},{\"latitude\":-44.07422097364848,\"longitude\":-73.14617689135783,\"altitude\":0},{\"latitude\":-44.074233598094175,\"longitude\":-73.14580191277581,\"altitude\":0},{\"latitude\":-44.07704410192048,\"longitude\":-73.14572569681793,\"altitude\":0},{\"latitude\":-44.077034295243784,\"longitude\":-73.14651288447517,\"altitude\":0},{\"latitude\":-44.074219704631474,\"longitude\":-73.14663687821725,\"altitude\":0},{\"latitude\":-44.07422097364848,\"longitude\":-73.14617689135783,\"altitude\":0},{\"latitude\":-44.073730161413344,\"longitude\":-73.146234183569,\"altitude\":0},{\"latitude\":-44.0736898275064,\"longitude\":-73.14772013009173,\"altitude\":0},{\"latitude\":-44.07450684418485,\"longitude\":-73.14893977262105,\"altitude\":0},{\"latitude\":-44.076834929104464,\"longitude\":-73.15003727341748,\"altitude\":0},{\"latitude\":-44.078804028936986,\"longitude\":-73.1486198952332,\"altitude\":0},{\"latitude\":-44.07938423431691,\"longitude\":-73.1460153262149,\"altitude\":0},{\"latitude\":-44.07886194321247,\"longitude\":-73.14348537730167,\"altitude\":0},{\"latitude\":-44.07682640438223,\"longitude\":-73.14195416385402,\"altitude\":0},{\"latitude\":-44.074651188726904,\"longitude\":-73.1432114575043,\"altitude\":0},{\"latitude\":-44.07355917099985,\"longitude\":-73.14482645529931,\"altitude\":0},{\"latitude\":-44.073730161413344,\"longitude\":-73.146234183569,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 3420,
        "wires": [
            [
                "aa87c2f1f5a09e19"
            ]
        ]
    },
    {
        "id": "aa87c2f1f5a09e19",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 3420,
        "wires": [
            [
                "c5742b27b71f8c76"
            ]
        ]
    },
    {
        "id": "16297b72279e0fdf",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3420,
        "wires": []
    },
    {
        "id": "2cad3d99ee9167d1",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT CASCADA",
        "info": "",
        "x": 150,
        "y": 3380,
        "wires": []
    },
    {
        "id": "25a1a697ef60fd01",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 3420,
        "wires": [
            [
                "16297b72279e0fdf"
            ]
        ]
    },
    {
        "id": "c5742b27b71f8c76",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "127",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Cascada;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Cascada\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3420,
        "wires": [
            [
                "25a1a697ef60fd01"
            ]
        ]
    },
    {
        "id": "4ff8fee9c909e484",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Concoto\":{\"codigo_centro\":\"128\",\"Modulo100\":{\"id\":\"28758ea6-fb87-4bc1-4ab0-84632cde4b76\",\"name\":\"MOD100\",\"vertices\":[{\"latitude\":-44.16327455059354,\"longitude\":-73.80582712590696,\"altitude\":0},{\"latitude\":-44.163495000819935,\"longitude\":-73.8065380003536,\"altitude\":0},{\"latitude\":-44.1658310051999,\"longitude\":-73.80517099576537,\"altitude\":0},{\"latitude\":-44.165614004026864,\"longitude\":-73.80446099094114,\"altitude\":0},{\"latitude\":-44.16327455059354,\"longitude\":-73.80582712590696,\"altitude\":0}]},\"Modulo200\":{\"id\":\"31214ae2-24c7-4c6a-68fd-f7e8931c4d07\",\"name\":\"MOD200\",\"vertices\":[{\"latitude\":-44.16280400864661,\"longitude\":-73.80522900283313,\"altitude\":0},{\"latitude\":-44.162583998639604,\"longitude\":-73.80453100078739,\"altitude\":0},{\"latitude\":-44.16517404737557,\"longitude\":-73.80305587996534,\"altitude\":0},{\"latitude\":-44.165419087331465,\"longitude\":-73.8037376246673,\"altitude\":0},{\"latitude\":-44.16280400864661,\"longitude\":-73.80522900283313,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"7d2328ac-10fa-497c-6d2a-5a065e239243\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-44.16271200908342,\"longitude\":-73.80609940646836,\"altitude\":0},{\"latitude\":-44.1630542878032,\"longitude\":-73.80545532068368,\"altitude\":0},{\"latitude\":-44.16343917789391,\"longitude\":-73.80675254691133,\"altitude\":0},{\"latitude\":-44.16598079635037,\"longitude\":-73.80527507635865,\"altitude\":0},{\"latitude\":-44.16562506805378,\"longitude\":-73.80417126636759,\"altitude\":0},{\"latitude\":-44.163009821654,\"longitude\":-73.80583300000914,\"altitude\":0},{\"latitude\":-44.162929626860496,\"longitude\":-73.80578556522536,\"altitude\":0},{\"latitude\":-44.162866089859754,\"longitude\":-73.80574571491444,\"altitude\":0},{\"latitude\":-44.16272626341976,\"longitude\":-73.80554581077662,\"altitude\":0},{\"latitude\":-44.16269748498454,\"longitude\":-73.80545140602335,\"altitude\":0},{\"latitude\":-44.16560352230973,\"longitude\":-73.80378034561639,\"altitude\":0},{\"latitude\":-44.165240440168766,\"longitude\":-73.80279010618702,\"altitude\":0},{\"latitude\":-44.162467213211386,\"longitude\":-73.80442341783414,\"altitude\":0},{\"latitude\":-44.16276373803954,\"longitude\":-73.80541330940588,\"altitude\":0},{\"latitude\":-44.16272626341976,\"longitude\":-73.80554581077662,\"altitude\":0},{\"latitude\":-44.162929626860496,\"longitude\":-73.80578556522536,\"altitude\":0},{\"latitude\":-44.16271200908342,\"longitude\":-73.80609940646836,\"altitude\":0},{\"latitude\":-44.162087123856445,\"longitude\":-73.80476764654232,\"altitude\":0},{\"latitude\":-44.16243705996868,\"longitude\":-73.80330696641789,\"altitude\":0},{\"latitude\":-44.16389595911307,\"longitude\":-73.80131236663757,\"altitude\":0},{\"latitude\":-44.16568586693878,\"longitude\":-73.80191465731292,\"altitude\":0},{\"latitude\":-44.16618523576905,\"longitude\":-73.80344776193519,\"altitude\":0},{\"latitude\":-44.16663410313539,\"longitude\":-73.80507472924107,\"altitude\":0},{\"latitude\":-44.16587663747337,\"longitude\":-73.8070771514587,\"altitude\":0},{\"latitude\":-44.16398012527063,\"longitude\":-73.80764815417501,\"altitude\":0},{\"latitude\":-44.16326751463132,\"longitude\":-73.80764815417501,\"altitude\":0},{\"latitude\":-44.16271200908342,\"longitude\":-73.80609940646836,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"08ea1613-14c6-4a05-54f1-a653e522af58\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-44.16267123244622,\"longitude\":-73.80601250257332,\"altitude\":0},{\"latitude\":-44.16271200908342,\"longitude\":-73.80609940646836,\"altitude\":0},{\"latitude\":-44.16285193024522,\"longitude\":-73.80650816991123,\"altitude\":0},{\"latitude\":-44.16326751463132,\"longitude\":-73.80764815417501,\"altitude\":0},{\"latitude\":-44.164006021239686,\"longitude\":-73.80764546945925,\"altitude\":0},{\"latitude\":-44.16530549114155,\"longitude\":-73.80725549168817,\"altitude\":0},{\"latitude\":-44.16587174416802,\"longitude\":-73.8070699375294,\"altitude\":0},{\"latitude\":-44.16663410313539,\"longitude\":-73.80507472924107,\"altitude\":0},{\"latitude\":-44.16624247547465,\"longitude\":-73.80364505061053,\"altitude\":0},{\"latitude\":-44.16568586693878,\"longitude\":-73.80191465731292,\"altitude\":0},{\"latitude\":-44.16505670316124,\"longitude\":-73.80170294629676,\"altitude\":0},{\"latitude\":-44.16388870646953,\"longitude\":-73.80131671437478,\"altitude\":0},{\"latitude\":-44.16243127786404,\"longitude\":-73.80331377894353,\"altitude\":0},{\"latitude\":-44.162087123856445,\"longitude\":-73.80476764654232,\"altitude\":0},{\"latitude\":-44.16266948510253,\"longitude\":-73.80600877860469,\"altitude\":0},{\"latitude\":-44.16224101240568,\"longitude\":-73.80556768383741,\"altitude\":0},{\"latitude\":-44.16196576552839,\"longitude\":-73.8048736906677,\"altitude\":0},{\"latitude\":-44.16182137329977,\"longitude\":-73.8037750432009,\"altitude\":0},{\"latitude\":-44.16209662070726,\"longitude\":-73.80126324927014,\"altitude\":0},{\"latitude\":-44.16318556559586,\"longitude\":-73.80044555354121,\"altitude\":0},{\"latitude\":-44.16406292482358,\"longitude\":-73.79997811026271,\"altitude\":0},{\"latitude\":-44.16494152228472,\"longitude\":-73.79992977674713,\"altitude\":0},{\"latitude\":-44.166340233812534,\"longitude\":-73.80043402219071,\"altitude\":0},{\"latitude\":-44.167409143907605,\"longitude\":-73.80347359829254,\"altitude\":0},{\"latitude\":-44.16745023112333,\"longitude\":-73.80577039358721,\"altitude\":0},{\"latitude\":-44.1666497237554,\"longitude\":-73.8073411295021,\"altitude\":0},{\"latitude\":-44.165688455266135,\"longitude\":-73.8080727775329,\"altitude\":0},{\"latitude\":-44.16449031767638,\"longitude\":-73.80823253305952,\"altitude\":0},{\"latitude\":-44.163533000934414,\"longitude\":-73.80831744767997,\"altitude\":0},{\"latitude\":-44.163213016731824,\"longitude\":-73.80777284939245,\"altitude\":0},{\"latitude\":-44.16285464459518,\"longitude\":-73.80680782837288,\"altitude\":0},{\"latitude\":-44.16267123244622,\"longitude\":-73.80601250257332,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"46ad6750-1e40-458f-418b-e30000d7c6eb\",\"name\":\"Zona Active Traking\",\"vertices\":[{\"latitude\":-44.16263911569958,\"longitude\":-73.80625404775772,\"altitude\":0},{\"latitude\":-44.16206934986357,\"longitude\":-73.80632464684435,\"altitude\":0},{\"latitude\":-44.16140769105569,\"longitude\":-73.804869967715,\"altitude\":0},{\"latitude\":-44.1616480167738,\"longitude\":-73.80158433678129,\"altitude\":0},{\"latitude\":-44.16293281885291,\"longitude\":-73.79930372276168,\"altitude\":0},{\"latitude\":-44.16601992617212,\"longitude\":-73.79900737134307,\"altitude\":0},{\"latitude\":-44.168607796376904,\"longitude\":-73.80325936431612,\"altitude\":0},{\"latitude\":-44.16770205456141,\"longitude\":-73.80640326234735,\"altitude\":0},{\"latitude\":-44.166491296849074,\"longitude\":-73.80863233686159,\"altitude\":0},{\"latitude\":-44.16481837657546,\"longitude\":-73.80943119624575,\"altitude\":0},{\"latitude\":-44.163200867492804,\"longitude\":-73.80904465143001,\"altitude\":0},{\"latitude\":-44.16217488145509,\"longitude\":-73.80636460747257,\"altitude\":0},{\"latitude\":-44.16263911569958,\"longitude\":-73.80625404775772,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 3500,
        "wires": [
            [
                "092bba8d8a7b2f65"
            ]
        ]
    },
    {
        "id": "092bba8d8a7b2f65",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 3500,
        "wires": [
            [
                "a3ed763ac990239d"
            ]
        ]
    },
    {
        "id": "fa5bb9873e07575d",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3500,
        "wires": []
    },
    {
        "id": "df3f4e777b516451",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT CONCOTO",
        "info": "",
        "x": 150,
        "y": 3460,
        "wires": []
    },
    {
        "id": "44207155bfc141e0",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 3500,
        "wires": [
            [
                "fa5bb9873e07575d"
            ]
        ]
    },
    {
        "id": "a3ed763ac990239d",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "128",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Concoto;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Concoto\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de Modulo200 al objeto de resultados\nresultados[\"coord_m_200\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3500,
        "wires": [
            [
                "44207155bfc141e0"
            ]
        ]
    },
    {
        "id": "b7980110d7161978",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Elefante\":{\"codigo_centro\":\"129\",\"Modulo100\":{\"id\":\"23cdfdad-c460-4973-504a-de3b911308f8\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-45.650269998796055,\"longitude\":-73.6095200000564,\"altitude\":0},{\"latitude\":-45.6507099860152,\"longitude\":-73.6099600091109,\"altitude\":0},{\"latitude\":-45.6522799870764,\"longitude\":-73.60661999881248,\"altitude\":0},{\"latitude\":-45.65183999536918,\"longitude\":-73.60617999571473,\"altitude\":0},{\"latitude\":-45.650269998796055,\"longitude\":-73.6095200000564,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"2a0e3b9e-7e88-48dc-72b2-1859a7ee3325\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-45.65027069439905,\"longitude\":-73.60982444687272,\"altitude\":0},{\"latitude\":-45.650095582081654,\"longitude\":-73.60962469326616,\"altitude\":0},{\"latitude\":-45.65009693997684,\"longitude\":-73.60932809107908,\"altitude\":0},{\"latitude\":-45.65168140674446,\"longitude\":-73.60586828021566,\"altitude\":0},{\"latitude\":-45.651932059851966,\"longitude\":-73.60581056949475,\"altitude\":0},{\"latitude\":-45.65250883843803,\"longitude\":-73.60638149161731,\"altitude\":0},{\"latitude\":-45.65252107747522,\"longitude\":-73.60671725933081,\"altitude\":0},{\"latitude\":-45.65093099856716,\"longitude\":-73.61016154726671,\"altitude\":0},{\"latitude\":-45.650729649797526,\"longitude\":-73.6102884146066,\"altitude\":0},{\"latitude\":-45.65049114040663,\"longitude\":-73.61005396713261,\"altitude\":0},{\"latitude\":-45.6501617278997,\"longitude\":-73.61050723964065,\"altitude\":0},{\"latitude\":-45.650780224456234,\"longitude\":-73.61074481279309,\"altitude\":0},{\"latitude\":-45.65140821247218,\"longitude\":-73.6108173708187,\"altitude\":0},{\"latitude\":-45.65222001839576,\"longitude\":-73.61021886984224,\"altitude\":0},{\"latitude\":-45.65325213154402,\"longitude\":-73.6079908690842,\"altitude\":0},{\"latitude\":-45.65346552719622,\"longitude\":-73.60702340894026,\"altitude\":0},{\"latitude\":-45.653201952513875,\"longitude\":-73.60557149323655,\"altitude\":0},{\"latitude\":-45.65213022506735,\"longitude\":-73.60456190705634,\"altitude\":0},{\"latitude\":-45.651225622106125,\"longitude\":-73.60473523517678,\"altitude\":0},{\"latitude\":-45.65061022151498,\"longitude\":-73.6055688433516,\"altitude\":0},{\"latitude\":-45.649722494218786,\"longitude\":-73.60751583229228,\"altitude\":0},{\"latitude\":-45.64951074965417,\"longitude\":-73.60868447513835,\"altitude\":0},{\"latitude\":-45.64974142312085,\"longitude\":-73.60965624533915,\"altitude\":0},{\"latitude\":-45.65011794798176,\"longitude\":-73.6104505854338,\"altitude\":0},{\"latitude\":-45.65027069439905,\"longitude\":-73.60982444687272,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"bd2364a8-ba4d-4348-748f-7857d49e8791\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-45.65011794798176,\"longitude\":-73.6104505854338,\"altitude\":0},{\"latitude\":-45.64974142312085,\"longitude\":-73.60965624533915,\"altitude\":0},{\"latitude\":-45.64951074965417,\"longitude\":-73.60868447513835,\"altitude\":0},{\"latitude\":-45.649722494218786,\"longitude\":-73.60751583229228,\"altitude\":0},{\"latitude\":-45.65061022151498,\"longitude\":-73.6055688433516,\"altitude\":0},{\"latitude\":-45.651225622106125,\"longitude\":-73.60473523517678,\"altitude\":0},{\"latitude\":-45.65213022506735,\"longitude\":-73.60456190705634,\"altitude\":0},{\"latitude\":-45.653201952513875,\"longitude\":-73.60557149323655,\"altitude\":0},{\"latitude\":-45.65346552719622,\"longitude\":-73.60702340894026,\"altitude\":0},{\"latitude\":-45.65325213154402,\"longitude\":-73.6079908690842,\"altitude\":0},{\"latitude\":-45.65222001839576,\"longitude\":-73.61021886984224,\"altitude\":0},{\"latitude\":-45.65140821247218,\"longitude\":-73.6108173708187,\"altitude\":0},{\"latitude\":-45.650780224456234,\"longitude\":-73.61074481279309,\"altitude\":0},{\"latitude\":-45.6501617278997,\"longitude\":-73.61050723964065,\"altitude\":0},{\"latitude\":-45.65101394169763,\"longitude\":-73.61106835777821,\"altitude\":0},{\"latitude\":-45.65192324862584,\"longitude\":-73.61093839712223,\"altitude\":0},{\"latitude\":-45.654192144659525,\"longitude\":-73.60921499229165,\"altitude\":0},{\"latitude\":-45.65462114208055,\"longitude\":-73.60781047411274,\"altitude\":0},{\"latitude\":-45.65411088272301,\"longitude\":-73.60480269495841,\"altitude\":0},{\"latitude\":-45.65243200708866,\"longitude\":-73.60316326366166,\"altitude\":0},{\"latitude\":-45.65040392470658,\"longitude\":-73.60338839457167,\"altitude\":0},{\"latitude\":-45.649381596522176,\"longitude\":-73.60495982847326,\"altitude\":0},{\"latitude\":-45.64936060452465,\"longitude\":-73.60865531377875,\"altitude\":0},{\"latitude\":-45.64969442546254,\"longitude\":-73.60989544348381,\"altitude\":0},{\"latitude\":-45.65011794798176,\"longitude\":-73.6104505854338,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"472da4a1-d244-413c-7707-a83375aa760d\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-45.6522799870764,\"longitude\":-73.60661999881248,\"altitude\":0},{\"latitude\":-45.65183999536918,\"longitude\":-73.60617999571473,\"altitude\":0},{\"latitude\":-45.650269998796055,\"longitude\":-73.6095200000564,\"altitude\":0},{\"latitude\":-45.6504703890924,\"longitude\":-73.60972039986893,\"altitude\":0},{\"latitude\":-45.65017803224158,\"longitude\":-73.61027383799409,\"altitude\":0},{\"latitude\":-45.64948670245722,\"longitude\":-73.61019703283088,\"altitude\":0},{\"latitude\":-45.6490375260721,\"longitude\":-73.6095344261602,\"altitude\":0},{\"latitude\":-45.648936135843044,\"longitude\":-73.60866236660512,\"altitude\":0},{\"latitude\":-45.649374885499164,\"longitude\":-73.60342884116106,\"altitude\":0},{\"latitude\":-45.65213180461977,\"longitude\":-73.60205555014544,\"altitude\":0},{\"latitude\":-45.65469960792155,\"longitude\":-73.60444164223736,\"altitude\":0},{\"latitude\":-45.65492066371612,\"longitude\":-73.60876781628714,\"altitude\":0},{\"latitude\":-45.651844670532896,\"longitude\":-73.61179549721277,\"altitude\":0},{\"latitude\":-45.65109310122811,\"longitude\":-73.61186385154724,\"altitude\":0},{\"latitude\":-45.65049311935501,\"longitude\":-73.61152052879332,\"altitude\":0},{\"latitude\":-45.65018853203782,\"longitude\":-73.61027812954488,\"altitude\":0},{\"latitude\":-45.650484583623495,\"longitude\":-73.6097345951013,\"altitude\":0},{\"latitude\":-45.6507099860152,\"longitude\":-73.6099600091109,\"altitude\":0},{\"latitude\":-45.6522799870764,\"longitude\":-73.60661999881248,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 3580,
        "wires": [
            [
                "2981d4fb94554ad8"
            ]
        ]
    },
    {
        "id": "2981d4fb94554ad8",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 3580,
        "wires": [
            [
                "3bdbb485dee1dd67"
            ]
        ]
    },
    {
        "id": "241c6ad8cb5eaedd",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3580,
        "wires": []
    },
    {
        "id": "d3d0d356014fbb27",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT ELEFANTE",
        "info": "",
        "x": 150,
        "y": 3540,
        "wires": []
    },
    {
        "id": "ed722d2f18b3e1b8",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 3580,
        "wires": [
            [
                "241c6ad8cb5eaedd"
            ]
        ]
    },
    {
        "id": "3bdbb485dee1dd67",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "129",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Elefante;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Elefante\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3580,
        "wires": [
            [
                "ed722d2f18b3e1b8"
            ]
        ]
    },
    {
        "id": "b1041f746faa5ad0",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"EsteroFrio\":{\"codigo_centro\":\"130\",\"Modulo100\":{\"id\":\"4c4adc9f-1abe-42c4-6726-dbcd504398e4\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-45.40915794668436,\"longitude\":-72.94240067425481,\"altitude\":0},{\"latitude\":-45.4096345328886,\"longitude\":-72.94244369763737,\"altitude\":0},{\"latitude\":-45.40956624902099,\"longitude\":-72.9457040732317,\"altitude\":0},{\"latitude\":-45.40904541372315,\"longitude\":-72.94567757712099,\"altitude\":0},{\"latitude\":-45.40915794668436,\"longitude\":-72.94240067425481,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"0898af5c-1bfe-4f47-54af-f59682d6bacc\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-45.40934543544128,\"longitude\":-72.94207844991529,\"altitude\":0},{\"latitude\":-45.40873031566053,\"longitude\":-72.94244501935377,\"altitude\":0},{\"latitude\":-45.40810891215331,\"longitude\":-72.94326756301511,\"altitude\":0},{\"latitude\":-45.40811112046232,\"longitude\":-72.94567511460922,\"altitude\":0},{\"latitude\":-45.4083249387602,\"longitude\":-72.946503046456,\"altitude\":0},{\"latitude\":-45.4087800958876,\"longitude\":-72.94692615103948,\"altitude\":0},{\"latitude\":-45.40979949738111,\"longitude\":-72.94699569646814,\"altitude\":0},{\"latitude\":-45.41038905169352,\"longitude\":-72.94635739280011,\"altitude\":0},{\"latitude\":-45.41079497030782,\"longitude\":-72.94488223409512,\"altitude\":0},{\"latitude\":-45.41030739912387,\"longitude\":-72.94241176700756,\"altitude\":0},{\"latitude\":-45.409392802341365,\"longitude\":-72.94208042466765,\"altitude\":0},{\"latitude\":-45.40978201250203,\"longitude\":-72.9423915248762,\"altitude\":0},{\"latitude\":-45.40970942577716,\"longitude\":-72.9459512802868,\"altitude\":0},{\"latitude\":-45.40891734813829,\"longitude\":-72.94593961807236,\"altitude\":0},{\"latitude\":-45.40902674625315,\"longitude\":-72.94240099190361,\"altitude\":0},{\"latitude\":-45.40934543544128,\"longitude\":-72.94207844991529,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"db76287c-f3c5-4130-4c8f-0e0aeb33898b\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-45.40934543544128,\"longitude\":-72.94207844991529,\"altitude\":0},{\"latitude\":-45.40832684716538,\"longitude\":-72.94221868294808,\"altitude\":0},{\"latitude\":-45.407704624087174,\"longitude\":-72.94336514341317,\"altitude\":0},{\"latitude\":-45.40761741172336,\"longitude\":-72.94470450105634,\"altitude\":0},{\"latitude\":-45.40791009666411,\"longitude\":-72.94653799479731,\"altitude\":0},{\"latitude\":-45.408341012358036,\"longitude\":-72.94787031241223,\"altitude\":0},{\"latitude\":-45.40818543660587,\"longitude\":-72.94860091468497,\"altitude\":0},{\"latitude\":-45.40871452280707,\"longitude\":-72.9491455882281,\"altitude\":0},{\"latitude\":-45.41125343349456,\"longitude\":-72.9485754923949,\"altitude\":0},{\"latitude\":-45.41229941712808,\"longitude\":-72.94647532125745,\"altitude\":0},{\"latitude\":-45.41050943219659,\"longitude\":-72.94205604771764,\"altitude\":0},{\"latitude\":-45.409392802341365,\"longitude\":-72.94208042466765,\"altitude\":0},{\"latitude\":-45.41030739912387,\"longitude\":-72.94241176700756,\"altitude\":0},{\"latitude\":-45.41079497030782,\"longitude\":-72.94488223409512,\"altitude\":0},{\"latitude\":-45.41038905169352,\"longitude\":-72.94635739280011,\"altitude\":0},{\"latitude\":-45.40979949738111,\"longitude\":-72.94699569646814,\"altitude\":0},{\"latitude\":-45.4087800958876,\"longitude\":-72.94692615103948,\"altitude\":0},{\"latitude\":-45.4083249387602,\"longitude\":-72.946503046456,\"altitude\":0},{\"latitude\":-45.40811112046232,\"longitude\":-72.94567511460922,\"altitude\":0},{\"latitude\":-45.40810891215331,\"longitude\":-72.94326756301511,\"altitude\":0},{\"latitude\":-45.40873031566053,\"longitude\":-72.94244501935377,\"altitude\":0},{\"latitude\":-45.40927140640505,\"longitude\":-72.94212256638345,\"altitude\":0},{\"latitude\":-45.40934543544128,\"longitude\":-72.94207844991529,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"15ef3e6b-a8f1-4174-5b57-b96e6cd6574e\",\"name\":\"Active tracking y clasificacion\",\"vertices\":[{\"latitude\":-45.409499900030724,\"longitude\":-72.94176578565384,\"altitude\":0},{\"latitude\":-45.408498006955774,\"longitude\":-72.94184298283874,\"altitude\":0},{\"latitude\":-45.407830117242916,\"longitude\":-72.94230026052409,\"altitude\":0},{\"latitude\":-45.40742245255941,\"longitude\":-72.9434832053417,\"altitude\":0},{\"latitude\":-45.40794326154757,\"longitude\":-72.94674575328825,\"altitude\":0},{\"latitude\":-45.408432854106145,\"longitude\":-72.94800639152527,\"altitude\":0},{\"latitude\":-45.40818543660587,\"longitude\":-72.94860091468497,\"altitude\":0},{\"latitude\":-45.40871452280705,\"longitude\":-72.9491455882281,\"altitude\":0},{\"latitude\":-45.40966246593451,\"longitude\":-72.94890761375427,\"altitude\":0},{\"latitude\":-45.41068680818292,\"longitude\":-72.94891834259033,\"altitude\":0},{\"latitude\":-45.41137007308913,\"longitude\":-72.94872425106556,\"altitude\":0},{\"latitude\":-45.411925042674184,\"longitude\":-72.94785325459655,\"altitude\":0},{\"latitude\":-45.41252611526909,\"longitude\":-72.94696522230277,\"altitude\":0},{\"latitude\":-45.4120425267112,\"longitude\":-72.94483065605164,\"altitude\":0},{\"latitude\":-45.411564718140376,\"longitude\":-72.94338779955255,\"altitude\":0},{\"latitude\":-45.41109891260859,\"longitude\":-72.94231248213879,\"altitude\":0},{\"latitude\":-45.41060192256892,\"longitude\":-72.94160638114865,\"altitude\":0},{\"latitude\":-45.40993675540127,\"longitude\":-72.9416012763977,\"altitude\":0},{\"latitude\":-45.40988654238877,\"longitude\":-72.94216454029083,\"altitude\":0},{\"latitude\":-45.4096345328886,\"longitude\":-72.94244369763737,\"altitude\":0},{\"latitude\":-45.40956624902099,\"longitude\":-72.9457040732317,\"altitude\":0},{\"latitude\":-45.40904541372315,\"longitude\":-72.94567757712099,\"altitude\":0},{\"latitude\":-45.40915794668436,\"longitude\":-72.94240067425481,\"altitude\":0},{\"latitude\":-45.4096345328886,\"longitude\":-72.94244369763737,\"altitude\":0},{\"latitude\":-45.409880265672875,\"longitude\":-72.94210195628693,\"altitude\":0},{\"latitude\":-45.40986771246884,\"longitude\":-72.94172644702483,\"altitude\":0},{\"latitude\":-45.409499900030724,\"longitude\":-72.94176578565384,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 3660,
        "wires": [
            [
                "2445290ed7262e0a"
            ]
        ]
    },
    {
        "id": "2445290ed7262e0a",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 3660,
        "wires": [
            [
                "def40279b18c9d57"
            ]
        ]
    },
    {
        "id": "698c23a06d9c769b",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3660,
        "wires": []
    },
    {
        "id": "cc06449e7d7a1b1a",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT ESTERO FRIO",
        "info": "",
        "x": 160,
        "y": 3620,
        "wires": []
    },
    {
        "id": "68cfff475ac46947",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 3660,
        "wires": [
            [
                "698c23a06d9c769b"
            ]
        ]
    },
    {
        "id": "def40279b18c9d57",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "130",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.EsteroFrio;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"EsteroFrio\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3660,
        "wires": [
            [
                "68cfff475ac46947"
            ]
        ]
    },
    {
        "id": "746934d2c41040ca",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"FislasWagner\":{\"codigo_centro\":\"131\",\"Modulo100\":{\"id\":\"93d6f88d-f7be-4559-6a16-9c7c75d99551\",\"name\":\"Mod100\",\"vertices\":[{\"latitude\":-52.253831989329804,\"longitude\":-72.88401497440645,\"altitude\":0},{\"latitude\":-52.253817000093484,\"longitude\":-72.88336599769536,\"altitude\":0},{\"latitude\":-52.25533400441904,\"longitude\":-72.88328100519719,\"altitude\":0},{\"latitude\":-52.25533400441904,\"longitude\":-72.88328100519719,\"altitude\":0},{\"latitude\":-52.25533400441904,\"longitude\":-72.88328100519719,\"altitude\":0},{\"latitude\":-52.255346836138045,\"longitude\":-72.88387934763519,\"altitude\":0},{\"latitude\":-52.253831989329804,\"longitude\":-72.88401497440645,\"altitude\":0}]},\"Modulo200\":{\"id\":\"a6d0c3b9-2995-4b11-6e87-60b06e429012\",\"name\":\"Mod200\",\"vertices\":[{\"latitude\":-52.253844016953586,\"longitude\":-72.88486797711812,\"altitude\":0},{\"latitude\":-52.25539899720703,\"longitude\":-72.88473997497931,\"altitude\":0},{\"latitude\":-52.25538100370329,\"longitude\":-72.88413499016315,\"altitude\":0},{\"latitude\":-52.25383785804537,\"longitude\":-72.88423576731468,\"altitude\":0},{\"latitude\":-52.253844016953586,\"longitude\":-72.88486797711812,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"f1e50c10-4563-455d-68ce-e1e1235634c7\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-52.2558667503824,\"longitude\":-72.88367561995983,\"altitude\":0},{\"latitude\":-52.25601278890171,\"longitude\":-72.88404684256115,\"altitude\":0},{\"latitude\":-52.255489527413005,\"longitude\":-72.8840759396553,\"altitude\":0},{\"latitude\":-52.2554427334804,\"longitude\":-72.88312375545502,\"altitude\":0},{\"latitude\":-52.253694903692036,\"longitude\":-72.88324311375618,\"altitude\":0},{\"latitude\":-52.25370311348097,\"longitude\":-72.88410812616347,\"altitude\":0},{\"latitude\":-52.25371624914008,\"longitude\":-72.88505494594575,\"altitude\":0},{\"latitude\":-52.25482455636843,\"longitude\":-72.885008007288,\"altitude\":0},{\"latitude\":-52.25548870646725,\"longitude\":-72.88500130176544,\"altitude\":0},{\"latitude\":-52.255489527413005,\"longitude\":-72.8840759396553,\"altitude\":0},{\"latitude\":-52.25577150155213,\"longitude\":-72.88406023716945,\"altitude\":0},{\"latitude\":-52.256013316524445,\"longitude\":-72.88404870345762,\"altitude\":0},{\"latitude\":-52.25583596516782,\"longitude\":-72.884513810277,\"altitude\":0},{\"latitude\":-52.25577400085505,\"longitude\":-72.88523543666821,\"altitude\":0},{\"latitude\":-52.25520219546877,\"longitude\":-72.885819375515,\"altitude\":0},{\"latitude\":-52.25434429330286,\"longitude\":-72.88602724671364,\"altitude\":0},{\"latitude\":-52.2536284043457,\"longitude\":-72.88587033748625,\"altitude\":0},{\"latitude\":-52.25323433209937,\"longitude\":-72.88511931896208,\"altitude\":0},{\"latitude\":-52.25321791234647,\"longitude\":-72.8833222389221,\"altitude\":0},{\"latitude\":-52.25377618053548,\"longitude\":-72.88243710994719,\"altitude\":0},{\"latitude\":-52.254925534094966,\"longitude\":-72.88230299949646,\"altitude\":0},{\"latitude\":-52.25557244285656,\"longitude\":-72.88258194923401,\"altitude\":0},{\"latitude\":-52.25578876113058,\"longitude\":-72.88319282233715,\"altitude\":0},{\"latitude\":-52.2558667503824,\"longitude\":-72.88367561995983,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"e8d00714-b675-4384-7e90-458a47541125\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-52.2558667503824,\"longitude\":-72.88367561995983,\"altitude\":0},{\"latitude\":-52.25578876113058,\"longitude\":-72.88319282233715,\"altitude\":0},{\"latitude\":-52.25557244285656,\"longitude\":-72.88258194923401,\"altitude\":0},{\"latitude\":-52.254925534094966,\"longitude\":-72.88230299949646,\"altitude\":0},{\"latitude\":-52.25377618053548,\"longitude\":-72.88243710994719,\"altitude\":0},{\"latitude\":-52.25321791234647,\"longitude\":-72.8833222389221,\"altitude\":0},{\"latitude\":-52.25323433209937,\"longitude\":-72.88511931896208,\"altitude\":0},{\"latitude\":-52.2536284043457,\"longitude\":-72.88587033748625,\"altitude\":0},{\"latitude\":-52.254343061852424,\"longitude\":-72.88602959364651,\"altitude\":0},{\"latitude\":-52.25520096404215,\"longitude\":-72.88582172244786,\"altitude\":0},{\"latitude\":-52.25577400085505,\"longitude\":-72.88523543666821,\"altitude\":0},{\"latitude\":-52.25583480848832,\"longitude\":-72.88451379069393,\"altitude\":0},{\"latitude\":-52.256013316524445,\"longitude\":-72.88404870345762,\"altitude\":0},{\"latitude\":-52.25603227185328,\"longitude\":-72.88405314087868,\"altitude\":0},{\"latitude\":-52.25608635096002,\"longitude\":-72.88582071661949,\"altitude\":0},{\"latitude\":-52.255321643688816,\"longitude\":-72.88702335208653,\"altitude\":0},{\"latitude\":-52.25430037154929,\"longitude\":-72.88709040731189,\"altitude\":0},{\"latitude\":-52.253533900524744,\"longitude\":-72.88708507989213,\"altitude\":0},{\"latitude\":-52.2532128040222,\"longitude\":-72.88709700085745,\"altitude\":0},{\"latitude\":-52.25295738485389,\"longitude\":-72.88694202863552,\"altitude\":0},{\"latitude\":-52.25295738485389,\"longitude\":-72.88694202863552,\"altitude\":0},{\"latitude\":-52.252643582165184,\"longitude\":-72.88665592612232,\"altitude\":0},{\"latitude\":-52.252315181578744,\"longitude\":-72.88607180111283,\"altitude\":0},{\"latitude\":-52.25207435300368,\"longitude\":-72.8856307263777,\"altitude\":0},{\"latitude\":-52.251921097665814,\"longitude\":-72.88499891750689,\"altitude\":0},{\"latitude\":-52.251951931097985,\"longitude\":-72.88413092494011,\"altitude\":0},{\"latitude\":-52.252062767475294,\"longitude\":-72.88323238492012,\"altitude\":0},{\"latitude\":-52.25227766610678,\"longitude\":-72.88267381489275,\"altitude\":0},{\"latitude\":-52.25256358024605,\"longitude\":-72.88221314549446,\"altitude\":0},{\"latitude\":-52.25326060369138,\"longitude\":-72.8815895318985,\"altitude\":0},{\"latitude\":-52.25491075688106,\"longitude\":-72.88122743368149,\"altitude\":0},{\"latitude\":-52.25574566174839,\"longitude\":-72.88167670369148,\"altitude\":0},{\"latitude\":-52.25609456030632,\"longitude\":-72.88240760564803,\"altitude\":0},{\"latitude\":-52.25603227185328,\"longitude\":-72.88405314087868,\"altitude\":0},{\"latitude\":-52.25601278890171,\"longitude\":-72.88404684256115,\"altitude\":0},{\"latitude\":-52.2558667503824,\"longitude\":-72.88367561995983,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"fe794929-16d4-4059-70f7-b17454e7c6a2\",\"name\":\"Active tracking\",\"vertices\":[{\"latitude\":-52.25595685605577,\"longitude\":-72.88401042104604,\"altitude\":0},{\"latitude\":-52.25541401394206,\"longitude\":-72.88391338049797,\"altitude\":0},{\"latitude\":-52.25539019286566,\"longitude\":-72.88320958614348,\"altitude\":0},{\"latitude\":-52.25376140293866,\"longitude\":-72.88330614566803,\"altitude\":0},{\"latitude\":-52.253771528583286,\"longitude\":-72.8839875255727,\"altitude\":0},{\"latitude\":-52.253781106400005,\"longitude\":-72.88418591022491,\"altitude\":0},{\"latitude\":-52.25379095812739,\"longitude\":-72.8849744796753,\"altitude\":0},{\"latitude\":-52.2554427334804,\"longitude\":-72.88488864898682,\"altitude\":0},{\"latitude\":-52.25544601726675,\"longitude\":-72.88415372371674,\"altitude\":0},{\"latitude\":-52.25541401394206,\"longitude\":-72.88391338049797,\"altitude\":0},{\"latitude\":-52.25605843917122,\"longitude\":-72.88405179977416,\"altitude\":0},{\"latitude\":-52.256101214750295,\"longitude\":-72.8858044447394,\"altitude\":0},{\"latitude\":-52.256001909994936,\"longitude\":-72.88595351577295,\"altitude\":0},{\"latitude\":-52.255321643688816,\"longitude\":-72.88702335208653,\"altitude\":0},{\"latitude\":-52.253790298523185,\"longitude\":-72.88771349873983,\"altitude\":0},{\"latitude\":-52.25269623074956,\"longitude\":-72.88757378366732,\"altitude\":0},{\"latitude\":-52.25178608651988,\"longitude\":-72.88602590560912,\"altitude\":0},{\"latitude\":-52.25168099656532,\"longitude\":-72.88448095321654,\"altitude\":0},{\"latitude\":-52.25185176761505,\"longitude\":-72.88276433944701,\"altitude\":0},{\"latitude\":-52.25237154546247,\"longitude\":-72.8816723307919,\"altitude\":0},{\"latitude\":-52.25311282578393,\"longitude\":-72.88091897964478,\"altitude\":0},{\"latitude\":-52.25491075688106,\"longitude\":-72.88122743368149,\"altitude\":0},{\"latitude\":-52.25574566174839,\"longitude\":-72.88167670369148,\"altitude\":0},{\"latitude\":-52.25609456030632,\"longitude\":-72.88240760564803,\"altitude\":0},{\"latitude\":-52.25604694607662,\"longitude\":-72.88395524024962,\"altitude\":0},{\"latitude\":-52.25595685605577,\"longitude\":-72.88401042104604,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 3740,
        "wires": [
            [
                "98bb75bffc3a7f9d"
            ]
        ]
    },
    {
        "id": "98bb75bffc3a7f9d",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 3740,
        "wires": [
            [
                "a2bce4ae41eb73e6"
            ]
        ]
    },
    {
        "id": "2e8297b0992dcba7",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3740,
        "wires": []
    },
    {
        "id": "60e35e06c5e810cd",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT FRENTE ISLAS WAGNER",
        "info": "",
        "x": 200,
        "y": 3700,
        "wires": []
    },
    {
        "id": "5f317edb7f637067",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 3740,
        "wires": [
            [
                "2e8297b0992dcba7"
            ]
        ]
    },
    {
        "id": "a2bce4ae41eb73e6",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "131",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.FislasWagner;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"FislasWagner\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de Modulo200 al objeto de resultados\nresultados[\"coord_m_200\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3740,
        "wires": [
            [
                "5f317edb7f637067"
            ]
        ]
    },
    {
        "id": "72713ec231bb0747",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Graffer\":{\"codigo_centro\":\"132\",\"Modulo100\":{\"id\":\"bdb5f803-1d2e-4ec2-6e7f-c922b0ee5a06\",\"name\":\"Módulo 100\",\"vertices\":[{\"latitude\":-44.78878165047843,\"longitude\":-72.93769598007204,\"altitude\":0},{\"latitude\":-44.78925373813416,\"longitude\":-72.93725073337556,\"altitude\":0},{\"latitude\":-44.7884767118489,\"longitude\":-72.93561575137244,\"altitude\":0},{\"latitude\":-44.78754049838325,\"longitude\":-72.93364584445952,\"altitude\":0},{\"latitude\":-44.78707981857518,\"longitude\":-72.9340749979019,\"altitude\":0},{\"latitude\":-44.78878165047843,\"longitude\":-72.93769598007204,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"32a10fa3-15b1-4f58-45d5-55e7c9dc05f9\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-44.78726772966388,\"longitude\":-72.93644563809148,\"altitude\":0},{\"latitude\":-44.787696868441756,\"longitude\":-72.9357714859261,\"altitude\":0},{\"latitude\":-44.78689566276268,\"longitude\":-72.93400441319051,\"altitude\":0},{\"latitude\":-44.78758033114027,\"longitude\":-72.93338082736787,\"altitude\":0},{\"latitude\":-44.7894153681239,\"longitude\":-72.9372897941324,\"altitude\":0},{\"latitude\":-44.788713427639415,\"longitude\":-72.93796751346463,\"altitude\":0},{\"latitude\":-44.78785581165513,\"longitude\":-72.93622036243579,\"altitude\":0},{\"latitude\":-44.78727918212762,\"longitude\":-72.93646705093214,\"altitude\":0},{\"latitude\":-44.788343470218514,\"longitude\":-72.93788842759882,\"altitude\":0},{\"latitude\":-44.78887438168815,\"longitude\":-72.93810930171853,\"altitude\":0},{\"latitude\":-44.78956283105436,\"longitude\":-72.93781128486837,\"altitude\":0},{\"latitude\":-44.79023904378228,\"longitude\":-72.93683302403133,\"altitude\":0},{\"latitude\":-44.79022121969735,\"longitude\":-72.93520254025147,\"altitude\":0},{\"latitude\":-44.78921350812309,\"longitude\":-72.93305354186717,\"altitude\":0},{\"latitude\":-44.788178162095484,\"longitude\":-72.9324619568428,\"altitude\":0},{\"latitude\":-44.787229844999175,\"longitude\":-72.93304047009924,\"altitude\":0},{\"latitude\":-44.78683053153791,\"longitude\":-72.93406894240593,\"altitude\":0},{\"latitude\":-44.786871237993964,\"longitude\":-72.93483334527558,\"altitude\":0},{\"latitude\":-44.78726772966388,\"longitude\":-72.93644563809148,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"a709d5bf-ff32-4a83-7fe6-2a32114d8991\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-44.78727918212762,\"longitude\":-72.93646705093214,\"altitude\":0},{\"latitude\":-44.788343470218514,\"longitude\":-72.93788842759882,\"altitude\":0},{\"latitude\":-44.78887438168815,\"longitude\":-72.93810930171853,\"altitude\":0},{\"latitude\":-44.78956283105436,\"longitude\":-72.93781128486837,\"altitude\":0},{\"latitude\":-44.79023904378228,\"longitude\":-72.93683302403133,\"altitude\":0},{\"latitude\":-44.79022121969735,\"longitude\":-72.93520254025147,\"altitude\":0},{\"latitude\":-44.78921350812309,\"longitude\":-72.93305354186717,\"altitude\":0},{\"latitude\":-44.788178162095484,\"longitude\":-72.9324619568428,\"altitude\":0},{\"latitude\":-44.787229844999175,\"longitude\":-72.93304047009924,\"altitude\":0},{\"latitude\":-44.78683053153791,\"longitude\":-72.93406894240593,\"altitude\":0},{\"latitude\":-44.786871237993964,\"longitude\":-72.93483334527558,\"altitude\":0},{\"latitude\":-44.78726772966388,\"longitude\":-72.93644563809148,\"altitude\":0},{\"latitude\":-44.786720764592516,\"longitude\":-72.93458909090631,\"altitude\":0},{\"latitude\":-44.78665782772219,\"longitude\":-72.93386810134241,\"altitude\":0},{\"latitude\":-44.78700864158604,\"longitude\":-72.93248646155142,\"altitude\":0},{\"latitude\":-44.78805498201848,\"longitude\":-72.93119022597483,\"altitude\":0},{\"latitude\":-44.78953295505886,\"longitude\":-72.93120977425072,\"altitude\":0},{\"latitude\":-44.7904838695025,\"longitude\":-72.93213858162615,\"altitude\":0},{\"latitude\":-44.79129930528008,\"longitude\":-72.93395232953861,\"altitude\":0},{\"latitude\":-44.79152573432469,\"longitude\":-72.93557899452126,\"altitude\":0},{\"latitude\":-44.791015686556186,\"longitude\":-72.93727093289642,\"altitude\":0},{\"latitude\":-44.7895581693879,\"longitude\":-72.93840951480163,\"altitude\":0},{\"latitude\":-44.788898000987295,\"longitude\":-72.93849223426773,\"altitude\":0},{\"latitude\":-44.78834498454987,\"longitude\":-72.93813417377521,\"altitude\":0},{\"latitude\":-44.78727918212762,\"longitude\":-72.93646705093214,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"d020ee3f-bb39-47cf-7414-dec973167bab\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-44.787274941670006,\"longitude\":-72.9365050792694,\"altitude\":0},{\"latitude\":-44.78792455404937,\"longitude\":-72.93587476015091,\"altitude\":0},{\"latitude\":-44.78708005653057,\"longitude\":-72.93407566845417,\"altitude\":0},{\"latitude\":-44.78754073633675,\"longitude\":-72.93364584445952,\"altitude\":0},{\"latitude\":-44.78924897920528,\"longitude\":-72.93724000453948,\"altitude\":0},{\"latitude\":-44.78878640944584,\"longitude\":-72.937693297863,\"altitude\":0},{\"latitude\":-44.78792459489192,\"longitude\":-72.93587241236172,\"altitude\":0},{\"latitude\":-44.787274941670006,\"longitude\":-72.9365050792694,\"altitude\":0},{\"latitude\":-44.788158095565116,\"longitude\":-72.93827003936234,\"altitude\":0},{\"latitude\":-44.78942786590344,\"longitude\":-72.93942915193267,\"altitude\":0},{\"latitude\":-44.79195087649574,\"longitude\":-72.93776661004442,\"altitude\":0},{\"latitude\":-44.79220372474586,\"longitude\":-72.93460922532033,\"altitude\":0},{\"latitude\":-44.790672892327365,\"longitude\":-72.9313654618322,\"altitude\":0},{\"latitude\":-44.78808255198282,\"longitude\":-72.92975113698482,\"altitude\":0},{\"latitude\":-44.78638744291854,\"longitude\":-72.93182190861017,\"altitude\":0},{\"latitude\":-44.78635452597199,\"longitude\":-72.93446660041809,\"altitude\":0},{\"latitude\":-44.787274941670006,\"longitude\":-72.9365050792694,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 3820,
        "wires": [
            [
                "efe5841b7c2a10de"
            ]
        ]
    },
    {
        "id": "efe5841b7c2a10de",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 3820,
        "wires": [
            [
                "82b51cf5c3c2af05"
            ]
        ]
    },
    {
        "id": "871b018ee1c89a60",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3820,
        "wires": []
    },
    {
        "id": "667a02ad249bde96",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT GRAFFER",
        "info": "",
        "x": 150,
        "y": 3780,
        "wires": []
    },
    {
        "id": "73df698d9fa9796b",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 3820,
        "wires": [
            [
                "871b018ee1c89a60"
            ]
        ]
    },
    {
        "id": "82b51cf5c3c2af05",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "132",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Graffer;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Graffer\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3820,
        "wires": [
            [
                "73df698d9fa9796b"
            ]
        ]
    },
    {
        "id": "9bb8c4842b374fbc",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Herradura\":{\"codigo_centro\":\"133\",\"Modulo100\":{\"id\":\"436e4287-daa8-4610-7cb7-a9b7d0261e9b\",\"name\":\"Mod100\",\"vertices\":[{\"latitude\":-41.56960235260458,\"longitude\":-72.96350587159397,\"altitude\":0},{\"latitude\":-41.570162970664605,\"longitude\":-72.96408858150244,\"altitude\":0},{\"latitude\":-41.571048578137976,\"longitude\":-72.96252512270917,\"altitude\":0},{\"latitude\":-41.57050298512041,\"longitude\":-72.96193650644263,\"altitude\":0},{\"latitude\":-41.56960235260458,\"longitude\":-72.96350587159397,\"altitude\":0}]},\"Modulo200\":{\"id\":\"7497e4a7-5d42-4630-60b2-719afef2eab0\",\"name\":\"Mod200\",\"vertices\":[{\"latitude\":-41.56798283148659,\"longitude\":-72.9640824484442,\"altitude\":0},{\"latitude\":-41.56860978734465,\"longitude\":-72.96471348376032,\"altitude\":0},{\"latitude\":-41.56789678043536,\"longitude\":-72.96592498623266,\"altitude\":0},{\"latitude\":-41.567275220995285,\"longitude\":-72.96530015952291,\"altitude\":0},{\"latitude\":-41.56798283148659,\"longitude\":-72.9640824484442,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"28c06adb-5339-4476-61dd-b14392936c40\",\"name\":\"Interior\",\"vertices\":[{\"latitude\":-41.570018889177156,\"longitude\":-72.96554146786862,\"altitude\":0},{\"latitude\":-41.56888875286486,\"longitude\":-72.9645484559135,\"altitude\":0},{\"latitude\":-41.57009896875544,\"longitude\":-72.96443147648827,\"altitude\":0},{\"latitude\":-41.571233956668436,\"longitude\":-72.96242572885228,\"altitude\":0},{\"latitude\":-41.570477496267934,\"longitude\":-72.96163500530696,\"altitude\":0},{\"latitude\":-41.56934585204444,\"longitude\":-72.96362825025993,\"altitude\":0},{\"latitude\":-41.57009896875544,\"longitude\":-72.96443147648827,\"altitude\":0},{\"latitude\":-41.56887845524928,\"longitude\":-72.96455015872283,\"altitude\":0},{\"latitude\":-41.56806094234421,\"longitude\":-72.96370399091543,\"altitude\":0},{\"latitude\":-41.56707050441147,\"longitude\":-72.96536946233702,\"altitude\":0},{\"latitude\":-41.56791523906604,\"longitude\":-72.96623655330153,\"altitude\":0},{\"latitude\":-41.56888875286486,\"longitude\":-72.9645484559135,\"altitude\":0},{\"latitude\":-41.570018889177156,\"longitude\":-72.96554146786862,\"altitude\":0},{\"latitude\":-41.56875753473407,\"longitude\":-72.96684498477885,\"altitude\":0},{\"latitude\":-41.56750916586134,\"longitude\":-72.9674018443768,\"altitude\":0},{\"latitude\":-41.56633513353128,\"longitude\":-72.96652015205429,\"altitude\":0},{\"latitude\":-41.56608610991559,\"longitude\":-72.96496308015354,\"altitude\":0},{\"latitude\":-41.56757123380653,\"longitude\":-72.96250830397486,\"altitude\":0},{\"latitude\":-41.56858048689453,\"longitude\":-72.96237972028267,\"altitude\":0},{\"latitude\":-41.56889280293101,\"longitude\":-72.96142554411534,\"altitude\":0},{\"latitude\":-41.570882438313795,\"longitude\":-72.95996799026095,\"altitude\":0},{\"latitude\":-41.57223744992251,\"longitude\":-72.96135202468574,\"altitude\":0},{\"latitude\":-41.572114141698215,\"longitude\":-72.96300297965826,\"altitude\":0},{\"latitude\":-41.570018889177156,\"longitude\":-72.96554146786862,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"85126ed3-bfee-45a5-6b44-dd5b0dc06b02\",\"name\":\"Exterior\",\"vertices\":[{\"latitude\":-41.570018889177156,\"longitude\":-72.96554146786862,\"altitude\":0},{\"latitude\":-41.572114141698215,\"longitude\":-72.96300297965826,\"altitude\":0},{\"latitude\":-41.57223744992251,\"longitude\":-72.96135202468574,\"altitude\":0},{\"latitude\":-41.570882438313795,\"longitude\":-72.95996799026095,\"altitude\":0},{\"latitude\":-41.56889280293101,\"longitude\":-72.96142554411534,\"altitude\":0},{\"latitude\":-41.56858048689453,\"longitude\":-72.96237972028267,\"altitude\":0},{\"latitude\":-41.56757123380653,\"longitude\":-72.96250830397486,\"altitude\":0},{\"latitude\":-41.56608610991559,\"longitude\":-72.96496308015354,\"altitude\":0},{\"latitude\":-41.56633513353128,\"longitude\":-72.96652015205429,\"altitude\":0},{\"latitude\":-41.56750916586134,\"longitude\":-72.9674018443768,\"altitude\":0},{\"latitude\":-41.56875753473407,\"longitude\":-72.96684498477885,\"altitude\":0},{\"latitude\":-41.57001840058492,\"longitude\":-72.96554060205774,\"altitude\":0},{\"latitude\":-41.56911117852383,\"longitude\":-72.96699147584958,\"altitude\":0},{\"latitude\":-41.56758323720862,\"longitude\":-72.96793988436794,\"altitude\":0},{\"latitude\":-41.56545627711202,\"longitude\":-72.96752482188231,\"altitude\":0},{\"latitude\":-41.56480982304964,\"longitude\":-72.96475245122133,\"altitude\":0},{\"latitude\":-41.5668168974356,\"longitude\":-72.96140864796355,\"altitude\":0},{\"latitude\":-41.56785510824296,\"longitude\":-72.9613258665378,\"altitude\":0},{\"latitude\":-41.56813708196231,\"longitude\":-72.96017530771415,\"altitude\":0},{\"latitude\":-41.57016971854757,\"longitude\":-72.95824571089663,\"altitude\":0},{\"latitude\":-41.5720012689015,\"longitude\":-72.95882145459153,\"altitude\":0},{\"latitude\":-41.57359066384284,\"longitude\":-72.96144906833219,\"altitude\":0},{\"latitude\":-41.57187145561868,\"longitude\":-72.96433298888516,\"altitude\":0},{\"latitude\":-41.57077971093282,\"longitude\":-72.96538049405068,\"altitude\":0},{\"latitude\":-41.570018889177156,\"longitude\":-72.96554146786862,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 3900,
        "wires": [
            [
                "1bb2047b6a8caffb"
            ]
        ]
    },
    {
        "id": "1bb2047b6a8caffb",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 3900,
        "wires": [
            [
                "25fa5842669977f7"
            ]
        ]
    },
    {
        "id": "6aaa6da0c01a244f",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3900,
        "wires": []
    },
    {
        "id": "cf2e0d5a495df649",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT HERRADURA",
        "info": "",
        "x": 160,
        "y": 3860,
        "wires": []
    },
    {
        "id": "2dba3533bd27a554",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 3900,
        "wires": [
            [
                "6aaa6da0c01a244f"
            ]
        ]
    },
    {
        "id": "25fa5842669977f7",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "133",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Herradura;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Herradura\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_200\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3900,
        "wires": [
            [
                "2dba3533bd27a554"
            ]
        ]
    },
    {
        "id": "36a316fa4980a6e7",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Huelmo\":{\"codigo_centro\":\"134\",\"Modulo100\":{\"id\":\"2aab0bba-13e3-4414-71a2-6d9c02e3c4ce\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-41.66629010802147,\"longitude\":-73.05479625334218,\"altitude\":0},{\"latitude\":-41.66615021021423,\"longitude\":-73.05406004195902,\"altitude\":0},{\"latitude\":-41.66777535214972,\"longitude\":-73.05341362975012,\"altitude\":0},{\"latitude\":-41.66793564338027,\"longitude\":-73.05415570714102,\"altitude\":0},{\"latitude\":-41.66629010802147,\"longitude\":-73.05479625334218,\"altitude\":0}]},\"Modulo200\":{\"id\":\"52bee7c6-02d2-4d82-5455-f42d20adc80b\",\"name\":\"Modulo 200\",\"vertices\":[{\"latitude\":-41.66581843103689,\"longitude\":-73.05153071902168,\"altitude\":0},{\"latitude\":-41.66597984395665,\"longitude\":-73.05227241004667,\"altitude\":0},{\"latitude\":-41.667588345128124,\"longitude\":-73.05162012577055,\"altitude\":0},{\"latitude\":-41.66738797994671,\"longitude\":-73.05082440354452,\"altitude\":0},{\"latitude\":-41.66581843103689,\"longitude\":-73.05153071902168,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"1fe1688e-a99e-416a-62a1-a5d359d4af42\",\"name\":\"Zona de alerta 1\",\"vertices\":[{\"latitude\":-41.66591673051051,\"longitude\":-73.05720148776543,\"altitude\":0},{\"latitude\":-41.66777098991934,\"longitude\":-73.05789624825495,\"altitude\":0},{\"latitude\":-41.66971757543596,\"longitude\":-73.056892450777,\"altitude\":0},{\"latitude\":-41.67069951461297,\"longitude\":-73.05384647388732,\"altitude\":0},{\"latitude\":-41.66997180561827,\"longitude\":-73.04949090547251,\"altitude\":0},{\"latitude\":-41.668505092233175,\"longitude\":-73.04755978348707,\"altitude\":0},{\"latitude\":-41.66717698790941,\"longitude\":-73.04711577260103,\"altitude\":0},{\"latitude\":-41.66613436445185,\"longitude\":-73.04719010101202,\"altitude\":0},{\"latitude\":-41.6649999968744,\"longitude\":-73.04830034611844,\"altitude\":0},{\"latitude\":-41.66449480970882,\"longitude\":-73.05131202868532,\"altitude\":0},{\"latitude\":-41.664879607423885,\"longitude\":-73.05317860855769,\"altitude\":0},{\"latitude\":-41.66516710324905,\"longitude\":-73.05335364288703,\"altitude\":0},{\"latitude\":-41.664969830276554,\"longitude\":-73.05295555995552,\"altitude\":0},{\"latitude\":-41.665011847797,\"longitude\":-73.05077802677425,\"altitude\":0},{\"latitude\":-41.665945939497,\"longitude\":-73.04948121503318,\"altitude\":0},{\"latitude\":-41.66731813147661,\"longitude\":-73.04883380394119,\"altitude\":0},{\"latitude\":-41.668232618304565,\"longitude\":-73.04947349817364,\"altitude\":0},{\"latitude\":-41.668726467129744,\"longitude\":-73.05067055049552,\"altitude\":0},{\"latitude\":-41.66936647113131,\"longitude\":-73.054014558549,\"altitude\":0},{\"latitude\":-41.66893903662595,\"longitude\":-73.05531990114271,\"altitude\":0},{\"latitude\":-41.66825838916824,\"longitude\":-73.05621458335106,\"altitude\":0},{\"latitude\":-41.667205135269946,\"longitude\":-73.05637061272002,\"altitude\":0},{\"latitude\":-41.66625924435911,\"longitude\":-73.05592060132766,\"altitude\":0},{\"latitude\":-41.665657542119,\"longitude\":-73.05516443983322,\"altitude\":0},{\"latitude\":-41.66517905107202,\"longitude\":-73.05373572444282,\"altitude\":0},{\"latitude\":-41.66516519089018,\"longitude\":-73.05337392178937,\"altitude\":0},{\"latitude\":-41.66500661631478,\"longitude\":-73.05377349661366,\"altitude\":0},{\"latitude\":-41.66591673051051,\"longitude\":-73.05720148776543,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"32e60a2d-6501-4776-7b9d-e1934f400362\",\"name\":\"Zona de alerta 2\",\"vertices\":[{\"latitude\":-41.665165208515745,\"longitude\":-73.05335451544835,\"altitude\":0},{\"latitude\":-41.66517715633906,\"longitude\":-73.05373659700413,\"altitude\":0},{\"latitude\":-41.66564625335293,\"longitude\":-73.05515350691607,\"altitude\":0},{\"latitude\":-41.66625734965794,\"longitude\":-73.05592147388897,\"altitude\":0},{\"latitude\":-41.66720324059662,\"longitude\":-73.05637148528133,\"altitude\":0},{\"latitude\":-41.66825649452591,\"longitude\":-73.05621545591238,\"altitude\":0},{\"latitude\":-41.66893714200365,\"longitude\":-73.05532077370403,\"altitude\":0},{\"latitude\":-41.66936457652159,\"longitude\":-73.05401543111032,\"altitude\":0},{\"latitude\":-41.668726467129744,\"longitude\":-73.05067055049552,\"altitude\":0},{\"latitude\":-41.668232618304565,\"longitude\":-73.04947349817364,\"altitude\":0},{\"latitude\":-41.66731813147661,\"longitude\":-73.04883380394119,\"altitude\":0},{\"latitude\":-41.665945939497,\"longitude\":-73.04948121503318,\"altitude\":0},{\"latitude\":-41.665011847797,\"longitude\":-73.05077802677425,\"altitude\":0},{\"latitude\":-41.66496793553745,\"longitude\":-73.05295643251684,\"altitude\":0},{\"latitude\":-41.665165208515745,\"longitude\":-73.05335451544835,\"altitude\":0},{\"latitude\":-41.66545834294833,\"longitude\":-73.05251619206022,\"altitude\":0},{\"latitude\":-41.66587158958964,\"longitude\":-73.0525265548963,\"altitude\":0},{\"latitude\":-41.66562551631432,\"longitude\":-73.05140105719266,\"altitude\":0},{\"latitude\":-41.667483596332964,\"longitude\":-73.05057851353132,\"altitude\":0},{\"latitude\":-41.66776296784422,\"longitude\":-73.05175834524964,\"altitude\":0},{\"latitude\":-41.66587158958964,\"longitude\":-73.0525265548963,\"altitude\":0},{\"latitude\":-41.66545834294833,\"longitude\":-73.05251619206022,\"altitude\":0},{\"latitude\":-41.665165208515745,\"longitude\":-73.05335451544835,\"altitude\":0},{\"latitude\":-41.66598083995008,\"longitude\":-73.05396703736852,\"altitude\":0},{\"latitude\":-41.667870967960646,\"longitude\":-73.05316237466407,\"altitude\":0},{\"latitude\":-41.66809804658583,\"longitude\":-73.05424419874845,\"altitude\":0},{\"latitude\":-41.666227708283934,\"longitude\":-73.05504355388528,\"altitude\":0},{\"latitude\":-41.66598083995008,\"longitude\":-73.05396703736852,\"altitude\":0},{\"latitude\":-41.665165208515745,\"longitude\":-73.05335451544835,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"d8b0f076-70f1-49a4-452f-2eead1c9911b\",\"name\":\"Active tracking\",\"vertices\":[{\"latitude\":-41.66500661631478,\"longitude\":-73.05377349661366,\"altitude\":0},{\"latitude\":-41.66591673051051,\"longitude\":-73.05720148776543,\"altitude\":0},{\"latitude\":-41.66777098991934,\"longitude\":-73.05789624825495,\"altitude\":0},{\"latitude\":-41.6697194876596,\"longitude\":-73.05687217187466,\"altitude\":0},{\"latitude\":-41.67069951461297,\"longitude\":-73.05384647388732,\"altitude\":0},{\"latitude\":-41.67003691854107,\"longitude\":-73.04955345802833,\"altitude\":0},{\"latitude\":-41.668505092233175,\"longitude\":-73.04755978348707,\"altitude\":0},{\"latitude\":-41.66717698790941,\"longitude\":-73.04711577260103,\"altitude\":0},{\"latitude\":-41.66613436445185,\"longitude\":-73.04719010101202,\"altitude\":0},{\"latitude\":-41.6649999968744,\"longitude\":-73.04830034611844,\"altitude\":0},{\"latitude\":-41.66449480970882,\"longitude\":-73.05131202868532,\"altitude\":0},{\"latitude\":-41.66477235120878,\"longitude\":-73.0526138695721,\"altitude\":0},{\"latitude\":-41.664879607423885,\"longitude\":-73.05317860855769,\"altitude\":0},{\"latitude\":-41.66607796210719,\"longitude\":-73.05399892538617,\"altitude\":0},{\"latitude\":-41.66599606688243,\"longitude\":-73.05243804513518,\"altitude\":0},{\"latitude\":-41.66572777995304,\"longitude\":-73.05135575344822,\"altitude\":0},{\"latitude\":-41.66739418028318,\"longitude\":-73.05061806338547,\"altitude\":0},{\"latitude\":-41.66765914075801,\"longitude\":-73.05167376995085,\"altitude\":0},{\"latitude\":-41.66599606688243,\"longitude\":-73.05243804513518,\"altitude\":0},{\"latitude\":-41.666075920321674,\"longitude\":-73.0539864307828,\"altitude\":0},{\"latitude\":-41.66787286261433,\"longitude\":-73.05316150210275,\"altitude\":0},{\"latitude\":-41.66809994123283,\"longitude\":-73.05424332618713,\"altitude\":0},{\"latitude\":-41.66624989388636,\"longitude\":-73.05500328518974,\"altitude\":0},{\"latitude\":-41.666110303144194,\"longitude\":-73.05419683478247,\"altitude\":0},{\"latitude\":-41.666075920321674,\"longitude\":-73.0539864307828,\"altitude\":0},{\"latitude\":-41.66516519089018,\"longitude\":-73.05337392178937,\"altitude\":0},{\"latitude\":-41.66500661631478,\"longitude\":-73.05377349661366,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 3980,
        "wires": [
            [
                "3c79c0719405eefc"
            ]
        ]
    },
    {
        "id": "3c79c0719405eefc",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 3980,
        "wires": [
            [
                "b82c3b15c89504a8"
            ]
        ]
    },
    {
        "id": "fc54c47054187421",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3980,
        "wires": []
    },
    {
        "id": "ab531f3fd6299509",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT HUELMO",
        "info": "",
        "x": 150,
        "y": 3940,
        "wires": []
    },
    {
        "id": "6fcc91c5ffcb64e5",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 3980,
        "wires": [
            [
                "fc54c47054187421"
            ]
        ]
    },
    {
        "id": "b82c3b15c89504a8",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "134",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Huelmo;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Huelmo\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_200\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3980,
        "wires": [
            [
                "6fcc91c5ffcb64e5"
            ]
        ]
    },
    {
        "id": "7682e75d3e7574f1",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Huenquillahue\":{\"codigo_centro\":\"135\",\"Modulo100\":{\"id\":\"9525d165-b6fb-4f68-6a43-fbb293ca13e5\",\"name\":\"Mod 100\",\"vertices\":[{\"latitude\":-41.59457765699231,\"longitude\":-73.06600422696648,\"altitude\":0},{\"latitude\":-41.59461664507802,\"longitude\":-73.06500224378398,\"altitude\":0},{\"latitude\":-41.59309066794992,\"longitude\":-73.06492323910787,\"altitude\":0},{\"latitude\":-41.5930606529004,\"longitude\":-73.06592122517031,\"altitude\":0},{\"latitude\":-41.59457765699231,\"longitude\":-73.06600422696648,\"altitude\":0}]},\"Modulo200\":{\"id\":\"13e101ee-6ab5-4baa-4915-735db0bef481\",\"name\":\"Mod 200\",\"vertices\":[{\"latitude\":-41.59275778595099,\"longitude\":-73.06905374355098,\"altitude\":0},{\"latitude\":-41.592790769654876,\"longitude\":-73.0680427513289,\"altitude\":0},{\"latitude\":-41.594311125020276,\"longitude\":-73.06814529530035,\"altitude\":0},{\"latitude\":-41.59428176766844,\"longitude\":-73.06915876506534,\"altitude\":0},{\"latitude\":-41.59275778595099,\"longitude\":-73.06905374355098,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"d371c139-22d5-4e15-4489-ea87aa8f8379\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-41.595041886315684,\"longitude\":-73.06700575440823,\"altitude\":0},{\"latitude\":-41.59469378419835,\"longitude\":-73.0662671888329,\"altitude\":0},{\"latitude\":-41.59290497893014,\"longitude\":-73.06611210107803,\"altitude\":0},{\"latitude\":-41.5929360823032,\"longitude\":-73.06473967185691,\"altitude\":0},{\"latitude\":-41.59474132859237,\"longitude\":-73.06483095158465,\"altitude\":0},{\"latitude\":-41.59469378419835,\"longitude\":-73.0662671888329,\"altitude\":0},{\"latitude\":-41.595041886315684,\"longitude\":-73.06700575440823,\"altitude\":0},{\"latitude\":-41.595227473235475,\"longitude\":-73.06589588441764,\"altitude\":0},{\"latitude\":-41.59514682712998,\"longitude\":-73.06468811317704,\"altitude\":0},{\"latitude\":-41.59463068966872,\"longitude\":-73.06415817273474,\"altitude\":0},{\"latitude\":-41.59321408013407,\"longitude\":-73.06388318538666,\"altitude\":0},{\"latitude\":-41.592283449681325,\"longitude\":-73.06416664837604,\"altitude\":0},{\"latitude\":-41.591764208303104,\"longitude\":-73.06537826817167,\"altitude\":0},{\"latitude\":-41.59167203637195,\"longitude\":-73.06820050913186,\"altitude\":0},{\"latitude\":-41.5920775918846,\"longitude\":-73.06985195144043,\"altitude\":0},{\"latitude\":-41.59321129036899,\"longitude\":-73.0703695676864,\"altitude\":0},{\"latitude\":-41.59491585065936,\"longitude\":-73.06986682409291,\"altitude\":0},{\"latitude\":-41.5952182565428,\"longitude\":-73.068317588997,\"altitude\":0},{\"latitude\":-41.595041886315684,\"longitude\":-73.06700575440823,\"altitude\":0},{\"latitude\":-41.59449542719458,\"longitude\":-73.06793239063438,\"altitude\":0},{\"latitude\":-41.59442913419293,\"longitude\":-73.06936781529657,\"altitude\":0},{\"latitude\":-41.59260554141483,\"longitude\":-73.0692556502072,\"altitude\":0},{\"latitude\":-41.59266754441581,\"longitude\":-73.067826764418,\"altitude\":0},{\"latitude\":-41.59449542719458,\"longitude\":-73.06793239063438,\"altitude\":0},{\"latitude\":-41.595041886315684,\"longitude\":-73.06700575440823,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"d5ab2a19-d045-430c-4f72-df0984044908\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-41.595041886315684,\"longitude\":-73.06700575440823,\"altitude\":0},{\"latitude\":-41.595227473235475,\"longitude\":-73.06589588441764,\"altitude\":0},{\"latitude\":-41.59514682712998,\"longitude\":-73.06468811317704,\"altitude\":0},{\"latitude\":-41.59463068966872,\"longitude\":-73.06415817273474,\"altitude\":0},{\"latitude\":-41.59321408013407,\"longitude\":-73.06388318538666,\"altitude\":0},{\"latitude\":-41.592283449681325,\"longitude\":-73.06416664837604,\"altitude\":0},{\"latitude\":-41.591764208303104,\"longitude\":-73.06537826817167,\"altitude\":0},{\"latitude\":-41.59167203637195,\"longitude\":-73.06820050913186,\"altitude\":0},{\"latitude\":-41.5920775918846,\"longitude\":-73.06985195144043,\"altitude\":0},{\"latitude\":-41.59321129036899,\"longitude\":-73.0703695676864,\"altitude\":0},{\"latitude\":-41.59491585065936,\"longitude\":-73.06986682409291,\"altitude\":0},{\"latitude\":-41.5952182565428,\"longitude\":-73.068317588997,\"altitude\":0},{\"latitude\":-41.595041886315684,\"longitude\":-73.06700575440823,\"altitude\":0},{\"latitude\":-41.595573047959036,\"longitude\":-73.06823372840881,\"altitude\":0},{\"latitude\":-41.59525611681909,\"longitude\":-73.07045996189119,\"altitude\":0},{\"latitude\":-41.5931931086241,\"longitude\":-73.07142750789355,\"altitude\":0},{\"latitude\":-41.591223588426104,\"longitude\":-73.07072525698459,\"altitude\":0},{\"latitude\":-41.59021692138405,\"longitude\":-73.06886234102423,\"altitude\":0},{\"latitude\":-41.59029132780472,\"longitude\":-73.06463956832884,\"altitude\":0},{\"latitude\":-41.59170357331872,\"longitude\":-73.06296586990355,\"altitude\":0},{\"latitude\":-41.59327626491607,\"longitude\":-73.06257963180542,\"altitude\":0},{\"latitude\":-41.594800776318,\"longitude\":-73.06326627731323,\"altitude\":0},{\"latitude\":-41.5953449232981,\"longitude\":-73.06443425753969,\"altitude\":0},{\"latitude\":-41.595439747332755,\"longitude\":-73.06589728075778,\"altitude\":0},{\"latitude\":-41.595041886315684,\"longitude\":-73.06700575440823,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"2a4ef2ee-c884-4ce6-4654-0e2476f882a8\",\"name\":\"Zona Active Tracking\",\"vertices\":[{\"latitude\":-41.59504693542911,\"longitude\":-73.06701119301664,\"altitude\":0},{\"latitude\":-41.59432299344139,\"longitude\":-73.06814615927605,\"altitude\":0},{\"latitude\":-41.5928095744103,\"longitude\":-73.06803598943718,\"altitude\":0},{\"latitude\":-41.59278003410979,\"longitude\":-73.06904935418403,\"altitude\":0},{\"latitude\":-41.59429732470215,\"longitude\":-73.06918330459048,\"altitude\":0},{\"latitude\":-41.59432299344139,\"longitude\":-73.06814615927605,\"altitude\":0},{\"latitude\":-41.59504693542911,\"longitude\":-73.06701119301664,\"altitude\":0},{\"latitude\":-41.595618317747906,\"longitude\":-73.06767298206178,\"altitude\":0},{\"latitude\":-41.595710032480326,\"longitude\":-73.06975350062547,\"altitude\":0},{\"latitude\":-41.59538741968083,\"longitude\":-73.0716669935665,\"altitude\":0},{\"latitude\":-41.59354907486473,\"longitude\":-73.07242870330809,\"altitude\":0},{\"latitude\":-41.590804875202686,\"longitude\":-73.07142019271849,\"altitude\":0},{\"latitude\":-41.58963036447547,\"longitude\":-73.06904382972169,\"altitude\":0},{\"latitude\":-41.58970357589031,\"longitude\":-73.06403673269661,\"altitude\":0},{\"latitude\":-41.59147889996265,\"longitude\":-73.06193590164183,\"altitude\":0},{\"latitude\":-41.59335352867233,\"longitude\":-73.06153364447998,\"altitude\":0},{\"latitude\":-41.59537847649427,\"longitude\":-73.06225776672363,\"altitude\":0},{\"latitude\":-41.59600431251696,\"longitude\":-73.06378126144408,\"altitude\":0},{\"latitude\":-41.59584788843119,\"longitude\":-73.06590028075624,\"altitude\":0},{\"latitude\":-41.59504693542911,\"longitude\":-73.06701119301664,\"altitude\":0},{\"latitude\":-41.59459219544643,\"longitude\":-73.0660531666701,\"altitude\":0},{\"latitude\":-41.5946180471122,\"longitude\":-73.06501743584995,\"altitude\":0},{\"latitude\":-41.59309207001727,\"longitude\":-73.06493843117386,\"altitude\":0},{\"latitude\":-41.59306205496839,\"longitude\":-73.06593641723629,\"altitude\":0},{\"latitude\":-41.59459219544643,\"longitude\":-73.0660531666701,\"altitude\":0},{\"latitude\":-41.59504693542911,\"longitude\":-73.06701119301664,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 4060,
        "wires": [
            [
                "d1b0443a31f8c096"
            ]
        ]
    },
    {
        "id": "d1b0443a31f8c096",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 4060,
        "wires": [
            [
                "abad363fbb0d954e"
            ]
        ]
    },
    {
        "id": "f74358fe8d49dca4",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 4060,
        "wires": []
    },
    {
        "id": "38b46d97ee9875f9",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT HUENQUILLAHUE",
        "info": "",
        "x": 180,
        "y": 4020,
        "wires": []
    },
    {
        "id": "c4e0779f22c5b71c",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 4060,
        "wires": [
            [
                "f74358fe8d49dca4"
            ]
        ]
    },
    {
        "id": "abad363fbb0d954e",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "135",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Huenquillahue;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Huenquillahue\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_200\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4060,
        "wires": [
            [
                "c4e0779f22c5b71c"
            ]
        ]
    },
    {
        "id": "911e359713568fa6",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"IslaSanchez\":{\"codigo_centro\":\"136\",\"Modulo100\":{\"id\":\"dc8f384d-8c27-4c14-5ccb-416c7bdf005c\",\"name\":\"Mod100\",\"vertices\":[{\"latitude\":-44.126547730131236,\"longitude\":-73.57012582951444,\"altitude\":0},{\"latitude\":-44.12661894883375,\"longitude\":-73.57087096735674,\"altitude\":0},{\"latitude\":-44.128819690077336,\"longitude\":-73.57013730861945,\"altitude\":0},{\"latitude\":-44.12872239691624,\"longitude\":-73.56938518588477,\"altitude\":0},{\"latitude\":-44.126547730131236,\"longitude\":-73.57012582951444,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"5fd8e52e-b8ba-4344-4469-91fc53d83c76\",\"name\":\"Zona Interna 2\",\"vertices\":[{\"latitude\":-44.12640149618428,\"longitude\":-73.56986561798787,\"altitude\":0},{\"latitude\":-44.12653156690441,\"longitude\":-73.57108154082614,\"altitude\":0},{\"latitude\":-44.12906520772988,\"longitude\":-73.57034125113803,\"altitude\":0},{\"latitude\":-44.12888808743638,\"longitude\":-73.56907524848302,\"altitude\":0},{\"latitude\":-44.12746929738657,\"longitude\":-73.56937088267946,\"altitude\":0},{\"latitude\":-44.12710770022299,\"longitude\":-73.56893869113823,\"altitude\":0},{\"latitude\":-44.12773764287598,\"longitude\":-73.56875712795964,\"altitude\":0},{\"latitude\":-44.12910573039415,\"longitude\":-73.56886229923855,\"altitude\":0},{\"latitude\":-44.12950490544892,\"longitude\":-73.57068067572226,\"altitude\":0},{\"latitude\":-44.129394652106505,\"longitude\":-73.57103734051658,\"altitude\":0},{\"latitude\":-44.12947018633477,\"longitude\":-73.57157145091247,\"altitude\":0},{\"latitude\":-44.129233816998294,\"longitude\":-73.57181918263564,\"altitude\":0},{\"latitude\":-44.129071526137025,\"longitude\":-73.57123702797132,\"altitude\":0},{\"latitude\":-44.12849087709091,\"longitude\":-73.57077546279662,\"altitude\":0},{\"latitude\":-44.12758566091755,\"longitude\":-73.57128936919429,\"altitude\":0},{\"latitude\":-44.12768287391828,\"longitude\":-73.57183006883078,\"altitude\":0},{\"latitude\":-44.128458808215164,\"longitude\":-73.57263143950618,\"altitude\":0},{\"latitude\":-44.12764528296123,\"longitude\":-73.57298231583476,\"altitude\":0},{\"latitude\":-44.12635077224072,\"longitude\":-73.57296023911823,\"altitude\":0},{\"latitude\":-44.12584348937113,\"longitude\":-73.57205552548648,\"altitude\":0},{\"latitude\":-44.12579026342984,\"longitude\":-73.56995488729741,\"altitude\":0},{\"latitude\":-44.126534762431476,\"longitude\":-73.56921228947209,\"altitude\":0},{\"latitude\":-44.12710770022299,\"longitude\":-73.56893869113823,\"altitude\":0},{\"latitude\":-44.126978611775336,\"longitude\":-73.56953152747319,\"altitude\":0},{\"latitude\":-44.12640149618428,\"longitude\":-73.56986561798787,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"144e3dd5-92a6-47e9-6907-7146e6b9cea7\",\"name\":\"Zona Externa 1\",\"vertices\":[{\"latitude\":-44.126534762431476,\"longitude\":-73.56921228947209,\"altitude\":0},{\"latitude\":-44.12579026342984,\"longitude\":-73.56995488729741,\"altitude\":0},{\"latitude\":-44.12584348937113,\"longitude\":-73.57205552548648,\"altitude\":0},{\"latitude\":-44.12635077224072,\"longitude\":-73.57296023911823,\"altitude\":0},{\"latitude\":-44.12764528296123,\"longitude\":-73.57298231583476,\"altitude\":0},{\"latitude\":-44.128458808215164,\"longitude\":-73.57263143950618,\"altitude\":0},{\"latitude\":-44.12947018633477,\"longitude\":-73.57157145091247,\"altitude\":0},{\"latitude\":-44.12974952558838,\"longitude\":-73.57247078405634,\"altitude\":0},{\"latitude\":-44.129854255936685,\"longitude\":-73.57308876475143,\"altitude\":0},{\"latitude\":-44.129607830849764,\"longitude\":-73.57408440126163,\"altitude\":0},{\"latitude\":-44.129098740718725,\"longitude\":-73.57474448916102,\"altitude\":0},{\"latitude\":-44.12835677341867,\"longitude\":-73.57520405191526,\"altitude\":0},{\"latitude\":-44.127248258637024,\"longitude\":-73.57544052574667,\"altitude\":0},{\"latitude\":-44.126333486911285,\"longitude\":-73.575119862493,\"altitude\":0},{\"latitude\":-44.12584189292113,\"longitude\":-73.57374726842617,\"altitude\":0},{\"latitude\":-44.12548327665908,\"longitude\":-73.57205268155494,\"altitude\":0},{\"latitude\":-44.125551563798126,\"longitude\":-73.56991587550085,\"altitude\":0},{\"latitude\":-44.126352227930894,\"longitude\":-73.56918501640823,\"altitude\":0},{\"latitude\":-44.12706057586419,\"longitude\":-73.56899788080194,\"altitude\":0},{\"latitude\":-44.126534762431476,\"longitude\":-73.56921228947209,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"67e237f9-e665-42d9-679f-9ceba46fa9bb\",\"name\":\"Autotracking\",\"vertices\":[{\"latitude\":-44.12702022253628,\"longitude\":-73.5687578883388,\"altitude\":0},{\"latitude\":-44.12487606244885,\"longitude\":-73.56895608331554,\"altitude\":0},{\"latitude\":-44.124530550698815,\"longitude\":-73.57115038484392,\"altitude\":0},{\"latitude\":-44.124947196970055,\"longitude\":-73.57468958085741,\"altitude\":0},{\"latitude\":-44.12690844360159,\"longitude\":-73.57529832257174,\"altitude\":0},{\"latitude\":-44.12894075482896,\"longitude\":-73.57432150447201,\"altitude\":0},{\"latitude\":-44.130353169944975,\"longitude\":-73.57327390245202,\"altitude\":0},{\"latitude\":-44.130160108001135,\"longitude\":-73.57272178787392,\"altitude\":0},{\"latitude\":-44.12956059583726,\"longitude\":-73.5717732833423,\"altitude\":0},{\"latitude\":-44.12949962815768,\"longitude\":-73.57107960092365,\"altitude\":0},{\"latitude\":-44.12999752903263,\"longitude\":-73.57082477881067,\"altitude\":0},{\"latitude\":-44.13033284766482,\"longitude\":-73.57088140594689,\"altitude\":0},{\"latitude\":-44.13077993621305,\"longitude\":-73.57027266423258,\"altitude\":0},{\"latitude\":-44.13061735895073,\"longitude\":-73.56847475265772,\"altitude\":0},{\"latitude\":-44.13025155847425,\"longitude\":-73.56810667627231,\"altitude\":0},{\"latitude\":-44.12944882170995,\"longitude\":-73.56819161697663,\"altitude\":0},{\"latitude\":-44.12899156171373,\"longitude\":-73.56800757878393,\"altitude\":0},{\"latitude\":-44.127284426450174,\"longitude\":-73.56864463406636,\"altitude\":0},{\"latitude\":-44.12875496108874,\"longitude\":-73.56934547424316,\"altitude\":0},{\"latitude\":-44.1288897268815,\"longitude\":-73.57018232345581,\"altitude\":0},{\"latitude\":-44.12659481598998,\"longitude\":-73.57094407081604,\"altitude\":0},{\"latitude\":-44.12650240160335,\"longitude\":-73.57009649276733,\"altitude\":0},{\"latitude\":-44.128713415223345,\"longitude\":-73.56932567371409,\"altitude\":0},{\"latitude\":-44.12730474977923,\"longitude\":-73.56867294763447,\"altitude\":0},{\"latitude\":-44.12702022253628,\"longitude\":-73.5687578883388,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 4140,
        "wires": [
            [
                "36cfcf1cd7813378"
            ]
        ]
    },
    {
        "id": "36cfcf1cd7813378",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 4140,
        "wires": [
            [
                "2e2e7af74e9bb6fc"
            ]
        ]
    },
    {
        "id": "f63a96393624643b",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 4140,
        "wires": []
    },
    {
        "id": "5f6aa6564495bf19",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT ISLA SANCHEZ",
        "info": "",
        "x": 170,
        "y": 4100,
        "wires": []
    },
    {
        "id": "53b65381f0ff84e6",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 4140,
        "wires": [
            [
                "f63a96393624643b"
            ]
        ]
    },
    {
        "id": "2e2e7af74e9bb6fc",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "136",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.IslaSanchez;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"IslaSanchez\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4140,
        "wires": [
            [
                "53b65381f0ff84e6"
            ]
        ]
    },
    {
        "id": "42cb758972bb9f5e",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Ladrilleros\":{\"codigo_centro\":\"137\",\"Modulo100\":{\"id\":\"4d68fc37-4169-42ce-5e35-11e3d191726d\",\"name\":\"Mod_100\",\"vertices\":[{\"latitude\":-52.06777501443387,\"longitude\":-72.92951298551618,\"altitude\":0},{\"latitude\":-52.069180008638874,\"longitude\":-72.92749196579061,\"altitude\":0},{\"latitude\":-52.06893400314455,\"longitude\":-72.92700999255713,\"altitude\":0},{\"latitude\":-52.06750700132638,\"longitude\":-72.92903498047946,\"altitude\":0},{\"latitude\":-52.06750700132638,\"longitude\":-72.92903498047946,\"altitude\":0},{\"latitude\":-52.06777501443387,\"longitude\":-72.92951298551618,\"altitude\":0}]},\"Modulo200\":{\"id\":\"dc35cd27-c090-416b-5ea3-a8dec3422a09\",\"name\":\"Mod_200\",\"vertices\":[{\"latitude\":-52.06806299781986,\"longitude\":-72.93013898749842,\"altitude\":0},{\"latitude\":-52.06954302022353,\"longitude\":-72.92812100311843,\"altitude\":0},{\"latitude\":-52.06930600798174,\"longitude\":-72.927662984931,\"altitude\":0},{\"latitude\":-52.06783998080609,\"longitude\":-72.92969996320146,\"altitude\":0},{\"latitude\":-52.06806299781986,\"longitude\":-72.93013898749842,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"c9ffd728-46b1-4863-4d4d-79fc6688c38d\",\"name\":\"Zona_Interior\",\"vertices\":[{\"latitude\":-52.07023008413789,\"longitude\":-72.92774654622379,\"altitude\":0},{\"latitude\":-52.06938325799287,\"longitude\":-72.92756937338784,\"altitude\":0},{\"latitude\":-52.068916798663516,\"longitude\":-72.92672630056516,\"altitude\":0},{\"latitude\":-52.06729540538103,\"longitude\":-72.92898635663106,\"altitude\":0},{\"latitude\":-52.06803934607856,\"longitude\":-72.9304809932513,\"altitude\":0},{\"latitude\":-52.06973140087373,\"longitude\":-72.92823213301874,\"altitude\":0},{\"latitude\":-52.06938325799287,\"longitude\":-72.92756937338784,\"altitude\":0},{\"latitude\":-52.07023008413789,\"longitude\":-72.92774654622379,\"altitude\":0},{\"latitude\":-52.07026056128808,\"longitude\":-72.92853501579113,\"altitude\":0},{\"latitude\":-52.06972769402079,\"longitude\":-72.93001191567517,\"altitude\":0},{\"latitude\":-52.06886588288276,\"longitude\":-72.93094300473251,\"altitude\":0},{\"latitude\":-52.0680234500394,\"longitude\":-72.93120503867284,\"altitude\":0},{\"latitude\":-52.06748431887362,\"longitude\":-72.93095370690558,\"altitude\":0},{\"latitude\":-52.06699747184735,\"longitude\":-72.92991559611751,\"altitude\":0},{\"latitude\":-52.06689481679502,\"longitude\":-72.92885189105277,\"altitude\":0},{\"latitude\":-52.067115894585484,\"longitude\":-72.92765743759914,\"altitude\":0},{\"latitude\":-52.067885634728654,\"longitude\":-72.9265337094265,\"altitude\":0},{\"latitude\":-52.06880548296617,\"longitude\":-72.92614745272517,\"altitude\":0},{\"latitude\":-52.0694711260315,\"longitude\":-72.92618053771508,\"altitude\":0},{\"latitude\":-52.07023008413789,\"longitude\":-72.92774654622379,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"dc12514a-e3ee-441a-585a-cc2bf928c926\",\"name\":\"Zona:Exterior\",\"vertices\":[{\"latitude\":-52.07023008413789,\"longitude\":-72.92774654622379,\"altitude\":0},{\"latitude\":-52.0694711260315,\"longitude\":-72.92618053771508,\"altitude\":0},{\"latitude\":-52.06880548296617,\"longitude\":-72.92614745272517,\"altitude\":0},{\"latitude\":-52.067885634728654,\"longitude\":-72.9265337094265,\"altitude\":0},{\"latitude\":-52.067115894585484,\"longitude\":-72.92765743759914,\"altitude\":0},{\"latitude\":-52.06689481679502,\"longitude\":-72.92885189105277,\"altitude\":0},{\"latitude\":-52.06699747184735,\"longitude\":-72.92991559611751,\"altitude\":0},{\"latitude\":-52.06748431887362,\"longitude\":-72.93095370690558,\"altitude\":0},{\"latitude\":-52.0680234500394,\"longitude\":-72.93120503867284,\"altitude\":0},{\"latitude\":-52.06886588288276,\"longitude\":-72.93094300473251,\"altitude\":0},{\"latitude\":-52.06972769402079,\"longitude\":-72.93001191567517,\"altitude\":0},{\"latitude\":-52.07026056128808,\"longitude\":-72.92853501579113,\"altitude\":0},{\"latitude\":-52.07023008413789,\"longitude\":-72.92774654622379,\"altitude\":0},{\"latitude\":-52.07023008413789,\"longitude\":-72.92774654622379,\"altitude\":0},{\"latitude\":-52.07077032416096,\"longitude\":-72.92936625744316,\"altitude\":0},{\"latitude\":-52.07041452904962,\"longitude\":-72.93091817346136,\"altitude\":0},{\"latitude\":-52.069467921828895,\"longitude\":-72.93200283545393,\"altitude\":0},{\"latitude\":-52.068230332586594,\"longitude\":-72.93255561046134,\"altitude\":0},{\"latitude\":-52.06734967532473,\"longitude\":-72.93222837067614,\"altitude\":0},{\"latitude\":-52.06653362692605,\"longitude\":-72.9313657382735,\"altitude\":0},{\"latitude\":-52.066088033304084,\"longitude\":-72.92971259845888,\"altitude\":0},{\"latitude\":-52.066009858526,\"longitude\":-72.92822477262573,\"altitude\":0},{\"latitude\":-52.06645140738106,\"longitude\":-72.9265765181188,\"altitude\":0},{\"latitude\":-52.067425108032296,\"longitude\":-72.92534576821542,\"altitude\":0},{\"latitude\":-52.068532486729524,\"longitude\":-72.92503623369777,\"altitude\":0},{\"latitude\":-52.06967358233907,\"longitude\":-72.92527154103739,\"altitude\":0},{\"latitude\":-52.07023008413789,\"longitude\":-72.92774654622379,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"02461d86-4bd8-4df0-4c63-c6707ea5abe4\",\"name\":\"activeTracking\",\"vertices\":[{\"latitude\":-52.07026247795326,\"longitude\":-72.92780935764313,\"altitude\":0},{\"latitude\":-52.0707999638195,\"longitude\":-72.92925775051118,\"altitude\":0},{\"latitude\":-52.07042240540555,\"longitude\":-72.93100118637084,\"altitude\":0},{\"latitude\":-52.068246023924075,\"longitude\":-72.9326319694519,\"altitude\":0},{\"latitude\":-52.06639931402561,\"longitude\":-72.93266415596008,\"altitude\":0},{\"latitude\":-52.06535720830568,\"longitude\":-72.92837262153625,\"altitude\":0},{\"latitude\":-52.066498246849044,\"longitude\":-72.92530417442322,\"altitude\":0},{\"latitude\":-52.0695980309611,\"longitude\":-72.92487502098083,\"altitude\":0},{\"latitude\":-52.07026247795326,\"longitude\":-72.92780935764313,\"altitude\":0},{\"latitude\":-52.069306669054384,\"longitude\":-72.92750622041551,\"altitude\":0},{\"latitude\":-52.068944101018495,\"longitude\":-72.92689119763939,\"altitude\":0},{\"latitude\":-52.067428164470755,\"longitude\":-72.92902286555722,\"altitude\":0},{\"latitude\":-52.06805950507324,\"longitude\":-72.9303066431548,\"altitude\":0},{\"latitude\":-52.069619465378935,\"longitude\":-72.9281391488854,\"altitude\":0},{\"latitude\":-52.069306669054384,\"longitude\":-72.92750622041551,\"altitude\":0},{\"latitude\":-52.07026247795326,\"longitude\":-72.92780935764313,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 4220,
        "wires": [
            [
                "7e16764db443e67f"
            ]
        ]
    },
    {
        "id": "7e16764db443e67f",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 4220,
        "wires": [
            [
                "7591dae744450a97"
            ]
        ]
    },
    {
        "id": "d55d7e56135b3f46",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 4220,
        "wires": []
    },
    {
        "id": "3478f5d4fceb589e",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT LADRILLEROS",
        "info": "",
        "x": 170,
        "y": 4180,
        "wires": []
    },
    {
        "id": "60d2aa7e7c6bbe80",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 4220,
        "wires": [
            [
                "d55d7e56135b3f46"
            ]
        ]
    },
    {
        "id": "7591dae744450a97",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "137",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Ladrilleros;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Ladrilleros\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_200\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4220,
        "wires": [
            [
                "60d2aa7e7c6bbe80"
            ]
        ]
    },
    {
        "id": "444aa2c456f256c6",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Marta\":{\"codigo_centro\":\"138\",\"Modulo100\":{\"id\":\"4d50324f-9862-4e7c-52ee-ecaffc13b955\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-44.837517632671315,\"longitude\":-72.99827098846436,\"altitude\":0},{\"latitude\":-44.8407860505774,\"longitude\":-73.0000531237719,\"altitude\":0},{\"latitude\":-44.84095206120606,\"longitude\":-72.9993193647922,\"altitude\":0},{\"latitude\":-44.837700222370835,\"longitude\":-72.99750924110413,\"altitude\":0},{\"latitude\":-44.837517632671315,\"longitude\":-72.99827098846436,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"fe7ccd77-85b6-45ec-5911-152fa57a8563\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-44.839370251856856,\"longitude\":-72.99998952525446,\"altitude\":0},{\"latitude\":-44.83945001098348,\"longitude\":-72.99966573715227,\"altitude\":0},{\"latitude\":-44.83753284850177,\"longitude\":-72.99858212471025,\"altitude\":0},{\"latitude\":-44.837374201813006,\"longitude\":-72.99817597037799,\"altitude\":0},{\"latitude\":-44.837572021935884,\"longitude\":-72.99744395601522,\"altitude\":0},{\"latitude\":-44.83772290277072,\"longitude\":-72.99732155739677,\"altitude\":0},{\"latitude\":-44.84099120647938,\"longitude\":-72.99914183063099,\"altitude\":0},{\"latitude\":-44.8411479329523,\"longitude\":-72.99947147253486,\"altitude\":0},{\"latitude\":-44.84099434548163,\"longitude\":-73.0000519752504,\"altitude\":0},{\"latitude\":-44.84065200889291,\"longitude\":-73.00028800964373,\"altitude\":0},{\"latitude\":-44.83945001098348,\"longitude\":-72.99966573715227,\"altitude\":0},{\"latitude\":-44.83932284629985,\"longitude\":-73.00003113878128,\"altitude\":0},{\"latitude\":-44.84053916729093,\"longitude\":-73.00106011893796,\"altitude\":0},{\"latitude\":-44.841336680036264,\"longitude\":-73.00077080726642,\"altitude\":0},{\"latitude\":-44.84203288977402,\"longitude\":-72.99959656943251,\"altitude\":0},{\"latitude\":-44.8419752085765,\"longitude\":-72.99884871258175,\"altitude\":0},{\"latitude\":-44.841658112094564,\"longitude\":-72.99784189983681,\"altitude\":0},{\"latitude\":-44.84076858704939,\"longitude\":-72.99685754858177,\"altitude\":0},{\"latitude\":-44.83985244110743,\"longitude\":-72.99651021225648,\"altitude\":0},{\"latitude\":-44.83861559735809,\"longitude\":-72.99572573422256,\"altitude\":0},{\"latitude\":-44.83739865000726,\"longitude\":-72.99568150946098,\"altitude\":0},{\"latitude\":-44.836784151699796,\"longitude\":-72.99667049382305,\"altitude\":0},{\"latitude\":-44.83668836383837,\"longitude\":-72.99819588661211,\"altitude\":0},{\"latitude\":-44.83709919576108,\"longitude\":-72.999075651169,\"altitude\":0},{\"latitude\":-44.83932163743547,\"longitude\":-73.00003952069363,\"altitude\":0},{\"latitude\":-44.83932284629985,\"longitude\":-73.00003113878128,\"altitude\":0},{\"latitude\":-44.839370251856856,\"longitude\":-72.99998952525446,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"82190faf-a191-45a7-423f-b379a24e2505\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-44.839235565614324,\"longitude\":-73.00000219078558,\"altitude\":0},{\"latitude\":-44.839235565614324,\"longitude\":-73.00000219078558,\"altitude\":0},{\"latitude\":-44.836828033533635,\"longitude\":-72.99953659587332,\"altitude\":0},{\"latitude\":-44.83627830904677,\"longitude\":-72.99825701665762,\"altitude\":0},{\"latitude\":-44.83605999399752,\"longitude\":-72.99618815238091,\"altitude\":0},{\"latitude\":-44.83629990207568,\"longitude\":-72.99514692159912,\"altitude\":0},{\"latitude\":-44.8367092295224,\"longitude\":-72.99404303140577,\"altitude\":0},{\"latitude\":-44.83759802216694,\"longitude\":-72.99304433374003,\"altitude\":0},{\"latitude\":-44.838599020871335,\"longitude\":-72.99304797957059,\"altitude\":0},{\"latitude\":-44.839320923691545,\"longitude\":-72.99351474499649,\"altitude\":0},{\"latitude\":-44.839610876178966,\"longitude\":-72.99405984815172,\"altitude\":0},{\"latitude\":-44.84056029630632,\"longitude\":-72.9954550794048,\"altitude\":0},{\"latitude\":-44.84132230770148,\"longitude\":-72.99534956738862,\"altitude\":0},{\"latitude\":-44.84252030735821,\"longitude\":-72.99521335291509,\"altitude\":0},{\"latitude\":-44.84317565979255,\"longitude\":-72.9956237753324,\"altitude\":0},{\"latitude\":-44.843667133168125,\"longitude\":-72.99636172514947,\"altitude\":0},{\"latitude\":-44.84394261713661,\"longitude\":-72.99721859162688,\"altitude\":0},{\"latitude\":-44.843882389739015,\"longitude\":-72.9981567555857,\"altitude\":0},{\"latitude\":-44.84358406448315,\"longitude\":-72.99815436425203,\"altitude\":0},{\"latitude\":-44.842968544659044,\"longitude\":-72.99796914234956,\"altitude\":0},{\"latitude\":-44.84229652258059,\"longitude\":-72.99832515239261,\"altitude\":0},{\"latitude\":-44.84260186408956,\"longitude\":-72.99930951528843,\"altitude\":0},{\"latitude\":-44.84275121284282,\"longitude\":-73.00015252939319,\"altitude\":0},{\"latitude\":-44.8429491100904,\"longitude\":-73.00062570427052,\"altitude\":0},{\"latitude\":-44.84171571461279,\"longitude\":-73.00143261471118,\"altitude\":0},{\"latitude\":-44.84064284452745,\"longitude\":-73.00173149452797,\"altitude\":0},{\"latitude\":-44.83932163743547,\"longitude\":-73.00003952069363,\"altitude\":0},{\"latitude\":-44.83932163743547,\"longitude\":-73.00003952069363,\"altitude\":0},{\"latitude\":-44.840545503761554,\"longitude\":-73.0010390281679,\"altitude\":0},{\"latitude\":-44.841336680036264,\"longitude\":-73.00077080726642,\"altitude\":0},{\"latitude\":-44.84203288977402,\"longitude\":-72.99959656943251,\"altitude\":0},{\"latitude\":-44.8419752085765,\"longitude\":-72.99884871258175,\"altitude\":0},{\"latitude\":-44.841658112094564,\"longitude\":-72.99784189983681,\"altitude\":0},{\"latitude\":-44.84076858704939,\"longitude\":-72.99685754858177,\"altitude\":0},{\"latitude\":-44.83985244110743,\"longitude\":-72.99651021225648,\"altitude\":0},{\"latitude\":-44.83861559735809,\"longitude\":-72.99572573422256,\"altitude\":0},{\"latitude\":-44.83739865000726,\"longitude\":-72.99568150946098,\"altitude\":0},{\"latitude\":-44.836784151699796,\"longitude\":-72.99667049382305,\"altitude\":0},{\"latitude\":-44.83668836383837,\"longitude\":-72.99819588661211,\"altitude\":0},{\"latitude\":-44.837099195761084,\"longitude\":-72.99906492233293,\"altitude\":0},{\"latitude\":-44.83932163743547,\"longitude\":-73.00003952069363,\"altitude\":0},{\"latitude\":-44.83932163743547,\"longitude\":-73.00003952069363,\"altitude\":0},{\"latitude\":-44.83932163743547,\"longitude\":-73.00003952069363,\"altitude\":0},{\"latitude\":-44.839235565614324,\"longitude\":-73.00000219078558,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"ae4417cc-a08b-4e54-6aae-20b2e3fd0408\",\"name\":\"Autotracking\",\"vertices\":[{\"latitude\":-44.83921232000261,\"longitude\":-73.00079749510047,\"altitude\":0},{\"latitude\":-44.838533280532936,\"longitude\":-73.0012321472168,\"altitude\":0},{\"latitude\":-44.8364487105307,\"longitude\":-73.00080299377441,\"altitude\":0},{\"latitude\":-44.83434136031247,\"longitude\":-72.99848277709425,\"altitude\":0},{\"latitude\":-44.83426075397064,\"longitude\":-72.99545018172346,\"altitude\":0},{\"latitude\":-44.835619198287425,\"longitude\":-72.99287365271982,\"altitude\":0},{\"latitude\":-44.83700612589472,\"longitude\":-72.9917715612685,\"altitude\":0},{\"latitude\":-44.83977833707995,\"longitude\":-72.99068400018336,\"altitude\":0},{\"latitude\":-44.841707475424215,\"longitude\":-72.99188077202788,\"altitude\":0},{\"latitude\":-44.84443981037393,\"longitude\":-72.99536516607573,\"altitude\":0},{\"latitude\":-44.84317666221004,\"longitude\":-72.99799904100965,\"altitude\":0},{\"latitude\":-44.84246139524897,\"longitude\":-72.99851662674085,\"altitude\":0},{\"latitude\":-44.84297256226565,\"longitude\":-73.0014019625609,\"altitude\":0},{\"latitude\":-44.843830766867995,\"longitude\":-73.00280381635554,\"altitude\":0},{\"latitude\":-44.842876286334196,\"longitude\":-73.00529086015501,\"altitude\":0},{\"latitude\":-44.84148227238464,\"longitude\":-73.00604985638218,\"altitude\":0},{\"latitude\":-44.83909625365813,\"longitude\":-73.0023694038391,\"altitude\":0},{\"latitude\":-44.83921232000261,\"longitude\":-73.00079749510047,\"altitude\":0},{\"latitude\":-44.83943099182762,\"longitude\":-72.99930095672606,\"altitude\":0},{\"latitude\":-44.84064820514152,\"longitude\":-72.99998760223387,\"altitude\":0},{\"latitude\":-44.84085741109015,\"longitude\":-72.99919366836549,\"altitude\":0},{\"latitude\":-44.83768120263746,\"longitude\":-72.99749851226805,\"altitude\":0},{\"latitude\":-44.83745296534733,\"longitude\":-72.99833536148071,\"altitude\":0},{\"latitude\":-44.83941577649846,\"longitude\":-72.99938678741454,\"altitude\":0},{\"latitude\":-44.83921232000261,\"longitude\":-73.00079749510047,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 4300,
        "wires": [
            [
                "7c260b107853211e"
            ]
        ]
    },
    {
        "id": "7c260b107853211e",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 4300,
        "wires": [
            [
                "266dc09105c08d57"
            ]
        ]
    },
    {
        "id": "77fb2ddce030453a",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 4300,
        "wires": []
    },
    {
        "id": "6ce418426d41e1d6",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT MARTA",
        "info": "",
        "x": 140,
        "y": 4260,
        "wires": []
    },
    {
        "id": "31aa5f9c057dbb09",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 4300,
        "wires": [
            [
                "77fb2ddce030453a"
            ]
        ]
    },
    {
        "id": "266dc09105c08d57",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "138",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Marta;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Marta\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4300,
        "wires": [
            [
                "31aa5f9c057dbb09"
            ]
        ]
    },
    {
        "id": "eafd1a715150aee9",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Pamela\":{\"codigo_centro\":\"139\",\"Modulo100\":{\"id\":\"f98b0c28-cef2-42fc-6af9-86262092feee\",\"name\":\"MODULO\",\"vertices\":[{\"latitude\":-45.83394967379426,\"longitude\":-73.93413126389372,\"altitude\":0},{\"latitude\":-45.83392752914329,\"longitude\":-73.93389920773085,\"altitude\":0},{\"latitude\":-45.8338270674339,\"longitude\":-73.93284645990686,\"altitude\":0},{\"latitude\":-45.832555065602776,\"longitude\":-73.93283106386662,\"altitude\":0},{\"latitude\":-45.83254100141239,\"longitude\":-73.93199598637882,\"altitude\":0},{\"latitude\":-45.83537405606723,\"longitude\":-73.9319880036632,\"altitude\":0},{\"latitude\":-45.83536281736136,\"longitude\":-73.93279170977692,\"altitude\":0},{\"latitude\":-45.8338270674339,\"longitude\":-73.93284645990686,\"altitude\":0},{\"latitude\":-45.83394967379426,\"longitude\":-73.93413126389372,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"7d0626b8-ef3f-4a99-7371-1be5e289c978\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-45.833692258704744,\"longitude\":-73.93302470687111,\"altitude\":0},{\"latitude\":-45.83234677262123,\"longitude\":-73.93307742840443,\"altitude\":0},{\"latitude\":-45.83233481850934,\"longitude\":-73.93171348838322,\"altitude\":0},{\"latitude\":-45.83554436231098,\"longitude\":-73.93164486221497,\"altitude\":0},{\"latitude\":-45.83556826892541,\"longitude\":-73.93295733293729,\"altitude\":0},{\"latitude\":-45.834206998016484,\"longitude\":-73.9330380466683,\"altitude\":0},{\"latitude\":-45.83394265019206,\"longitude\":-73.93407017073511,\"altitude\":0},{\"latitude\":-45.835104256117155,\"longitude\":-73.93430708568657,\"altitude\":0},{\"latitude\":-45.83642839929766,\"longitude\":-73.93389894670842,\"altitude\":0},{\"latitude\":-45.83732055993252,\"longitude\":-73.93261026806464,\"altitude\":0},{\"latitude\":-45.83735456837995,\"longitude\":-73.93123077588702,\"altitude\":0},{\"latitude\":-45.8367034507545,\"longitude\":-73.92977635057927,\"altitude\":0},{\"latitude\":-45.83589372878309,\"longitude\":-73.92927237139126,\"altitude\":0},{\"latitude\":-45.83480162673543,\"longitude\":-73.92963378289885,\"altitude\":0},{\"latitude\":-45.834100403501246,\"longitude\":-73.93023783818256,\"altitude\":0},{\"latitude\":-45.8337324524237,\"longitude\":-73.93021890074758,\"altitude\":0},{\"latitude\":-45.8327777489711,\"longitude\":-73.92933566286105,\"altitude\":0},{\"latitude\":-45.831730585503536,\"longitude\":-73.92920896960707,\"altitude\":0},{\"latitude\":-45.830772427952816,\"longitude\":-73.93004154359106,\"altitude\":0},{\"latitude\":-45.83047635060933,\"longitude\":-73.93142433209431,\"altitude\":0},{\"latitude\":-45.83070637050194,\"longitude\":-73.93284335029335,\"altitude\":0},{\"latitude\":-45.83132599721398,\"longitude\":-73.93377390777795,\"altitude\":0},{\"latitude\":-45.83298809885091,\"longitude\":-73.93439581039858,\"altitude\":0},{\"latitude\":-45.833894184865976,\"longitude\":-73.93407210263005,\"altitude\":0},{\"latitude\":-45.833692258704744,\"longitude\":-73.93302470687111,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"12b679e2-453a-450c-5a23-4edcf4ca386d\",\"name\":\"Zona exterior\",\"vertices\":[{\"latitude\":-45.83389563621496,\"longitude\":-73.93407480353005,\"altitude\":0},{\"latitude\":-45.832998512610054,\"longitude\":-73.93438646021184,\"altitude\":0},{\"latitude\":-45.83132599721398,\"longitude\":-73.93377390777795,\"altitude\":0},{\"latitude\":-45.83070637050194,\"longitude\":-73.93284335029335,\"altitude\":0},{\"latitude\":-45.83047635060933,\"longitude\":-73.93142433209431,\"altitude\":0},{\"latitude\":-45.83077242795282,\"longitude\":-73.93004154359106,\"altitude\":0},{\"latitude\":-45.831730585503536,\"longitude\":-73.92920896960707,\"altitude\":0},{\"latitude\":-45.8327777489711,\"longitude\":-73.92933566286105,\"altitude\":0},{\"latitude\":-45.8337324524237,\"longitude\":-73.93021890074758,\"altitude\":0},{\"latitude\":-45.834100403501246,\"longitude\":-73.93023783818256,\"altitude\":0},{\"latitude\":-45.83480162673543,\"longitude\":-73.92963378289885,\"altitude\":0},{\"latitude\":-45.83589372878309,\"longitude\":-73.92927237139126,\"altitude\":0},{\"latitude\":-45.8367034507545,\"longitude\":-73.92977635057927,\"altitude\":0},{\"latitude\":-45.83735456837995,\"longitude\":-73.93123077588702,\"altitude\":0},{\"latitude\":-45.83732055993252,\"longitude\":-73.93261026806464,\"altitude\":0},{\"latitude\":-45.83642839929766,\"longitude\":-73.93389894670842,\"altitude\":0},{\"latitude\":-45.83510163609092,\"longitude\":-73.9343216295449,\"altitude\":0},{\"latitude\":-45.833944101539785,\"longitude\":-73.93407287163511,\"altitude\":0},{\"latitude\":-45.83423181371732,\"longitude\":-73.93425518151548,\"altitude\":0},{\"latitude\":-45.835260288085735,\"longitude\":-73.93456981964887,\"altitude\":0},{\"latitude\":-45.83701956210143,\"longitude\":-73.934381809338,\"altitude\":0},{\"latitude\":-45.83825975520283,\"longitude\":-73.93310192505848,\"altitude\":0},{\"latitude\":-45.83869141154104,\"longitude\":-73.93160322114822,\"altitude\":0},{\"latitude\":-45.838374626556394,\"longitude\":-73.92976233283532,\"altitude\":0},{\"latitude\":-45.83775786249724,\"longitude\":-73.92824014436422,\"altitude\":0},{\"latitude\":-45.83603516567243,\"longitude\":-73.92791934466854,\"altitude\":0},{\"latitude\":-45.83509863769074,\"longitude\":-73.92840581023317,\"altitude\":0},{\"latitude\":-45.83410088115774,\"longitude\":-73.92952253431912,\"altitude\":0},{\"latitude\":-45.833788381016845,\"longitude\":-73.92948759683323,\"altitude\":0},{\"latitude\":-45.83257544442369,\"longitude\":-73.92819357806091,\"altitude\":0},{\"latitude\":-45.83112366656545,\"longitude\":-73.92773960314128,\"altitude\":0},{\"latitude\":-45.82995818856146,\"longitude\":-73.92846277015481,\"altitude\":0},{\"latitude\":-45.82936618204655,\"longitude\":-73.92992732373384,\"altitude\":0},{\"latitude\":-45.829270609526084,\"longitude\":-73.93208679522996,\"altitude\":0},{\"latitude\":-45.83007994014637,\"longitude\":-73.93355851279851,\"altitude\":0},{\"latitude\":-45.83141567624563,\"longitude\":-73.93442130114249,\"altitude\":0},{\"latitude\":-45.832688588982215,\"longitude\":-73.93456963888713,\"altitude\":0},{\"latitude\":-45.83363478197846,\"longitude\":-73.93438427870899,\"altitude\":0},{\"latitude\":-45.83389563621496,\"longitude\":-73.93407480353005,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"a3b5c35a-92e2-446c-46ee-21fdecedec33\",\"name\":\"Active tracking\",\"vertices\":[{\"latitude\":-45.83377860805298,\"longitude\":-73.93302334609454,\"altitude\":0},{\"latitude\":-45.83234415246516,\"longitude\":-73.93309197226276,\"altitude\":0},{\"latitude\":-45.83233219835272,\"longitude\":-73.93172803224154,\"altitude\":0},{\"latitude\":-45.83300584108091,\"longitude\":-73.93171362880398,\"altitude\":0},{\"latitude\":-45.8343370307988,\"longitude\":-73.93168516556591,\"altitude\":0},{\"latitude\":-45.83554174230546,\"longitude\":-73.9316594060733,\"altitude\":0},{\"latitude\":-45.83556564892101,\"longitude\":-73.9329718767956,\"altitude\":0},{\"latitude\":-45.83377860805298,\"longitude\":-73.93302334609454,\"altitude\":0},{\"latitude\":-45.83391844256648,\"longitude\":-73.93410159493577,\"altitude\":0},{\"latitude\":-45.834609305064745,\"longitude\":-73.93553080064257,\"altitude\":0},{\"latitude\":-45.83765448126404,\"longitude\":-73.93582483968376,\"altitude\":0},{\"latitude\":-45.84067000446299,\"longitude\":-73.93430117621268,\"altitude\":0},{\"latitude\":-45.840916371537894,\"longitude\":-73.93032789230347,\"altitude\":0},{\"latitude\":-45.840094195168184,\"longitude\":-73.92661571502687,\"altitude\":0},{\"latitude\":-45.83792658104811,\"longitude\":-73.92348289489748,\"altitude\":0},{\"latitude\":-45.83531038258453,\"longitude\":-73.92253875732423,\"altitude\":0},{\"latitude\":-45.8322006838613,\"longitude\":-73.92266750335695,\"altitude\":0},{\"latitude\":-45.82891139035371,\"longitude\":-73.92444849014282,\"altitude\":0},{\"latitude\":-45.82752568347183,\"longitude\":-73.92749226695254,\"altitude\":0},{\"latitude\":-45.82669838269962,\"longitude\":-73.93009900887486,\"altitude\":0},{\"latitude\":-45.82713903386538,\"longitude\":-73.93400838137026,\"altitude\":0},{\"latitude\":-45.83000600627382,\"longitude\":-73.93548125505303,\"altitude\":0},{\"latitude\":-45.83074706065983,\"longitude\":-73.93554694691082,\"altitude\":0},{\"latitude\":-45.8328543378303,\"longitude\":-73.93516202788093,\"altitude\":0},{\"latitude\":-45.83391844256648,\"longitude\":-73.93410159493577,\"altitude\":0},{\"latitude\":-45.83377860805298,\"longitude\":-73.93302334609454,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 4380,
        "wires": [
            [
                "596336c4c074ba0a"
            ]
        ]
    },
    {
        "id": "596336c4c074ba0a",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 4380,
        "wires": [
            [
                "79c0930f40102cca"
            ]
        ]
    },
    {
        "id": "599e8a24edb96959",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 4380,
        "wires": []
    },
    {
        "id": "d9f5ae6ace0e75ed",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT PAMELA",
        "info": "",
        "x": 140,
        "y": 4340,
        "wires": []
    },
    {
        "id": "81c83a1d0149fb43",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 4380,
        "wires": [
            [
                "599e8a24edb96959"
            ]
        ]
    },
    {
        "id": "79c0930f40102cca",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "139",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Pamela;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Pamela\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4380,
        "wires": [
            [
                "81c83a1d0149fb43"
            ]
        ]
    },
    {
        "id": "a4978d039fd99345",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Pangal1\":{\"codigo_centro\":\"140\",\"Modulo100\":{\"id\":\"e34977b1-2b5a-45fd-50ed-e46fc4168e40\",\"name\":\"Modulo100\",\"vertices\":[{\"latitude\":-44.785269076670936,\"longitude\":-73.31308918251052,\"altitude\":0},{\"latitude\":-44.785269076670936,\"longitude\":-73.31308918251052,\"altitude\":0},{\"latitude\":-44.78627746007405,\"longitude\":-73.31596432444323,\"altitude\":0},{\"latitude\":-44.78695887390743,\"longitude\":-73.31547071005953,\"altitude\":0},{\"latitude\":-44.7859387569335,\"longitude\":-73.31258237218246,\"altitude\":0},{\"latitude\":-44.785269076670936,\"longitude\":-73.31308918251052,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"faaf428e-633e-44dd-6274-caa57279b5ed\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-44.78532305037616,\"longitude\":-73.31216644091975,\"altitude\":0},{\"latitude\":-44.784878830845365,\"longitude\":-73.3128256992005,\"altitude\":0},{\"latitude\":-44.784665604228586,\"longitude\":-73.31409414566174,\"altitude\":0},{\"latitude\":-44.7857086299635,\"longitude\":-73.3173487117018,\"altitude\":0},{\"latitude\":-44.786792503818006,\"longitude\":-73.31769920352399,\"altitude\":0},{\"latitude\":-44.787603915389184,\"longitude\":-73.31713174070717,\"altitude\":0},{\"latitude\":-44.788054036356584,\"longitude\":-73.31548776765372,\"altitude\":0},{\"latitude\":-44.78670958546902,\"longitude\":-73.31220816572313,\"altitude\":0},{\"latitude\":-44.785927775651096,\"longitude\":-73.31201623005877,\"altitude\":0},{\"latitude\":-44.78532305037616,\"longitude\":-73.31216644091975,\"altitude\":0},{\"latitude\":-44.78595456631405,\"longitude\":-73.31243632494288,\"altitude\":0},{\"latitude\":-44.78595456631405,\"longitude\":-73.31243632494288,\"altitude\":0},{\"latitude\":-44.78707055452547,\"longitude\":-73.315544661903,\"altitude\":0},{\"latitude\":-44.786233037166284,\"longitude\":-73.31615201448582,\"altitude\":0},{\"latitude\":-44.78515187814814,\"longitude\":-73.31303432489828,\"altitude\":0},{\"latitude\":-44.78595456631405,\"longitude\":-73.31243632494288,\"altitude\":0},{\"latitude\":-44.78532305037616,\"longitude\":-73.31216644091975,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"093b528b-5237-4e7b-6686-3c2ddd94d012\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-44.78532305037616,\"longitude\":-73.31216644091975,\"altitude\":0},{\"latitude\":-44.784878830845365,\"longitude\":-73.3128256992005,\"altitude\":0},{\"latitude\":-44.784665604228586,\"longitude\":-73.31409414566174,\"altitude\":0},{\"latitude\":-44.7857086299635,\"longitude\":-73.3173487117018,\"altitude\":0},{\"latitude\":-44.78679046255977,\"longitude\":-73.31769807620446,\"altitude\":0},{\"latitude\":-44.78760187415964,\"longitude\":-73.31713061338765,\"altitude\":0},{\"latitude\":-44.788054036356584,\"longitude\":-73.31548776765372,\"altitude\":0},{\"latitude\":-44.78670958546902,\"longitude\":-73.31220816572313,\"altitude\":0},{\"latitude\":-44.785927775651096,\"longitude\":-73.31201623005877,\"altitude\":0},{\"latitude\":-44.78532305037616,\"longitude\":-73.31216644091975,\"altitude\":0},{\"latitude\":-44.785938567147014,\"longitude\":-73.31193173389877,\"altitude\":0},{\"latitude\":-44.78708735533775,\"longitude\":-73.31197865005335,\"altitude\":0},{\"latitude\":-44.78949777867878,\"longitude\":-73.31407902256954,\"altitude\":0},{\"latitude\":-44.789690866693476,\"longitude\":-73.31724384925315,\"altitude\":0},{\"latitude\":-44.788664154854835,\"longitude\":-73.31924526664962,\"altitude\":0},{\"latitude\":-44.78693085519683,\"longitude\":-73.32026230869462,\"altitude\":0},{\"latitude\":-44.78527741909683,\"longitude\":-73.3198826751306,\"altitude\":0},{\"latitude\":-44.78400357850612,\"longitude\":-73.31807704799488,\"altitude\":0},{\"latitude\":-44.784335551849814,\"longitude\":-73.31442228550686,\"altitude\":0},{\"latitude\":-44.784704446495184,\"longitude\":-73.31274354464703,\"altitude\":0},{\"latitude\":-44.78532305037616,\"longitude\":-73.31216644091975,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"186248fa-1997-4587-4eed-65b2df66e7e4\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-44.78535383233011,\"longitude\":-73.31214269862626,\"altitude\":0},{\"latitude\":-44.78680520252254,\"longitude\":-73.31133778091905,\"altitude\":0},{\"latitude\":-44.7892986945154,\"longitude\":-73.31162058980374,\"altitude\":0},{\"latitude\":-44.79098926765183,\"longitude\":-73.31426376672195,\"altitude\":0},{\"latitude\":-44.790819440652726,\"longitude\":-73.31792940608152,\"altitude\":0},{\"latitude\":-44.78958432031342,\"longitude\":-73.32067047813011,\"altitude\":0},{\"latitude\":-44.7872537302513,\"longitude\":-73.32225529652085,\"altitude\":0},{\"latitude\":-44.784891393421255,\"longitude\":-73.32149388776045,\"altitude\":0},{\"latitude\":-44.78314273859808,\"longitude\":-73.31921836283051,\"altitude\":0},{\"latitude\":-44.783768091395906,\"longitude\":-73.3140190283483,\"altitude\":0},{\"latitude\":-44.784848932103266,\"longitude\":-73.3125832287212,\"altitude\":0},{\"latitude\":-44.78525705023119,\"longitude\":-73.31308988507422,\"altitude\":0},{\"latitude\":-44.78631637559897,\"longitude\":-73.31593809661516,\"altitude\":0},{\"latitude\":-44.78694539523118,\"longitude\":-73.31548045644467,\"altitude\":0},{\"latitude\":-44.78590186801372,\"longitude\":-73.31265662213336,\"altitude\":0},{\"latitude\":-44.78525705023119,\"longitude\":-73.31308988507422,\"altitude\":0},{\"latitude\":-44.784848932103266,\"longitude\":-73.3125832287212,\"altitude\":0},{\"latitude\":-44.78535383233011,\"longitude\":-73.31214269862626,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 4460,
        "wires": [
            [
                "ab044117447ea917"
            ]
        ]
    },
    {
        "id": "ab044117447ea917",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 4460,
        "wires": [
            [
                "46cfae217a6a08ed"
            ]
        ]
    },
    {
        "id": "46cfae217a6a08ed",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "140",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Pangal1;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Pangal1\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4460,
        "wires": [
            [
                "6ccff1b3144c0c76"
            ]
        ]
    },
    {
        "id": "6ccff1b3144c0c76",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 4460,
        "wires": [
            [
                "c7c8dd6f0e22dfaf"
            ]
        ]
    },
    {
        "id": "c7c8dd6f0e22dfaf",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 4460,
        "wires": []
    },
    {
        "id": "2b880f13da5821f0",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT PANGAL 1",
        "info": "",
        "x": 150,
        "y": 4420,
        "wires": []
    },
    {
        "id": "554e38b3bc561ea4",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT PANGAL 2",
        "info": "",
        "x": 150,
        "y": 4500,
        "wires": []
    },
    {
        "id": "fefc108b2097997d",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Pangal2\":{\"codigo_centro\":\"141\",\"Modulo100\":{\"id\":\"7fbe2ba2-86d5-46ed-40d7-c774977ec291\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-44.798988538232116,\"longitude\":-73.2608095033299,\"altitude\":0},{\"latitude\":-44.798454139176684,\"longitude\":-73.26048989484151,\"altitude\":0},{\"latitude\":-44.79928034458588,\"longitude\":-73.2579882144629,\"altitude\":0},{\"latitude\":-44.79980365396656,\"longitude\":-73.25830742631751,\"altitude\":0},{\"latitude\":-44.798988538232116,\"longitude\":-73.2608095033299,\"altitude\":0}]},\"INTERIOR100\":{\"id\":\"67540a91-337b-47b7-7990-725ce6e945cb\",\"name\":\"Zona interior Mod100\",\"vertices\":[{\"latitude\":-44.798590528084034,\"longitude\":-73.26200817759234,\"altitude\":0},{\"latitude\":-44.798691087553784,\"longitude\":-73.2608035966902,\"altitude\":0},{\"latitude\":-44.79831831611763,\"longitude\":-73.26059751870378,\"altitude\":0},{\"latitude\":-44.79920081805914,\"longitude\":-73.25780979497141,\"altitude\":0},{\"latitude\":-44.79996144355496,\"longitude\":-73.25824668743195,\"altitude\":0},{\"latitude\":-44.79904192385999,\"longitude\":-73.26103074967841,\"altitude\":0},{\"latitude\":-44.798691087553784,\"longitude\":-73.2608035966902,\"altitude\":0},{\"latitude\":-44.798590528084034,\"longitude\":-73.26200817759234,\"altitude\":0},{\"latitude\":-44.799279233025196,\"longitude\":-73.2619506680106,\"altitude\":0},{\"latitude\":-44.79988349646882,\"longitude\":-73.26141107751312,\"altitude\":0},{\"latitude\":-44.801111776699635,\"longitude\":-73.25857154502647,\"altitude\":0},{\"latitude\":-44.800982111042096,\"longitude\":-73.25677838012868,\"altitude\":0},{\"latitude\":-44.79926373295982,\"longitude\":-73.25578085884123,\"altitude\":0},{\"latitude\":-44.798335070099306,\"longitude\":-73.25674779899597,\"altitude\":0},{\"latitude\":-44.79764657767628,\"longitude\":-73.25991642213873,\"altitude\":0},{\"latitude\":-44.79784885018553,\"longitude\":-73.2609853527615,\"altitude\":0},{\"latitude\":-44.798590528084034,\"longitude\":-73.26200817759234,\"altitude\":0}]},\"EXTERIOR100\":{\"id\":\"bfa3fe1b-f464-4a47-5cb5-7fa83c569c6b\",\"name\":\"Zona exterior Mod100\",\"vertices\":[{\"latitude\":-44.79784885018553,\"longitude\":-73.2609853527615,\"altitude\":0},{\"latitude\":-44.79764657767628,\"longitude\":-73.25991642213873,\"altitude\":0},{\"latitude\":-44.798335070099306,\"longitude\":-73.25674779899597,\"altitude\":0},{\"latitude\":-44.79926373295982,\"longitude\":-73.25578085884123,\"altitude\":0},{\"latitude\":-44.800982111042096,\"longitude\":-73.25677838012868,\"altitude\":0},{\"latitude\":-44.801111776699635,\"longitude\":-73.25857154502647,\"altitude\":0},{\"latitude\":-44.79988349646882,\"longitude\":-73.26141107751312,\"altitude\":0},{\"latitude\":-44.799279233025196,\"longitude\":-73.2619506680106,\"altitude\":0},{\"latitude\":-44.79857641624957,\"longitude\":-73.26202141629,\"altitude\":0},{\"latitude\":-44.7994472487538,\"longitude\":-73.26231837619804,\"altitude\":0},{\"latitude\":-44.80067090908732,\"longitude\":-73.2614863582889,\"altitude\":0},{\"latitude\":-44.80289357460612,\"longitude\":-73.25867537009215,\"altitude\":0},{\"latitude\":-44.8030783228608,\"longitude\":-73.25671148413817,\"altitude\":0},{\"latitude\":-44.80201525048652,\"longitude\":-73.25419756271883,\"altitude\":0},{\"latitude\":-44.799193131882916,\"longitude\":-73.25267888571976,\"altitude\":0},{\"latitude\":-44.79668372537135,\"longitude\":-73.2540332910073,\"altitude\":0},{\"latitude\":-44.79601788428372,\"longitude\":-73.25622271668736,\"altitude\":0},{\"latitude\":-44.79709801009326,\"longitude\":-73.26037789380453,\"altitude\":0},{\"latitude\":-44.79857641624957,\"longitude\":-73.26202141629,\"altitude\":0},{\"latitude\":-44.79784885018553,\"longitude\":-73.2609853527615,\"altitude\":0}]},\"Modulo200\":{\"id\":\"ed3f6cda-e15c-4305-52af-efbb4a1d4acb\",\"name\":\"Modulo 200\",\"vertices\":[{\"latitude\":-44.797423654431725,\"longitude\":-73.26211326937393,\"altitude\":0},{\"latitude\":-44.79688623055169,\"longitude\":-73.26173717156053,\"altitude\":0},{\"latitude\":-44.79610726157001,\"longitude\":-73.26385876019742,\"altitude\":0},{\"latitude\":-44.79660527392109,\"longitude\":-73.26425162061014,\"altitude\":0},{\"latitude\":-44.797423654431725,\"longitude\":-73.26211326937393,\"altitude\":0}]},\"INTERIOR200\":{\"id\":\"ff5fad04-77ad-4634-77b7-cfbb4193eba2\",\"name\":\"Zona Interior Mod200\",\"vertices\":[{\"latitude\":-44.798588204405846,\"longitude\":-73.26200976135242,\"altitude\":0},{\"latitude\":-44.79756955572924,\"longitude\":-73.2620712162481,\"altitude\":0},{\"latitude\":-44.79685782471232,\"longitude\":-73.26154684956289,\"altitude\":0},{\"latitude\":-44.79600515206281,\"longitude\":-73.26387111953335,\"altitude\":0},{\"latitude\":-44.796662108689624,\"longitude\":-73.26439819054806,\"altitude\":0},{\"latitude\":-44.79756955572924,\"longitude\":-73.2620712162481,\"altitude\":0},{\"latitude\":-44.798588204405846,\"longitude\":-73.26200976135242,\"altitude\":0},{\"latitude\":-44.79853992100612,\"longitude\":-73.26319529751882,\"altitude\":0},{\"latitude\":-44.79725245247701,\"longitude\":-73.26608144027905,\"altitude\":0},{\"latitude\":-44.79640204923639,\"longitude\":-73.26661384112253,\"altitude\":0},{\"latitude\":-44.79508906351865,\"longitude\":-73.26592386769728,\"altitude\":0},{\"latitude\":-44.79465237861169,\"longitude\":-73.26430234461876,\"altitude\":0},{\"latitude\":-44.79549120919202,\"longitude\":-73.2614911497801,\"altitude\":0},{\"latitude\":-44.79642979348261,\"longitude\":-73.26073169172771,\"altitude\":0},{\"latitude\":-44.79735138453241,\"longitude\":-73.26102947166322,\"altitude\":0},{\"latitude\":-44.798588204405846,\"longitude\":-73.26200976135242,\"altitude\":0},{\"latitude\":-44.79756955572924,\"longitude\":-73.2620712162481,\"altitude\":0},{\"latitude\":-44.798588204405846,\"longitude\":-73.26200976135242,\"altitude\":0}]},\"EXTERIOR200\":{\"id\":\"bfa3fe1b-f464-4a47-5cb5-7fa83c569c6b\",\"name\":\"Zona exterior Mod100\",\"vertices\":[{\"latitude\":-44.79642979348261,\"longitude\":-73.26073169172771,\"altitude\":0},{\"latitude\":-44.79549120919202,\"longitude\":-73.2614911497801,\"altitude\":0},{\"latitude\":-44.79465237861169,\"longitude\":-73.26430234461876,\"altitude\":0},{\"latitude\":-44.79508906351865,\"longitude\":-73.26592386769728,\"altitude\":0},{\"latitude\":-44.79640204923639,\"longitude\":-73.26661384112253,\"altitude\":0},{\"latitude\":-44.79725245247701,\"longitude\":-73.26608144027905,\"altitude\":0},{\"latitude\":-44.79853992100612,\"longitude\":-73.26319529751882,\"altitude\":0},{\"latitude\":-44.79861861674614,\"longitude\":-73.2620306500691,\"altitude\":0},{\"latitude\":-44.79875223833545,\"longitude\":-73.2630899865609,\"altitude\":0},{\"latitude\":-44.79794218322933,\"longitude\":-73.2657569973298,\"altitude\":0},{\"latitude\":-44.796650786421466,\"longitude\":-73.26766968920177,\"altitude\":0},{\"latitude\":-44.79518737628701,\"longitude\":-73.26898641585183,\"altitude\":0},{\"latitude\":-44.7927371600306,\"longitude\":-73.26703632837693,\"altitude\":0},{\"latitude\":-44.79198468345704,\"longitude\":-73.26379592703677,\"altitude\":0},{\"latitude\":-44.792325079019065,\"longitude\":-73.26069215292651,\"altitude\":0},{\"latitude\":-44.793851303769614,\"longitude\":-73.25953152504792,\"altitude\":0},{\"latitude\":-44.796101373967915,\"longitude\":-73.25968071075816,\"altitude\":0},{\"latitude\":-44.79861629306907,\"longitude\":-73.26203223382917,\"altitude\":0},{\"latitude\":-44.79735138453241,\"longitude\":-73.26102947166322,\"altitude\":0},{\"latitude\":-44.79642979348261,\"longitude\":-73.26073169172771,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"c494c96a-a3f2-44d6-5de2-1d208363cc0f\",\"name\":\"Zona ActiveTracking\",\"vertices\":[{\"latitude\":-44.799232482693064,\"longitude\":-73.26343762635787,\"altitude\":0},{\"latitude\":-44.79743010863498,\"longitude\":-73.26212535007438,\"altitude\":0},{\"latitude\":-44.79710819415805,\"longitude\":-73.26297348486145,\"altitude\":0},{\"latitude\":-44.79662298633566,\"longitude\":-73.26427527313926,\"altitude\":0},{\"latitude\":-44.79610511579337,\"longitude\":-73.26386106777814,\"altitude\":0},{\"latitude\":-44.79688891805129,\"longitude\":-73.26173744346634,\"altitude\":0},{\"latitude\":-44.79734001232726,\"longitude\":-73.26203410188823,\"altitude\":0},{\"latitude\":-44.79743010863498,\"longitude\":-73.26212535007438,\"altitude\":0},{\"latitude\":-44.798970741315614,\"longitude\":-73.26081454013527,\"altitude\":0},{\"latitude\":-44.798445968007194,\"longitude\":-73.26050297326779,\"altitude\":0},{\"latitude\":-44.79928777268137,\"longitude\":-73.25796615766528,\"altitude\":0},{\"latitude\":-44.799827791854916,\"longitude\":-73.25830937389385,\"altitude\":0},{\"latitude\":-44.798988538232116,\"longitude\":-73.2608095033299,\"altitude\":0},{\"latitude\":-44.79743010863498,\"longitude\":-73.26212535007438,\"altitude\":0},{\"latitude\":-44.799232482693064,\"longitude\":-73.26343762635787,\"altitude\":0},{\"latitude\":-44.80175986249694,\"longitude\":-73.26088215301779,\"altitude\":0},{\"latitude\":-44.80228217534467,\"longitude\":-73.25504769882559,\"altitude\":0},{\"latitude\":-44.79881934637121,\"longitude\":-73.25263485211526,\"altitude\":0},{\"latitude\":-44.795733577851145,\"longitude\":-73.25341187054741,\"altitude\":0},{\"latitude\":-44.79226068175628,\"longitude\":-73.25849657011211,\"altitude\":0},{\"latitude\":-44.791235218431986,\"longitude\":-73.26208176042182,\"altitude\":0},{\"latitude\":-44.79288949459395,\"longitude\":-73.26651212867526,\"altitude\":0},{\"latitude\":-44.79406970942219,\"longitude\":-73.26756178515379,\"altitude\":0},{\"latitude\":-44.7974651109133,\"longitude\":-73.26697561335408,\"altitude\":0},{\"latitude\":-44.799232482693064,\"longitude\":-73.26343762635787,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 4540,
        "wires": [
            [
                "00bbed671828cc73"
            ]
        ]
    },
    {
        "id": "00bbed671828cc73",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 4540,
        "wires": [
            [
                "d3d56d241abc201c"
            ]
        ]
    },
    {
        "id": "d3d56d241abc201c",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "141",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Pangal2;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Pangal2\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int_100\"] = convertirCoordenadas(json.INTERIOR100.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext_100\"] = convertirCoordenadas(json.EXTERIOR100.vertices);\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_200\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int_200\"] = convertirCoordenadas(json.INTERIOR200.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext_200\"] = convertirCoordenadas(json.EXTERIOR200.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act_200\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4540,
        "wires": [
            [
                "6899b95aa49f609d"
            ]
        ]
    },
    {
        "id": "6899b95aa49f609d",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 4540,
        "wires": [
            [
                "7c2d7db5e33dde46"
            ]
        ]
    },
    {
        "id": "7c2d7db5e33dde46",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 4540,
        "wires": []
    },
    {
        "id": "8cabd9abd5bfc0d9",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Refugio\":{\"codigo_centro\":\"142\",\"Modulo100\":{\"id\":\"427b9d05-da9b-4f99-555d-d7fd49218db9\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-44.01868939330962,\"longitude\":-73.126087090552,\"altitude\":0},{\"latitude\":-44.01878190833792,\"longitude\":-73.12509932606596,\"altitude\":0},{\"latitude\":-44.02086871151152,\"longitude\":-73.12545272150929,\"altitude\":0},{\"latitude\":-44.020769456794554,\"longitude\":-73.12652696098084,\"altitude\":0},{\"latitude\":-44.01868939330962,\"longitude\":-73.126087090552,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"639d76bb-84ce-4ba1-6a59-ecf0191ec520\",\"name\":\"Zona Interior 2\",\"vertices\":[{\"latitude\":-44.01824751048484,\"longitude\":-73.1255820109317,\"altitude\":0},{\"latitude\":-44.018570323871124,\"longitude\":-73.1258755564511,\"altitude\":0},{\"latitude\":-44.01854926405596,\"longitude\":-73.12623366607322,\"altitude\":0},{\"latitude\":-44.02090332919937,\"longitude\":-73.12671271018769,\"altitude\":0},{\"latitude\":-44.02102402983539,\"longitude\":-73.12530623044525,\"altitude\":0},{\"latitude\":-44.01870754453535,\"longitude\":-73.12490850477188,\"altitude\":0},{\"latitude\":-44.018594727926214,\"longitude\":-73.1254439641921,\"altitude\":0},{\"latitude\":-44.01826221769466,\"longitude\":-73.12546672134606,\"altitude\":0},{\"latitude\":-44.0186861304575,\"longitude\":-73.12422653901453,\"altitude\":0},{\"latitude\":-44.01923271115124,\"longitude\":-73.12371358124453,\"altitude\":0},{\"latitude\":-44.02056552319541,\"longitude\":-73.12354803624171,\"altitude\":0},{\"latitude\":-44.02152038487977,\"longitude\":-73.12397036536468,\"altitude\":0},{\"latitude\":-44.02182243847965,\"longitude\":-73.12500340834639,\"altitude\":0},{\"latitude\":-44.0218887355403,\"longitude\":-73.1263701101554,\"altitude\":0},{\"latitude\":-44.02137047406484,\"longitude\":-73.1278191088983,\"altitude\":0},{\"latitude\":-44.02075579808562,\"longitude\":-73.12804724161388,\"altitude\":0},{\"latitude\":-44.019681681339755,\"longitude\":-73.12788354645036,\"altitude\":0},{\"latitude\":-44.01858566074091,\"longitude\":-73.1271153196713,\"altitude\":0},{\"latitude\":-44.018353120711154,\"longitude\":-73.12673362616688,\"altitude\":0},{\"latitude\":-44.01824751048484,\"longitude\":-73.1255820109317,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"02684e44-d900-4cf8-77eb-a38e467abd3c\",\"name\":\"Zona Exterior 1\",\"vertices\":[{\"latitude\":-44.01824751048484,\"longitude\":-73.1255820109317,\"altitude\":0},{\"latitude\":-44.018353120711154,\"longitude\":-73.12673362616688,\"altitude\":0},{\"latitude\":-44.01858566074091,\"longitude\":-73.1271153196713,\"altitude\":0},{\"latitude\":-44.019681681339755,\"longitude\":-73.12788354645036,\"altitude\":0},{\"latitude\":-44.02075579808562,\"longitude\":-73.12804724161388,\"altitude\":0},{\"latitude\":-44.02137047406484,\"longitude\":-73.1278191088983,\"altitude\":0},{\"latitude\":-44.0218887355403,\"longitude\":-73.1263701101554,\"altitude\":0},{\"latitude\":-44.02182243847965,\"longitude\":-73.12500340834639,\"altitude\":0},{\"latitude\":-44.02152038487977,\"longitude\":-73.12397036536468,\"altitude\":0},{\"latitude\":-44.02056552319541,\"longitude\":-73.12354803624171,\"altitude\":0},{\"latitude\":-44.01923271115124,\"longitude\":-73.12371358124453,\"altitude\":0},{\"latitude\":-44.0186861304575,\"longitude\":-73.12422653901453,\"altitude\":0},{\"latitude\":-44.01826221769466,\"longitude\":-73.12546672134606,\"altitude\":0},{\"latitude\":-44.01859724557231,\"longitude\":-73.12416810801867,\"altitude\":0},{\"latitude\":-44.018696928577846,\"longitude\":-73.12369697007362,\"altitude\":0},{\"latitude\":-44.01917693633561,\"longitude\":-73.12294463438721,\"altitude\":0},{\"latitude\":-44.01977891884927,\"longitude\":-73.12284402871934,\"altitude\":0},{\"latitude\":-44.02046275791169,\"longitude\":-73.12239093373825,\"altitude\":0},{\"latitude\":-44.02124752933405,\"longitude\":-73.12248803194196,\"altitude\":0},{\"latitude\":-44.02238457533799,\"longitude\":-73.12327041952011,\"altitude\":0},{\"latitude\":-44.02292488408696,\"longitude\":-73.1248043039877,\"altitude\":0},{\"latitude\":-44.02288662375281,\"longitude\":-73.12659494011379,\"altitude\":0},{\"latitude\":-44.0225396660036,\"longitude\":-73.12804446060868,\"altitude\":0},{\"latitude\":-44.021875679695505,\"longitude\":-73.12892380159084,\"altitude\":0},{\"latitude\":-44.02117717634096,\"longitude\":-73.1292115962143,\"altitude\":0},{\"latitude\":-44.02045565806802,\"longitude\":-73.12910502659861,\"altitude\":0},{\"latitude\":-44.01950055124762,\"longitude\":-73.1286068338108,\"altitude\":0},{\"latitude\":-44.01858243351569,\"longitude\":-73.12727276163673,\"altitude\":0},{\"latitude\":-44.01829424739964,\"longitude\":-73.12684845308495,\"altitude\":0},{\"latitude\":-44.01824751048484,\"longitude\":-73.1255820109317,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 4620,
        "wires": [
            [
                "1a0d8f86991e4c56"
            ]
        ]
    },
    {
        "id": "1a0d8f86991e4c56",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 4620,
        "wires": [
            [
                "1ccc55b48b9450c5"
            ]
        ]
    },
    {
        "id": "1d507a51e7d04614",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 4620,
        "wires": []
    },
    {
        "id": "0e0c212404770bdf",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT REFUGIO",
        "info": "",
        "x": 150,
        "y": 4580,
        "wires": []
    },
    {
        "id": "7f22174e19c06cda",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 4620,
        "wires": [
            [
                "1d507a51e7d04614"
            ]
        ]
    },
    {
        "id": "1ccc55b48b9450c5",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "142",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Refugio;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Refugio\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4620,
        "wires": [
            [
                "7f22174e19c06cda"
            ]
        ]
    },
    {
        "id": "3ca8a022922d0923",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Serrano\":{\"codigo_centro\":\"143\",\"Modulo100\":{\"id\":\"04f83931-97ce-45e3-6202-3d60b9c1a993\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-44.179870013662594,\"longitude\":-73.62655993876926,\"altitude\":0},{\"latitude\":-44.18044000935471,\"longitude\":-73.62649997044328,\"altitude\":0},{\"latitude\":-44.18037995497931,\"longitude\":-73.62337007559631,\"altitude\":0},{\"latitude\":-44.17980998800923,\"longitude\":-73.62338930368423,\"altitude\":0},{\"latitude\":-44.179870013662594,\"longitude\":-73.62655993876926,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"c659e24e-8d24-4b57-6821-168baa4973e9\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-44.18061629193307,\"longitude\":-73.62661814669991,\"altitude\":0},{\"latitude\":-44.18056089419373,\"longitude\":-73.62329220784885,\"altitude\":0},{\"latitude\":-44.18042239926545,\"longitude\":-73.62300896631496,\"altitude\":0},{\"latitude\":-44.17977800886258,\"longitude\":-73.62300038337708,\"altitude\":0},{\"latitude\":-44.179594500528914,\"longitude\":-73.62331366552098,\"altitude\":0},{\"latitude\":-44.17963707889714,\"longitude\":-73.62586001945375,\"altitude\":0},{\"latitude\":-44.179642782067674,\"longitude\":-73.62628830223457,\"altitude\":0},{\"latitude\":-44.1793075512423,\"longitude\":-73.6267091408331,\"altitude\":0},{\"latitude\":-44.179002422752106,\"longitude\":-73.62618470178859,\"altitude\":0},{\"latitude\":-44.178996389883366,\"longitude\":-73.62559080788373,\"altitude\":0},{\"latitude\":-44.178989331527426,\"longitude\":-73.62489596198594,\"altitude\":0},{\"latitude\":-44.17897164531597,\"longitude\":-73.62315487822343,\"altitude\":0},{\"latitude\":-44.17912553233597,\"longitude\":-73.62248325334802,\"altitude\":0},{\"latitude\":-44.179562569306235,\"longitude\":-73.6220111845614,\"altitude\":0},{\"latitude\":-44.1807874864423,\"longitude\":-73.62195110334142,\"altitude\":0},{\"latitude\":-44.18115064830888,\"longitude\":-73.62227725956473,\"altitude\":0},{\"latitude\":-44.18127182965726,\"longitude\":-73.6229681968689,\"altitude\":0},{\"latitude\":-44.18131683994313,\"longitude\":-73.62698292745335,\"altitude\":0},{\"latitude\":-44.18085519483616,\"longitude\":-73.62769532177481,\"altitude\":0},{\"latitude\":-44.18033870247008,\"longitude\":-73.62775864725685,\"altitude\":0},{\"latitude\":-44.17963462775027,\"longitude\":-73.62734211910748,\"altitude\":0},{\"latitude\":-44.17941730476711,\"longitude\":-73.62707995166087,\"altitude\":0},{\"latitude\":-44.17930746289266,\"longitude\":-73.62671485040705,\"altitude\":0},{\"latitude\":-44.17964287825197,\"longitude\":-73.6262917220756,\"altitude\":0},{\"latitude\":-44.179650914151814,\"longitude\":-73.62666429594557,\"altitude\":0},{\"latitude\":-44.17977071296463,\"longitude\":-73.62679399931024,\"altitude\":0},{\"latitude\":-44.18050637370664,\"longitude\":-73.62677378854555,\"altitude\":0},{\"latitude\":-44.18061629193307,\"longitude\":-73.62661814669991,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"b75eae40-6107-424c-6530-29adb77057fd\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-44.17890180216845,\"longitude\":-73.62641006088148,\"altitude\":0},{\"latitude\":-44.1793075512423,\"longitude\":-73.6267091408331,\"altitude\":0},{\"latitude\":-44.179002422752106,\"longitude\":-73.62618470178859,\"altitude\":0},{\"latitude\":-44.17897164531597,\"longitude\":-73.62315487822343,\"altitude\":0},{\"latitude\":-44.17912553233597,\"longitude\":-73.62248325334802,\"altitude\":0},{\"latitude\":-44.179562569306235,\"longitude\":-73.6220111845614,\"altitude\":0},{\"latitude\":-44.1807874864423,\"longitude\":-73.62195110334142,\"altitude\":0},{\"latitude\":-44.18115064830888,\"longitude\":-73.62227725956473,\"altitude\":0},{\"latitude\":-44.18127182965726,\"longitude\":-73.6229681968689,\"altitude\":0},{\"latitude\":-44.18131683994313,\"longitude\":-73.62698292745335,\"altitude\":0},{\"latitude\":-44.18085519483616,\"longitude\":-73.62769532177481,\"altitude\":0},{\"latitude\":-44.18033870247008,\"longitude\":-73.62775864725685,\"altitude\":0},{\"latitude\":-44.17963462775027,\"longitude\":-73.62734211910748,\"altitude\":0},{\"latitude\":-44.17941730476711,\"longitude\":-73.62707995166087,\"altitude\":0},{\"latitude\":-44.17930746289266,\"longitude\":-73.62671485040705,\"altitude\":0},{\"latitude\":-44.17936272808061,\"longitude\":-73.62716939608899,\"altitude\":0},{\"latitude\":-44.179528680950405,\"longitude\":-73.62763792575502,\"altitude\":0},{\"latitude\":-44.180615132162444,\"longitude\":-73.62823572345775,\"altitude\":0},{\"latitude\":-44.18360015261064,\"longitude\":-73.62650559265028,\"altitude\":0},{\"latitude\":-44.183944302112465,\"longitude\":-73.6249980921275,\"altitude\":0},{\"latitude\":-44.183735031738976,\"longitude\":-73.62297248866525,\"altitude\":0},{\"latitude\":-44.183451902482055,\"longitude\":-73.62135887145998,\"altitude\":0},{\"latitude\":-44.18272560439307,\"longitude\":-73.62038040082552,\"altitude\":0},{\"latitude\":-44.18184234146324,\"longitude\":-73.62060785293579,\"altitude\":0},{\"latitude\":-44.181298758864145,\"longitude\":-73.62088358415349,\"altitude\":0},{\"latitude\":-44.18104023792335,\"longitude\":-73.62088358415349,\"altitude\":0},{\"latitude\":-44.18083711361561,\"longitude\":-73.62104666193773,\"altitude\":0},{\"latitude\":-44.180416628636394,\"longitude\":-73.62074732780457,\"altitude\":0},{\"latitude\":-44.17974569288539,\"longitude\":-73.62012076351677,\"altitude\":0},{\"latitude\":-44.179069363596746,\"longitude\":-73.61952209525045,\"altitude\":0},{\"latitude\":-44.17847843478086,\"longitude\":-73.62014007594553,\"altitude\":0},{\"latitude\":-44.178133543252414,\"longitude\":-73.62194872342062,\"altitude\":0},{\"latitude\":-44.178287944157724,\"longitude\":-73.62509538740672,\"altitude\":0},{\"latitude\":-44.17890180216845,\"longitude\":-73.62641006088148,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"48e44b0c-36f7-4bf2-7d1f-dacfed4ae634\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-44.17979801122031,\"longitude\":-73.62655373371399,\"altitude\":0},{\"latitude\":-44.179728810894126,\"longitude\":-73.62326677766367,\"altitude\":0},{\"latitude\":-44.18042854616381,\"longitude\":-73.62322709865006,\"altitude\":0},{\"latitude\":-44.180522765493954,\"longitude\":-73.62655112698033,\"altitude\":0},{\"latitude\":-44.17997138670195,\"longitude\":-73.62662322847254,\"altitude\":0},{\"latitude\":-44.17931032713522,\"longitude\":-73.62668088539478,\"altitude\":0},{\"latitude\":-44.178768270850114,\"longitude\":-73.62722528949446,\"altitude\":0},{\"latitude\":-44.17934073046019,\"longitude\":-73.62823809188042,\"altitude\":0},{\"latitude\":-44.18114030688137,\"longitude\":-73.62862325696297,\"altitude\":0},{\"latitude\":-44.183205360976324,\"longitude\":-73.62767911938973,\"altitude\":0},{\"latitude\":-44.183968582875295,\"longitude\":-73.62496686911,\"altitude\":0},{\"latitude\":-44.18355312065977,\"longitude\":-73.62105299050127,\"altitude\":0},{\"latitude\":-44.182749885657856,\"longitude\":-73.62034917780802,\"altitude\":0},{\"latitude\":-44.180861395658184,\"longitude\":-73.62101543892021,\"altitude\":0},{\"latitude\":-44.17907219837626,\"longitude\":-73.61950052818642,\"altitude\":0},{\"latitude\":-44.178481269588765,\"longitude\":-73.6201185088815,\"altitude\":0},{\"latitude\":-44.17784108985676,\"longitude\":-73.62168062714984,\"altitude\":0},{\"latitude\":-44.177853401116145,\"longitude\":-73.62391222505023,\"altitude\":0},{\"latitude\":-44.17793957962514,\"longitude\":-73.62588633088518,\"altitude\":0},{\"latitude\":-44.17819811392675,\"longitude\":-73.6267274718942,\"altitude\":0},{\"latitude\":-44.178695146500964,\"longitude\":-73.62708201372993,\"altitude\":0},{\"latitude\":-44.178918071872076,\"longitude\":-73.62665299411165,\"altitude\":0},{\"latitude\":-44.17931032817247,\"longitude\":-73.62668044909499,\"altitude\":0},{\"latitude\":-44.17979801122031,\"longitude\":-73.62655373371399,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 4700,
        "wires": [
            [
                "53540dc72850a914"
            ]
        ]
    },
    {
        "id": "53540dc72850a914",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 4700,
        "wires": [
            [
                "85c6238fd88ff195"
            ]
        ]
    },
    {
        "id": "b80b0191a6ecbe63",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 4700,
        "wires": []
    },
    {
        "id": "296ee5f092ba7cfa",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT SERRANO",
        "info": "",
        "x": 150,
        "y": 4660,
        "wires": []
    },
    {
        "id": "9427d725264fbe16",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 4700,
        "wires": [
            [
                "b80b0191a6ecbe63"
            ]
        ]
    },
    {
        "id": "85c6238fd88ff195",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "143",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Serrano;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Serrano\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4700,
        "wires": [
            [
                "9427d725264fbe16"
            ]
        ]
    },
    {
        "id": "5a01bc2042ba7507",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 4780,
        "wires": [
            [
                "61ce5be866765c9e"
            ]
        ]
    },
    {
        "id": "c9a34388a0250deb",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT STAINES2",
        "info": "",
        "x": 150,
        "y": 4740,
        "wires": []
    },
    {
        "id": "fa41d2fcf18c3a9f",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Staines2\":{\"codigo_centro\":\"144\",\"Modulo100\":{\"id\":\"79d57fbb-4f86-4b77-74a6-41a1f6a26366\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-51.41904670946051,\"longitude\":-73.7866303053897,\"altitude\":0},{\"latitude\":-51.41913494929445,\"longitude\":-73.78544819869305,\"altitude\":0},{\"latitude\":-51.415337297090744,\"longitude\":-73.78452306692971,\"altitude\":0},{\"latitude\":-51.415230407636784,\"longitude\":-73.78579435577974,\"altitude\":0},{\"latitude\":-51.41904670946051,\"longitude\":-73.7866303053897,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"2195739d-631c-4580-5af3-678f64d8dfdc\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-51.41978113892091,\"longitude\":-73.78613160592852,\"altitude\":0},{\"latitude\":-51.419140409427136,\"longitude\":-73.7863237912556,\"altitude\":0},{\"latitude\":-51.419086738125266,\"longitude\":-73.78692004050363,\"altitude\":0},{\"latitude\":-51.41508849296989,\"longitude\":-73.78613475901163,\"altitude\":0},{\"latitude\":-51.41525452856487,\"longitude\":-73.78415400291478,\"altitude\":0},{\"latitude\":-51.41923475866033,\"longitude\":-73.78513464658978,\"altitude\":0},{\"latitude\":-51.419200351206186,\"longitude\":-73.78557907970128,\"altitude\":0},{\"latitude\":-51.41979973028012,\"longitude\":-73.78593806900183,\"altitude\":0},{\"latitude\":-51.41952616084688,\"longitude\":-73.7847157766129,\"altitude\":0},{\"latitude\":-51.41879155127625,\"longitude\":-73.78310901173106,\"altitude\":0},{\"latitude\":-51.417191920771664,\"longitude\":-73.78214817297655,\"altitude\":0},{\"latitude\":-51.41560232569143,\"longitude\":-73.78218897351769,\"altitude\":0},{\"latitude\":-51.414335332406246,\"longitude\":-73.78367819408403,\"altitude\":0},{\"latitude\":-51.414156932622696,\"longitude\":-73.78574922478674,\"altitude\":0},{\"latitude\":-51.41499667359444,\"longitude\":-73.78767221026072,\"altitude\":0},{\"latitude\":-51.416294935017504,\"longitude\":-73.78853814861053,\"altitude\":0},{\"latitude\":-51.41800289239,\"longitude\":-73.78860152201604,\"altitude\":0},{\"latitude\":-51.41901169113595,\"longitude\":-73.78765569713215,\"altitude\":0},{\"latitude\":-51.41978113892091,\"longitude\":-73.78613160592852,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"2b9e3368-fcdc-42cb-7d88-ecf92d70ee65\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-51.41952616084688,\"longitude\":-73.7847157766129,\"altitude\":0},{\"latitude\":-51.418796090341644,\"longitude\":-73.78311893966138,\"altitude\":0},{\"latitude\":-51.417191920771664,\"longitude\":-73.78214817297655,\"altitude\":0},{\"latitude\":-51.41560232569143,\"longitude\":-73.78218897351769,\"altitude\":0},{\"latitude\":-51.414335332406246,\"longitude\":-73.78367819408403,\"altitude\":0},{\"latitude\":-51.414156932622696,\"longitude\":-73.78574922478674,\"altitude\":0},{\"latitude\":-51.41499667359444,\"longitude\":-73.78767221026072,\"altitude\":0},{\"latitude\":-51.416294935017504,\"longitude\":-73.78853814861053,\"altitude\":0},{\"latitude\":-51.41800289239,\"longitude\":-73.78860152201604,\"altitude\":0},{\"latitude\":-51.41901169113595,\"longitude\":-73.78765569713215,\"altitude\":0},{\"latitude\":-51.41978113892091,\"longitude\":-73.78613160592852,\"altitude\":0},{\"latitude\":-51.41912457338235,\"longitude\":-73.7880606098466,\"altitude\":0},{\"latitude\":-51.41763216924344,\"longitude\":-73.78984563110821,\"altitude\":0},{\"latitude\":-51.415001205918735,\"longitude\":-73.79071066531398,\"altitude\":0},{\"latitude\":-51.41312213138447,\"longitude\":-73.78677330200964,\"altitude\":0},{\"latitude\":-51.41356166331325,\"longitude\":-73.78229989524473,\"altitude\":0},{\"latitude\":-51.41615458657388,\"longitude\":-73.77937865774236,\"altitude\":0},{\"latitude\":-51.41858842090003,\"longitude\":-73.7819453791194,\"altitude\":0},{\"latitude\":-51.41956627843698,\"longitude\":-73.78407684520838,\"altitude\":0},{\"latitude\":-51.41979973028012,\"longitude\":-73.78593806900183,\"altitude\":0},{\"latitude\":-51.41952616084688,\"longitude\":-73.7847157766129,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"7cca3aeb-7f93-429a-7321-4ed41518744d\",\"name\":\"Active tracking\",\"vertices\":[{\"latitude\":-51.418995489473126,\"longitude\":-73.78661958579605,\"altitude\":0},{\"latitude\":-51.41903410433211,\"longitude\":-73.7853992590022,\"altitude\":0},{\"latitude\":-51.415266524785544,\"longitude\":-73.78450583944365,\"altitude\":0},{\"latitude\":-51.415230407636784,\"longitude\":-73.78579435577974,\"altitude\":0},{\"latitude\":-51.41657064827228,\"longitude\":-73.78608810170992,\"altitude\":0},{\"latitude\":-51.418995489473126,\"longitude\":-73.78661958579605,\"altitude\":0},{\"latitude\":-51.41988591558507,\"longitude\":-73.78680594065914,\"altitude\":0},{\"latitude\":-51.419463268696546,\"longitude\":-73.78931611249135,\"altitude\":0},{\"latitude\":-51.41851039617397,\"longitude\":-73.79009368109175,\"altitude\":0},{\"latitude\":-51.41704692008231,\"longitude\":-73.79069566464241,\"altitude\":0},{\"latitude\":-51.41517843297779,\"longitude\":-73.79170489797822,\"altitude\":0},{\"latitude\":-51.41385858799571,\"longitude\":-73.79130498314483,\"altitude\":0},{\"latitude\":-51.412174951064124,\"longitude\":-73.7867726152366,\"altitude\":0},{\"latitude\":-51.41227888100192,\"longitude\":-73.78215693194149,\"altitude\":0},{\"latitude\":-51.4146380285408,\"longitude\":-73.77864101321772,\"altitude\":0},{\"latitude\":-51.41940791514247,\"longitude\":-73.77900760262862,\"altitude\":0},{\"latitude\":-51.42008982226027,\"longitude\":-73.78299428743378,\"altitude\":0},{\"latitude\":-51.41988591558507,\"longitude\":-73.78680594065914,\"altitude\":0},{\"latitude\":-51.418995489473126,\"longitude\":-73.78661958579605,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 4780,
        "wires": [
            [
                "2035f56bc66d25c0"
            ]
        ]
    },
    {
        "id": "2035f56bc66d25c0",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 4780,
        "wires": [
            [
                "ca45fc64078bd0a1"
            ]
        ]
    },
    {
        "id": "ca45fc64078bd0a1",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "144",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Staines2;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Staines2\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4780,
        "wires": [
            [
                "5a01bc2042ba7507"
            ]
        ]
    },
    {
        "id": "61ce5be866765c9e",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 4780,
        "wires": []
    },
    {
        "id": "58f6486a51e82a10",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 4860,
        "wires": [
            [
                "feb6209995f25beb"
            ]
        ]
    },
    {
        "id": "e307db9b6b00fa8a",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Teguel1\":{\"codigo_centro\":\"145\",\"Modulo100\":{\"id\":\"fde3ed65-a309-4eb5-5c5c-a321b5293cdb\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-42.37566728840979,\"longitude\":-73.61686110411483,\"altitude\":0},{\"latitude\":-42.37627236982483,\"longitude\":-73.61846913099019,\"altitude\":0},{\"latitude\":-42.37675425976355,\"longitude\":-73.61815659867852,\"altitude\":0},{\"latitude\":-42.376166304837966,\"longitude\":-73.61652666977959,\"altitude\":0},{\"latitude\":-42.37566728840979,\"longitude\":-73.61686110411483,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"aff0a432-9ea2-4e8d-756d-ad4a71516cc6\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-42.37671049713487,\"longitude\":-73.61900796498226,\"altitude\":0},{\"latitude\":-42.37619916727901,\"longitude\":-73.61863211500363,\"altitude\":0},{\"latitude\":-42.37550288005057,\"longitude\":-73.61671782305513,\"altitude\":0},{\"latitude\":-42.3761573798827,\"longitude\":-73.61628584512034,\"altitude\":0},{\"latitude\":-42.376860775184895,\"longitude\":-73.61822288015607,\"altitude\":0},{\"latitude\":-42.37619916727901,\"longitude\":-73.61863211500363,\"altitude\":0},{\"latitude\":-42.37671049713487,\"longitude\":-73.61900796498226,\"altitude\":0},{\"latitude\":-42.377042640062776,\"longitude\":-73.61865715538276,\"altitude\":0},{\"latitude\":-42.37716961015527,\"longitude\":-73.61852304898947,\"altitude\":0},{\"latitude\":-42.37731891401806,\"longitude\":-73.61809572922739,\"altitude\":0},{\"latitude\":-42.37674729151907,\"longitude\":-73.61555490818216,\"altitude\":0},{\"latitude\":-42.376000761860034,\"longitude\":-73.61493125245987,\"altitude\":0},{\"latitude\":-42.37482335971313,\"longitude\":-73.61575124414236,\"altitude\":0},{\"latitude\":-42.37473711116621,\"longitude\":-73.616858525939,\"altitude\":0},{\"latitude\":-42.37594103898938,\"longitude\":-73.61889839776444,\"altitude\":0},{\"latitude\":-42.37671049713487,\"longitude\":-73.61900796498226,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"c0765270-24da-4c2f-6dde-d8bc208bcb0f\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-42.37670463304323,\"longitude\":-73.61900234012636,\"altitude\":0},{\"latitude\":-42.37594103898938,\"longitude\":-73.61889839776444,\"altitude\":0},{\"latitude\":-42.37473711116621,\"longitude\":-73.616858525939,\"altitude\":0},{\"latitude\":-42.37482335971313,\"longitude\":-73.61575124414236,\"altitude\":0},{\"latitude\":-42.376000761860034,\"longitude\":-73.61493125245987,\"altitude\":0},{\"latitude\":-42.37674729151907,\"longitude\":-73.61555490818216,\"altitude\":0},{\"latitude\":-42.37731891401806,\"longitude\":-73.61809572922739,\"altitude\":0},{\"latitude\":-42.37716961015527,\"longitude\":-73.61852304898947,\"altitude\":0},{\"latitude\":-42.377527938944155,\"longitude\":-73.61798023732645,\"altitude\":0},{\"latitude\":-42.37759619188316,\"longitude\":-73.61434224380385,\"altitude\":0},{\"latitude\":-42.37594146559379,\"longitude\":-73.61337499956966,\"altitude\":0},{\"latitude\":-42.3740857657475,\"longitude\":-73.61474357768468,\"altitude\":0},{\"latitude\":-42.37336693391258,\"longitude\":-73.6172809342559,\"altitude\":0},{\"latitude\":-42.3757431002454,\"longitude\":-73.61920387357297,\"altitude\":0},{\"latitude\":-42.37670463304323,\"longitude\":-73.61900234012636,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"6d6b1423-545f-4a87-51e1-22843bcaf66c\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-42.37666062580857,\"longitude\":-73.61904621319293,\"altitude\":0},{\"latitude\":-42.37549561611853,\"longitude\":-73.61944763892534,\"altitude\":0},{\"latitude\":-42.37315141004741,\"longitude\":-73.6173449330135,\"altitude\":0},{\"latitude\":-42.37376144178875,\"longitude\":-73.6143316427915,\"altitude\":0},{\"latitude\":-42.375829723655485,\"longitude\":-73.61274067072745,\"altitude\":0},{\"latitude\":-42.378146323509156,\"longitude\":-73.61405738035873,\"altitude\":0},{\"latitude\":-42.377726767079636,\"longitude\":-73.61808088008266,\"altitude\":0},{\"latitude\":-42.37666062580857,\"longitude\":-73.61904621319293,\"altitude\":0},{\"latitude\":-42.37630453219409,\"longitude\":-73.61855460414347,\"altitude\":0},{\"latitude\":-42.376777586169,\"longitude\":-73.61822177484053,\"altitude\":0},{\"latitude\":-42.376170433268264,\"longitude\":-73.616525340645,\"altitude\":0},{\"latitude\":-42.37566728840979,\"longitude\":-73.61686110411483,\"altitude\":0},{\"latitude\":-42.37630453219409,\"longitude\":-73.61855460414347,\"altitude\":0},{\"latitude\":-42.37666062580857,\"longitude\":-73.61904621319293,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 4860,
        "wires": [
            [
                "15ca426722299c08"
            ]
        ]
    },
    {
        "id": "15ca426722299c08",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 4860,
        "wires": [
            [
                "58d77f41b09a5925"
            ]
        ]
    },
    {
        "id": "58d77f41b09a5925",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "145",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Teguel1;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Teguel1\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4860,
        "wires": [
            [
                "58f6486a51e82a10"
            ]
        ]
    },
    {
        "id": "feb6209995f25beb",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 4860,
        "wires": []
    },
    {
        "id": "04821a333a3ef030",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT TEGUEL 1",
        "info": "",
        "x": 150,
        "y": 4820,
        "wires": []
    },
    {
        "id": "26a29f8538e27e6b",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT TEGUEL 3",
        "info": "",
        "x": 150,
        "y": 4900,
        "wires": []
    },
    {
        "id": "d989801d64c940b4",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Teguel3\":{\"codigo_centro\":\"146\",\"Modulo100\":{\"id\":\"4356d915-27db-41ce-4fcf-6bb591720acf\",\"name\":\"Modulo100\",\"vertices\":[{\"latitude\":-42.37307803912385,\"longitude\":-73.6083150124162,\"altitude\":0},{\"latitude\":-42.37245501239462,\"longitude\":-73.60657400311915,\"altitude\":0},{\"latitude\":-42.37195299665727,\"longitude\":-73.60691387671977,\"altitude\":0},{\"latitude\":-42.372580195324694,\"longitude\":-73.60864490353285,\"altitude\":0},{\"latitude\":-42.37307803912385,\"longitude\":-73.6083150124162,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"55bd80cd-fe6d-41c9-4186-d021866021ee\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-42.372856090656484,\"longitude\":-73.60860818627769,\"altitude\":0},{\"latitude\":-42.37249460567513,\"longitude\":-73.60882785913871,\"altitude\":0},{\"latitude\":-42.37172857961929,\"longitude\":-73.60682022565015,\"altitude\":0},{\"latitude\":-42.37252457682478,\"longitude\":-73.60629236678506,\"altitude\":0},{\"latitude\":-42.37328184210144,\"longitude\":-73.60833395452715,\"altitude\":0},{\"latitude\":-42.37286986240882,\"longitude\":-73.60860469935689,\"altitude\":0},{\"latitude\":-42.372972110171325,\"longitude\":-73.60891690846985,\"altitude\":0},{\"latitude\":-42.373471259271504,\"longitude\":-73.60869133467531,\"altitude\":0},{\"latitude\":-42.37365365900859,\"longitude\":-73.60815596541215,\"altitude\":0},{\"latitude\":-42.37296249963732,\"longitude\":-73.60587286922964,\"altitude\":0},{\"latitude\":-42.37227172936038,\"longitude\":-73.60525274263637,\"altitude\":0},{\"latitude\":-42.371252006948005,\"longitude\":-73.60598230348843,\"altitude\":0},{\"latitude\":-42.37122505724702,\"longitude\":-73.60709166539893,\"altitude\":0},{\"latitude\":-42.37211914854523,\"longitude\":-73.60906577090645,\"altitude\":0},{\"latitude\":-42.37253131405126,\"longitude\":-73.60923743228341,\"altitude\":0},{\"latitude\":-42.37295754583554,\"longitude\":-73.60892146825789,\"altitude\":0},{\"latitude\":-42.372856090656484,\"longitude\":-73.60860818627769,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"babe5eab-a7df-4312-4ed4-289bd12b8d6a\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-42.37295754583554,\"longitude\":-73.60892146825789,\"altitude\":0},{\"latitude\":-42.37253131405126,\"longitude\":-73.60923743228341,\"altitude\":0},{\"latitude\":-42.37211914854523,\"longitude\":-73.60906577090645,\"altitude\":0},{\"latitude\":-42.37122505724702,\"longitude\":-73.60709166539893,\"altitude\":0},{\"latitude\":-42.371252006948005,\"longitude\":-73.60598230348843,\"altitude\":0},{\"latitude\":-42.37227172936038,\"longitude\":-73.60525274263637,\"altitude\":0},{\"latitude\":-42.37296249963732,\"longitude\":-73.60587286922964,\"altitude\":0},{\"latitude\":-42.37365365900859,\"longitude\":-73.60815596541215,\"altitude\":0},{\"latitude\":-42.373471259271504,\"longitude\":-73.60869133467531,\"altitude\":0},{\"latitude\":-42.372972110171325,\"longitude\":-73.60891690846985,\"altitude\":0},{\"latitude\":-42.373510592859354,\"longitude\":-73.60887372480646,\"altitude\":0},{\"latitude\":-42.37372935280374,\"longitude\":-73.60862052420997,\"altitude\":0},{\"latitude\":-42.37432341021845,\"longitude\":-73.60722684781649,\"altitude\":0},{\"latitude\":-42.374008746833354,\"longitude\":-73.60431289620465,\"altitude\":0},{\"latitude\":-42.37204939728879,\"longitude\":-73.60320568084717,\"altitude\":0},{\"latitude\":-42.37021522612091,\"longitude\":-73.60439658164977,\"altitude\":0},{\"latitude\":-42.36967780509261,\"longitude\":-73.60726547201921,\"altitude\":0},{\"latitude\":-42.371183839864194,\"longitude\":-73.60947561224746,\"altitude\":0},{\"latitude\":-42.37235971090507,\"longitude\":-73.6094273328126,\"altitude\":0},{\"latitude\":-42.372559452198836,\"longitude\":-73.60943162428157,\"altitude\":0},{\"latitude\":-42.37295754583554,\"longitude\":-73.60892146825789,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"fbb128f0-6ac9-4d26-6a97-3798eebc4c11\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-42.37281802107363,\"longitude\":-73.60848731105182,\"altitude\":0},{\"latitude\":-42.372580195324694,\"longitude\":-73.60864490353285,\"altitude\":0},{\"latitude\":-42.37193163249156,\"longitude\":-73.6069180171328,\"altitude\":0},{\"latitude\":-42.37245501239462,\"longitude\":-73.60657400311915,\"altitude\":0},{\"latitude\":-42.37307803912385,\"longitude\":-73.6083150124162,\"altitude\":0},{\"latitude\":-42.37282040707866,\"longitude\":-73.60848572999015,\"altitude\":0},{\"latitude\":-42.37296524908513,\"longitude\":-73.6089190542657,\"altitude\":0},{\"latitude\":-42.373510592859354,\"longitude\":-73.60887372480646,\"altitude\":0},{\"latitude\":-42.37372935280374,\"longitude\":-73.60862052420997,\"altitude\":0},{\"latitude\":-42.37432341021845,\"longitude\":-73.60722684781649,\"altitude\":0},{\"latitude\":-42.374008746833354,\"longitude\":-73.60431289620465,\"altitude\":0},{\"latitude\":-42.37204939728879,\"longitude\":-73.60320568084717,\"altitude\":0},{\"latitude\":-42.37021522612091,\"longitude\":-73.60439658164977,\"altitude\":0},{\"latitude\":-42.36967780509261,\"longitude\":-73.60726547201921,\"altitude\":0},{\"latitude\":-42.371183839864194,\"longitude\":-73.60947561224746,\"altitude\":0},{\"latitude\":-42.372552295831056,\"longitude\":-73.60944269387203,\"altitude\":0},{\"latitude\":-42.37296188044991,\"longitude\":-73.60891717672756,\"altitude\":0},{\"latitude\":-42.37281802107363,\"longitude\":-73.60848731105182,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 4940,
        "wires": [
            [
                "5f514ac0f0047184"
            ]
        ]
    },
    {
        "id": "5f514ac0f0047184",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 4940,
        "wires": [
            [
                "bae6a25cef62f6d4"
            ]
        ]
    },
    {
        "id": "bae6a25cef62f6d4",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "146",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Teguel3;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Teguel3\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4940,
        "wires": [
            [
                "c796a32a04191635"
            ]
        ]
    },
    {
        "id": "c796a32a04191635",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 4940,
        "wires": [
            [
                "de30a3eed56ecf4f"
            ]
        ]
    },
    {
        "id": "de30a3eed56ecf4f",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 4940,
        "wires": []
    },
    {
        "id": "f680486e1eb6b6b9",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT TERESA1",
        "info": "",
        "x": 150,
        "y": 4980,
        "wires": []
    },
    {
        "id": "a3cef4f2750a0388",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Teresa1\":{\"codigo_centro\":\"147\",\"Modulo100\":{\"id\":\"16396220-b35c-4558-5451-e6c7ec9000c2\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-44.92590000716418,\"longitude\":-73.7408599876799,\"altitude\":0},{\"latitude\":-44.926230001179015,\"longitude\":-73.74143001472115,\"altitude\":0},{\"latitude\":-44.92791000032504,\"longitude\":-73.73936000000678,\"altitude\":0},{\"latitude\":-44.92756999834369,\"longitude\":-73.73874997766663,\"altitude\":0},{\"latitude\":-44.92590000716418,\"longitude\":-73.7408599876799,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"8c407982-1ffe-4cb1-7467-3f32e403cf23\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-44.92604864664768,\"longitude\":-73.74162483221879,\"altitude\":0},{\"latitude\":-44.926277672238726,\"longitude\":-73.74194669697316,\"altitude\":0},{\"latitude\":-44.92686257572858,\"longitude\":-73.74229002005448,\"altitude\":0},{\"latitude\":-44.92899594269525,\"longitude\":-73.74027064775036,\"altitude\":0},{\"latitude\":-44.92914756265173,\"longitude\":-73.73890289956192,\"altitude\":0},{\"latitude\":-44.92802757254457,\"longitude\":-73.73718993139902,\"altitude\":0},{\"latitude\":-44.92696112882695,\"longitude\":-73.73686340403744,\"altitude\":0},{\"latitude\":-44.92537979566212,\"longitude\":-73.73989534338762,\"altitude\":0},{\"latitude\":-44.92552830328785,\"longitude\":-73.7408523560225,\"altitude\":0},{\"latitude\":-44.926012184765675,\"longitude\":-73.74156045920243,\"altitude\":0},{\"latitude\":-44.92598503634708,\"longitude\":-73.74142412423242,\"altitude\":0},{\"latitude\":-44.92572086882861,\"longitude\":-73.7409296034457,\"altitude\":0},{\"latitude\":-44.925788095692134,\"longitude\":-73.74044466025225,\"altitude\":0},{\"latitude\":-44.927414430346545,\"longitude\":-73.73842120170593,\"altitude\":0},{\"latitude\":-44.92771523714245,\"longitude\":-73.7384046123342,\"altitude\":0},{\"latitude\":-44.92823251774371,\"longitude\":-73.7392473220825,\"altitude\":0},{\"latitude\":-44.92815959696079,\"longitude\":-73.73971080760384,\"altitude\":0},{\"latitude\":-44.92646745420228,\"longitude\":-73.74162418198564,\"altitude\":0},{\"latitude\":-44.92621680933141,\"longitude\":-73.74169261048598,\"altitude\":0},{\"latitude\":-44.92604864664768,\"longitude\":-73.74162483221879,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"15e6e855-b7a7-43b3-4508-01ae9ca12fbd\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-44.92604864664768,\"longitude\":-73.74162483221879,\"altitude\":0},{\"latitude\":-44.926277672238726,\"longitude\":-73.74194669697316,\"altitude\":0},{\"latitude\":-44.92657353792625,\"longitude\":-73.74212036197211,\"altitude\":0},{\"latitude\":-44.92686257572858,\"longitude\":-73.74229002005448,\"altitude\":0},{\"latitude\":-44.92899594269525,\"longitude\":-73.74027064775036,\"altitude\":0},{\"latitude\":-44.92914756265173,\"longitude\":-73.73890289956192,\"altitude\":0},{\"latitude\":-44.92802757254457,\"longitude\":-73.73718993139902,\"altitude\":0},{\"latitude\":-44.92696112882695,\"longitude\":-73.73686340403744,\"altitude\":0},{\"latitude\":-44.92537979566212,\"longitude\":-73.73989534338762,\"altitude\":0},{\"latitude\":-44.92552830328785,\"longitude\":-73.7408523560225,\"altitude\":0},{\"latitude\":-44.926012184765675,\"longitude\":-73.74156045920243,\"altitude\":0},{\"latitude\":-44.92533142798541,\"longitude\":-73.74087597479878,\"altitude\":0},{\"latitude\":-44.92509336637841,\"longitude\":-73.73902061497631,\"altitude\":0},{\"latitude\":-44.92632383183604,\"longitude\":-73.73457722495014,\"altitude\":0},{\"latitude\":-44.92876184576535,\"longitude\":-73.73476615217957,\"altitude\":0},{\"latitude\":-44.93050228506578,\"longitude\":-73.73725348074018,\"altitude\":0},{\"latitude\":-44.930755086382334,\"longitude\":-73.74046047452875,\"altitude\":0},{\"latitude\":-44.92739767178904,\"longitude\":-73.74265306259423,\"altitude\":0},{\"latitude\":-44.92634185985146,\"longitude\":-73.74225139617919,\"altitude\":0},{\"latitude\":-44.92604864664768,\"longitude\":-73.74162483221879,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"7f6bf50c-b6df-43bc-5ddb-37229fcccd3e\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-44.92601187822468,\"longitude\":-73.7410532318167,\"altitude\":0},{\"latitude\":-44.926230001179015,\"longitude\":-73.74143001472115,\"altitude\":0},{\"latitude\":-44.92791082941897,\"longitude\":-73.7393567563413,\"altitude\":0},{\"latitude\":-44.92756999834369,\"longitude\":-73.73874997766663,\"altitude\":0},{\"latitude\":-44.92590000716418,\"longitude\":-73.7408599876799,\"altitude\":0},{\"latitude\":-44.92599936022089,\"longitude\":-73.74103160841454,\"altitude\":0},{\"latitude\":-44.92604864664768,\"longitude\":-73.74162483221879,\"altitude\":0},{\"latitude\":-44.925184278899245,\"longitude\":-73.74098219628496,\"altitude\":0},{\"latitude\":-44.92481743452744,\"longitude\":-73.73904155569357,\"altitude\":0},{\"latitude\":-44.92620806268499,\"longitude\":-73.7342119019295,\"altitude\":0},{\"latitude\":-44.928738712761884,\"longitude\":-73.73431548047206,\"altitude\":0},{\"latitude\":-44.930812774337234,\"longitude\":-73.73701271476997,\"altitude\":0},{\"latitude\":-44.93109877011745,\"longitude\":-73.74055862760612,\"altitude\":0},{\"latitude\":-44.92740409828818,\"longitude\":-73.7429346882605,\"altitude\":0},{\"latitude\":-44.926300168290354,\"longitude\":-73.7425054427534,\"altitude\":0},{\"latitude\":-44.92606955757835,\"longitude\":-73.7416695164428,\"altitude\":0},{\"latitude\":-44.92601187822468,\"longitude\":-73.7410532318167,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 5020,
        "wires": [
            [
                "24cca07bee89f5aa"
            ]
        ]
    },
    {
        "id": "24cca07bee89f5aa",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 5020,
        "wires": [
            [
                "4c755fdc0f7d594a"
            ]
        ]
    },
    {
        "id": "4c755fdc0f7d594a",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "147",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Teresa1;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Teresa1\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 5020,
        "wires": [
            [
                "697004ac83295b17"
            ]
        ]
    },
    {
        "id": "697004ac83295b17",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 5020,
        "wires": [
            [
                "0fd6c840f3bbde3f"
            ]
        ]
    },
    {
        "id": "0fd6c840f3bbde3f",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 5020,
        "wires": []
    },
    {
        "id": "dfde98cf80a14494",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT VALVERDE",
        "info": "",
        "x": 150,
        "y": 5060,
        "wires": []
    },
    {
        "id": "9cd1edbf2ecd9e01",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Valverde\":{\"codigo_centro\":\"148\",\"Modulo100\":{\"id\":\"04f17a82-92ad-46eb-496b-bd333e872b89\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-44.28132565912017,\"longitude\":-73.90812590718271,\"altitude\":0},{\"latitude\":-44.28107600572713,\"longitude\":-73.90764199895786,\"altitude\":0},{\"latitude\":-44.284088950964936,\"longitude\":-73.90447575598955,\"altitude\":0},{\"latitude\":-44.28432368976778,\"longitude\":-73.9048894867301,\"altitude\":0},{\"latitude\":-44.28132565912017,\"longitude\":-73.90812590718271,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"787b2829-a265-40cd-5f9c-93eedc988b6f\",\"name\":\"Zona 2 interior\",\"vertices\":[{\"latitude\":-44.28265872056264,\"longitude\":-73.90685643599704,\"altitude\":0},{\"latitude\":-44.28124827358239,\"longitude\":-73.90831676836446,\"altitude\":0},{\"latitude\":-44.28076436846599,\"longitude\":-73.90756574984027,\"altitude\":0},{\"latitude\":-44.28405177240675,\"longitude\":-73.90391794557985,\"altitude\":0},{\"latitude\":-44.2845402342323,\"longitude\":-73.90478075546845,\"altitude\":0},{\"latitude\":-44.28317217368357,\"longitude\":-73.90628864919796,\"altitude\":0},{\"latitude\":-44.28332714548849,\"longitude\":-73.90699292647885,\"altitude\":0},{\"latitude\":-44.28401234253033,\"longitude\":-73.90653383044626,\"altitude\":0},{\"latitude\":-44.28490547259261,\"longitude\":-73.90526766302884,\"altitude\":0},{\"latitude\":-44.285162669304285,\"longitude\":-73.90399932861328,\"altitude\":0},{\"latitude\":-44.28470951863538,\"longitude\":-73.90300154685974,\"altitude\":0},{\"latitude\":-44.283649593251354,\"longitude\":-73.90265822410583,\"altitude\":0},{\"latitude\":-44.28001651548732,\"longitude\":-73.9069390296936,\"altitude\":0},{\"latitude\":-44.27985665028369,\"longitude\":-73.9078247236343,\"altitude\":0},{\"latitude\":-44.28039996291721,\"longitude\":-73.90897164369572,\"altitude\":0},{\"latitude\":-44.28098092137545,\"longitude\":-73.90927115692601,\"altitude\":0},{\"latitude\":-44.28174633079244,\"longitude\":-73.90897637709956,\"altitude\":0},{\"latitude\":-44.283156443868435,\"longitude\":-73.9072678173592,\"altitude\":0},{\"latitude\":-44.28265872056264,\"longitude\":-73.90685643599704,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"c3993fe2-481b-4740-7afe-c5ae4ceeb2e8\",\"name\":\"Zona 1 exterior\",\"vertices\":[{\"latitude\":-44.283156443868435,\"longitude\":-73.9072678173592,\"altitude\":0},{\"latitude\":-44.28174633079244,\"longitude\":-73.90897637709956,\"altitude\":0},{\"latitude\":-44.28098092137545,\"longitude\":-73.90927115692601,\"altitude\":0},{\"latitude\":-44.28039996291721,\"longitude\":-73.90897164369572,\"altitude\":0},{\"latitude\":-44.27985774029603,\"longitude\":-73.90782702461384,\"altitude\":0},{\"latitude\":-44.28001651548732,\"longitude\":-73.9069390296936,\"altitude\":0},{\"latitude\":-44.283649593251354,\"longitude\":-73.90265822410583,\"altitude\":0},{\"latitude\":-44.28470951863538,\"longitude\":-73.90300154685974,\"altitude\":0},{\"latitude\":-44.285162669304285,\"longitude\":-73.90399932861328,\"altitude\":0},{\"latitude\":-44.28490547259261,\"longitude\":-73.90526766302884,\"altitude\":0},{\"latitude\":-44.28401234253033,\"longitude\":-73.90653383044626,\"altitude\":0},{\"latitude\":-44.28332714548849,\"longitude\":-73.90699292647885,\"altitude\":0},{\"latitude\":-44.28389834179813,\"longitude\":-73.9068988348475,\"altitude\":0},{\"latitude\":-44.285326304884265,\"longitude\":-73.90568746925267,\"altitude\":0},{\"latitude\":-44.2860459190357,\"longitude\":-73.9036452770233,\"altitude\":0},{\"latitude\":-44.285400764017595,\"longitude\":-73.90189647674559,\"altitude\":0},{\"latitude\":-44.28333468419874,\"longitude\":-73.90094161033629,\"altitude\":0},{\"latitude\":-44.28203642223159,\"longitude\":-73.90164717219007,\"altitude\":0},{\"latitude\":-44.28121476469577,\"longitude\":-73.90260457992554,\"altitude\":0},{\"latitude\":-44.28126085071573,\"longitude\":-73.9042568206787,\"altitude\":0},{\"latitude\":-44.28073085930334,\"longitude\":-73.90545845031737,\"altitude\":0},{\"latitude\":-44.280193181970624,\"longitude\":-73.90559792518614,\"altitude\":0},{\"latitude\":-44.27944810667612,\"longitude\":-73.90655279159544,\"altitude\":0},{\"latitude\":-44.2789494836366,\"longitude\":-73.90773273228803,\"altitude\":0},{\"latitude\":-44.27897381135157,\"longitude\":-73.90944439560378,\"altitude\":0},{\"latitude\":-44.2798766860494,\"longitude\":-73.91069713062541,\"altitude\":0},{\"latitude\":-44.280992015089566,\"longitude\":-73.91109108924864,\"altitude\":0},{\"latitude\":-44.28214415911207,\"longitude\":-73.91011476516722,\"altitude\":0},{\"latitude\":-44.282889200216914,\"longitude\":-73.90869855880736,\"altitude\":0},{\"latitude\":-44.283156443868435,\"longitude\":-73.9072678173592,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"ca4ff249-3200-462a-62ae-0644c7f4811d\",\"name\":\"Zone Active tracking\",\"vertices\":[{\"latitude\":-44.284340947626276,\"longitude\":-73.90486816020982,\"altitude\":0},{\"latitude\":-44.2841062088924,\"longitude\":-73.90445442946927,\"altitude\":0},{\"latitude\":-44.281093264539685,\"longitude\":-73.90762067243757,\"altitude\":0},{\"latitude\":-44.28126553234434,\"longitude\":-73.90829544184419,\"altitude\":0},{\"latitude\":-44.28265872056264,\"longitude\":-73.90685643599704,\"altitude\":0},{\"latitude\":-44.28317547233695,\"longitude\":-73.90722999644412,\"altitude\":0},{\"latitude\":-44.28297133617258,\"longitude\":-73.90838622954462,\"altitude\":0},{\"latitude\":-44.28147619011137,\"longitude\":-73.91035137240632,\"altitude\":0},{\"latitude\":-44.279893945214255,\"longitude\":-73.91067580410513,\"altitude\":0},{\"latitude\":-44.27899107078165,\"longitude\":-73.9094230690835,\"altitude\":0},{\"latitude\":-44.27848988252558,\"longitude\":-73.90793768693413,\"altitude\":0},{\"latitude\":-44.27853117348597,\"longitude\":-73.90710503633328,\"altitude\":0},{\"latitude\":-44.27899833435165,\"longitude\":-73.90671147013755,\"altitude\":0},{\"latitude\":-44.279345701490485,\"longitude\":-73.9065470776775,\"altitude\":0},{\"latitude\":-44.27998441622917,\"longitude\":-73.90549048631632,\"altitude\":0},{\"latitude\":-44.280576298907825,\"longitude\":-73.90500694305629,\"altitude\":0},{\"latitude\":-44.280923181038624,\"longitude\":-73.90441797551242,\"altitude\":0},{\"latitude\":-44.28121933348328,\"longitude\":-73.90354023787515,\"altitude\":0},{\"latitude\":-44.28098577101256,\"longitude\":-73.90215881874705,\"altitude\":0},{\"latitude\":-44.28146816785091,\"longitude\":-73.90148403494828,\"altitude\":0},{\"latitude\":-44.282260448055034,\"longitude\":-73.90049953569336,\"altitude\":0},{\"latitude\":-44.28344825160095,\"longitude\":-73.90042395776527,\"altitude\":0},{\"latitude\":-44.28493910663136,\"longitude\":-73.9012536096861,\"altitude\":0},{\"latitude\":-44.28553173554044,\"longitude\":-73.90326018301744,\"altitude\":0},{\"latitude\":-44.285705466150276,\"longitude\":-73.90468291043987,\"altitude\":0},{\"latitude\":-44.285326304884265,\"longitude\":-73.90568746925267,\"altitude\":0},{\"latitude\":-44.28445717500066,\"longitude\":-73.9065940252421,\"altitude\":0},{\"latitude\":-44.28389834179813,\"longitude\":-73.9068988348475,\"altitude\":0},{\"latitude\":-44.283344403639745,\"longitude\":-73.90697159995858,\"altitude\":0},{\"latitude\":-44.28318943188036,\"longitude\":-73.90626732267768,\"altitude\":0},{\"latitude\":-44.284340947626276,\"longitude\":-73.90486816020982,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 5100,
        "wires": [
            [
                "79b6eda1165a04e0"
            ]
        ]
    },
    {
        "id": "79b6eda1165a04e0",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 5100,
        "wires": [
            [
                "297317db8c942000"
            ]
        ]
    },
    {
        "id": "297317db8c942000",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "148",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Valverde;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Valverde\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 5100,
        "wires": [
            [
                "6f39a8c55f95e474"
            ]
        ]
    },
    {
        "id": "6f39a8c55f95e474",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 5100,
        "wires": [
            [
                "aee2bf988a202b1f"
            ]
        ]
    },
    {
        "id": "aee2bf988a202b1f",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 5100,
        "wires": []
    },
    {
        "id": "acc210633d2bb7e9",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT VICUÑA MACKENNA",
        "info": "",
        "x": 180,
        "y": 5140,
        "wires": []
    },
    {
        "id": "e39ce82f121636d7",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"VicuñaMackenna\":{\"codigo_centro\":\"149\",\"Modulo100\":{\"id\":\"34bf3368-bb32-41e3-54eb-703714285bf4\",\"name\":\"Mod_100\",\"vertices\":[{\"latitude\":-52.1075480091308,\"longitude\":-73.01454900720272,\"altitude\":0},{\"latitude\":-52.11025399255551,\"longitude\":-73.01517001586033,\"altitude\":0},{\"latitude\":-52.11032199989785,\"longitude\":-73.01456501515126,\"altitude\":0},{\"latitude\":-52.10762200363643,\"longitude\":-73.01393799658399,\"altitude\":0},{\"latitude\":-52.1075480091308,\"longitude\":-73.01454900720272,\"altitude\":0}]},\"Modulo200\":{\"id\":\"1d86783c-296f-4044-42e8-e09d5263f745\",\"name\":\"Mod_200\",\"vertices\":[{\"latitude\":-52.11097198651043,\"longitude\":-73.01327899564058,\"altitude\":0},{\"latitude\":-52.11109600574277,\"longitude\":-73.01387998712765,\"altitude\":0},{\"latitude\":-52.113687012004085,\"longitude\":-73.01244901434984,\"altitude\":0},{\"latitude\":-52.11358199572233,\"longitude\":-73.01186100812629,\"altitude\":0},{\"latitude\":-52.11097198651043,\"longitude\":-73.01327899564058,\"altitude\":0}]},\"INTERIOR100\":{\"id\":\"fbd8ce18-ec3d-4a75-48bf-cf82741330eb\",\"name\":\"Zona_Interior_Mod100\",\"vertices\":[{\"latitude\":-52.1109408220188,\"longitude\":-73.01501004000096,\"altitude\":0},{\"latitude\":-52.11040503892663,\"longitude\":-73.01427503851434,\"altitude\":0},{\"latitude\":-52.10747269956112,\"longitude\":-73.01343568075573,\"altitude\":0},{\"latitude\":-52.10730352320012,\"longitude\":-73.01488012876634,\"altitude\":0},{\"latitude\":-52.11031098039973,\"longitude\":-73.0155470493413,\"altitude\":0},{\"latitude\":-52.1109408220188,\"longitude\":-73.01501004000096,\"altitude\":0},{\"latitude\":-52.11029601497938,\"longitude\":-73.01633441748488,\"altitude\":0},{\"latitude\":-52.10964173192924,\"longitude\":-73.01723420619966,\"altitude\":0},{\"latitude\":-52.10846649312823,\"longitude\":-73.01736788375891,\"altitude\":0},{\"latitude\":-52.10679100749068,\"longitude\":-73.01664255830563,\"altitude\":0},{\"latitude\":-52.106264669562975,\"longitude\":-73.01535129547119,\"altitude\":0},{\"latitude\":-52.10628114365869,\"longitude\":-73.0137687921524,\"altitude\":0},{\"latitude\":-52.10670946801131,\"longitude\":-73.01234722137451,\"altitude\":0},{\"latitude\":-52.10777367510244,\"longitude\":-73.01146503581022,\"altitude\":0},{\"latitude\":-52.108464176565015,\"longitude\":-73.01146531369079,\"altitude\":0},{\"latitude\":-52.10929085881911,\"longitude\":-73.01169276237488,\"altitude\":0},{\"latitude\":-52.1102742588157,\"longitude\":-73.01237969862353,\"altitude\":0},{\"latitude\":-52.1109408220188,\"longitude\":-73.01501004000096,\"altitude\":0}]},\"INTERIOR200\":{\"id\":\"c95839ae-cf1b-4866-53aa-ee455fdd0c00\",\"name\":\"Zona_Interior_Mod200\",\"vertices\":[{\"latitude\":-52.1109408220188,\"longitude\":-73.01501004000096,\"altitude\":0},{\"latitude\":-52.11117179212215,\"longitude\":-73.01430042746973,\"altitude\":0},{\"latitude\":-52.11401975792577,\"longitude\":-73.01272527395598,\"altitude\":0},{\"latitude\":-52.1137204275216,\"longitude\":-73.0113385570543,\"altitude\":0},{\"latitude\":-52.110739246004904,\"longitude\":-73.01294279764106,\"altitude\":0},{\"latitude\":-52.110976911610365,\"longitude\":-73.01411999855247,\"altitude\":0},{\"latitude\":-52.1109408220188,\"longitude\":-73.01501004000096,\"altitude\":0},{\"latitude\":-52.1102742588157,\"longitude\":-73.01237969862353,\"altitude\":0},{\"latitude\":-52.110665753331666,\"longitude\":-73.01123713901322,\"altitude\":0},{\"latitude\":-52.11143806016189,\"longitude\":-73.01035199314354,\"altitude\":0},{\"latitude\":-52.112986418900476,\"longitude\":-73.00962779670952,\"altitude\":0},{\"latitude\":-52.114057061048705,\"longitude\":-73.00984237343073,\"altitude\":0},{\"latitude\":-52.114715904975576,\"longitude\":-73.01153216511008,\"altitude\":0},{\"latitude\":-52.11460060799126,\"longitude\":-73.01362428814171,\"altitude\":0},{\"latitude\":-52.11359586450642,\"longitude\":-73.01483128219841,\"altitude\":0},{\"latitude\":-52.11190257342964,\"longitude\":-73.01558766514063,\"altitude\":0},{\"latitude\":-52.1109408220188,\"longitude\":-73.01501004000096,\"altitude\":0}]},\"EXTERIOR100\":{\"id\":\"2945d446-4c8b-4521-4295-1642ba11430f\",\"name\":\"Zona_Exterior_Mod100\",\"vertices\":[{\"latitude\":-52.11089365104122,\"longitude\":-73.01495432853699,\"altitude\":0},{\"latitude\":-52.1102742588157,\"longitude\":-73.01237969862353,\"altitude\":0},{\"latitude\":-52.10929085881911,\"longitude\":-73.01169276237488,\"altitude\":0},{\"latitude\":-52.108464176565015,\"longitude\":-73.01146531369079,\"altitude\":0},{\"latitude\":-52.10777367510244,\"longitude\":-73.01146503581022,\"altitude\":0},{\"latitude\":-52.10670946801131,\"longitude\":-73.01234722137451,\"altitude\":0},{\"latitude\":-52.10628114365869,\"longitude\":-73.0137687921524,\"altitude\":0},{\"latitude\":-52.106264669562975,\"longitude\":-73.01535129547119,\"altitude\":0},{\"latitude\":-52.10679100749068,\"longitude\":-73.01664255830563,\"altitude\":0},{\"latitude\":-52.107595691354206,\"longitude\":-73.01699090625681,\"altitude\":0},{\"latitude\":-52.10846382312229,\"longitude\":-73.01736818745478,\"altitude\":0},{\"latitude\":-52.10964173192924,\"longitude\":-73.01723420619966,\"altitude\":0},{\"latitude\":-52.11029601497938,\"longitude\":-73.01633441748488,\"altitude\":0},{\"latitude\":-52.1109408220188,\"longitude\":-73.01501004000096,\"altitude\":0},{\"latitude\":-52.11064510365841,\"longitude\":-73.01713756453402,\"altitude\":0},{\"latitude\":-52.10980374357906,\"longitude\":-73.01823493444053,\"altitude\":0},{\"latitude\":-52.108407779197556,\"longitude\":-73.01872417346341,\"altitude\":0},{\"latitude\":-52.106579460520656,\"longitude\":-73.0184025540884,\"altitude\":0},{\"latitude\":-52.10512402238749,\"longitude\":-73.0163272904137,\"altitude\":0},{\"latitude\":-52.10509016411717,\"longitude\":-73.013166285234,\"altitude\":0},{\"latitude\":-52.10592148954157,\"longitude\":-73.01097727412046,\"altitude\":0},{\"latitude\":-52.10736416578039,\"longitude\":-73.00999169576846,\"altitude\":0},{\"latitude\":-52.109184741715794,\"longitude\":-73.01040720095433,\"altitude\":0},{\"latitude\":-52.11012337392368,\"longitude\":-73.01175252026245,\"altitude\":0},{\"latitude\":-52.11089365104122,\"longitude\":-73.01495432853699,\"altitude\":0}]},\"EXTERIOR200\":{\"id\":\"08fa4eb8-99b3-4e67-7294-f1f97fd68513\",\"name\":\"Zona_Exterior_Mod200\",\"vertices\":[{\"latitude\":-52.1109408220188,\"longitude\":-73.01501004000096,\"altitude\":0},{\"latitude\":-52.11190257342964,\"longitude\":-73.01558766514063,\"altitude\":0},{\"latitude\":-52.11269615699456,\"longitude\":-73.01523636940011,\"altitude\":0},{\"latitude\":-52.11359586450642,\"longitude\":-73.01483128219841,\"altitude\":0},{\"latitude\":-52.11459649023631,\"longitude\":-73.01362931728362,\"altitude\":0},{\"latitude\":-52.11471178723128,\"longitude\":-73.011537194252,\"altitude\":0},{\"latitude\":-52.114057061048705,\"longitude\":-73.00984237343073,\"altitude\":0},{\"latitude\":-52.112982300996414,\"longitude\":-73.00963282585143,\"altitude\":0},{\"latitude\":-52.11143394211483,\"longitude\":-73.01035702228545,\"altitude\":0},{\"latitude\":-52.11066248780418,\"longitude\":-73.01124088030774,\"altitude\":0},{\"latitude\":-52.1102742588157,\"longitude\":-73.01237969862353,\"altitude\":0},{\"latitude\":-52.11031497518178,\"longitude\":-73.01126316752872,\"altitude\":0},{\"latitude\":-52.110472168193525,\"longitude\":-73.01038171394565,\"altitude\":0},{\"latitude\":-52.111174868579425,\"longitude\":-73.0087572183014,\"altitude\":0},{\"latitude\":-52.11243833855052,\"longitude\":-73.00737906558577,\"altitude\":0},{\"latitude\":-52.11399192144322,\"longitude\":-73.00789893603921,\"altitude\":0},{\"latitude\":-52.11564040738653,\"longitude\":-73.00997807584773,\"altitude\":0},{\"latitude\":-52.11596124436401,\"longitude\":-73.01371762610653,\"altitude\":0},{\"latitude\":-52.115368964494756,\"longitude\":-73.01521324741671,\"altitude\":0},{\"latitude\":-52.113349935484315,\"longitude\":-73.01651153233898,\"altitude\":0},{\"latitude\":-52.112152976422514,\"longitude\":-73.01633560725298,\"altitude\":0},{\"latitude\":-52.1109408220188,\"longitude\":-73.01501004000096,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"b61d82e3-3989-4ee0-6897-332093096c74\",\"name\":\"Zona_ActiveTracking\",\"vertices\":[{\"latitude\":-52.11085989112559,\"longitude\":-73.01481399765147,\"altitude\":0},{\"latitude\":-52.110874987255215,\"longitude\":-73.01311835845836,\"altitude\":0},{\"latitude\":-52.11361233589365,\"longitude\":-73.01162067800759,\"altitude\":0},{\"latitude\":-52.113797638580735,\"longitude\":-73.0125929787755,\"altitude\":0},{\"latitude\":-52.11106743440264,\"longitude\":-73.01405344158411,\"altitude\":0},{\"latitude\":-52.110874987255215,\"longitude\":-73.01311835845836,\"altitude\":0},{\"latitude\":-52.11085989112559,\"longitude\":-73.01481399765147,\"altitude\":0},{\"latitude\":-52.113627983705896,\"longitude\":-73.01758289337158,\"altitude\":0},{\"latitude\":-52.1155715639909,\"longitude\":-73.01591992378235,\"altitude\":0},{\"latitude\":-52.11688919734283,\"longitude\":-73.01318407058716,\"altitude\":0},{\"latitude\":-52.116559792656126,\"longitude\":-73.0095362663269,\"altitude\":0},{\"latitude\":-52.11511038311649,\"longitude\":-73.00647854804994,\"altitude\":0},{\"latitude\":-52.112639690047004,\"longitude\":-73.00647854804994,\"altitude\":0},{\"latitude\":-52.11066303700393,\"longitude\":-73.00680041313173,\"altitude\":0},{\"latitude\":-52.1092463817488,\"longitude\":-73.00824880599976,\"altitude\":0},{\"latitude\":-52.10763199879742,\"longitude\":-73.00824880599976,\"altitude\":0},{\"latitude\":-52.10562217508269,\"longitude\":-73.0095899105072,\"altitude\":0},{\"latitude\":-52.10410651040337,\"longitude\":-73.01232576370239,\"altitude\":0},{\"latitude\":-52.104403057546136,\"longitude\":-73.01640272140503,\"altitude\":0},{\"latitude\":-52.105753969576895,\"longitude\":-73.01929950714111,\"altitude\":0},{\"latitude\":-52.10822504422447,\"longitude\":-73.02010416984558,\"altitude\":0},{\"latitude\":-52.11010296937592,\"longitude\":-73.0197823047638,\"altitude\":0},{\"latitude\":-52.11085989112559,\"longitude\":-73.01481399765147,\"altitude\":0},{\"latitude\":-52.11040977199939,\"longitude\":-73.01438435912132,\"altitude\":0},{\"latitude\":-52.11032946816098,\"longitude\":-73.0153700709343,\"altitude\":0},{\"latitude\":-52.10745737836302,\"longitude\":-73.01470488309859,\"altitude\":0},{\"latitude\":-52.107572693820906,\"longitude\":-73.01368564367293,\"altitude\":0},{\"latitude\":-52.11040977199939,\"longitude\":-73.01438435912132,\"altitude\":0},{\"latitude\":-52.11085989112559,\"longitude\":-73.01481399765147,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 5180,
        "wires": [
            [
                "6305deb72586f1c6"
            ]
        ]
    },
    {
        "id": "6305deb72586f1c6",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 5180,
        "wires": [
            [
                "57119b6a88ac72c5"
            ]
        ]
    },
    {
        "id": "57119b6a88ac72c5",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "149",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.VicuñaMackenna;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"VicuñaMackenna\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int_100\"] = convertirCoordenadas(json.INTERIOR100.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext_100\"] = convertirCoordenadas(json.EXTERIOR100.vertices);\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_200\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int_200\"] = convertirCoordenadas(json.INTERIOR200.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext_200\"] = convertirCoordenadas(json.EXTERIOR200.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_active_tracking\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 5180,
        "wires": [
            [
                "b02fd418f435e6f8"
            ]
        ]
    },
    {
        "id": "b02fd418f435e6f8",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 5180,
        "wires": [
            [
                "773a7f32880978f1"
            ]
        ]
    },
    {
        "id": "773a7f32880978f1",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 5180,
        "wires": []
    },
    {
        "id": "361275c84a69c6c9",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT BECERRA",
        "info": "",
        "x": 150,
        "y": 2180,
        "wires": []
    },
    {
        "id": "f55f32bf5c10ea35",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Becerra\":{\"codigo_centro\":\"152\",\"Modulo100\":{\"id\":\"986cfa4a-432d-4d6d-4a78-f1420e07336e\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-42.9593710008921,\"longitude\":-72.80966400233604,\"altitude\":0},{\"latitude\":-42.958695001542715,\"longitude\":-72.81018399410121,\"altitude\":0},{\"latitude\":-42.95774001551225,\"longitude\":-72.8078319926238,\"altitude\":0},{\"latitude\":-42.95843400770966,\"longitude\":-72.8072889943179,\"altitude\":0},{\"latitude\":-42.9593710008921,\"longitude\":-72.80966400233604,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"63f937b2-2719-4ab7-7944-8a9e8d6aebfb\",\"name\":\"Zona interior\",\"vertices\":[{\"latitude\":-42.95754300026871,\"longitude\":-72.8062130134305,\"altitude\":0},{\"latitude\":-42.95814947349102,\"longitude\":-72.80738544869035,\"altitude\":0},{\"latitude\":-42.958453117314846,\"longitude\":-72.80714813244532,\"altitude\":0},{\"latitude\":-42.959451598379104,\"longitude\":-72.80973080267073,\"altitude\":0},{\"latitude\":-42.95867501358256,\"longitude\":-72.81030783813391,\"altitude\":0},{\"latitude\":-42.95762575159431,\"longitude\":-72.80779987778575,\"altitude\":0},{\"latitude\":-42.95797791322304,\"longitude\":-72.80752076917122,\"altitude\":0},{\"latitude\":-42.95754300026871,\"longitude\":-72.8062130134305,\"altitude\":0},{\"latitude\":-42.95688259397176,\"longitude\":-72.80721794786571,\"altitude\":0},{\"latitude\":-42.95684713035821,\"longitude\":-72.80885537191442,\"altitude\":0},{\"latitude\":-42.95774794453886,\"longitude\":-72.8112143429035,\"altitude\":0},{\"latitude\":-42.95902642361551,\"longitude\":-72.81154629462114,\"altitude\":0},{\"latitude\":-42.960102950532956,\"longitude\":-72.81078137643121,\"altitude\":0},{\"latitude\":-42.960499924295064,\"longitude\":-72.80902344558471,\"altitude\":0},{\"latitude\":-42.95967655793755,\"longitude\":-72.80707756808543,\"altitude\":0},{\"latitude\":-42.95883117197337,\"longitude\":-72.80616663634748,\"altitude\":0},{\"latitude\":-42.95754300026871,\"longitude\":-72.8062130134305,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"60af5210-e712-482f-76c7-67fba2e5bb2e\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-42.95750541809474,\"longitude\":-72.80622840760891,\"altitude\":0},{\"latitude\":-42.95765098779998,\"longitude\":-72.80619651978253,\"altitude\":0},{\"latitude\":-42.95883117197337,\"longitude\":-72.80616663634748,\"altitude\":0},{\"latitude\":-42.95967655793755,\"longitude\":-72.80707756808543,\"altitude\":0},{\"latitude\":-42.960499924295064,\"longitude\":-72.80902344558471,\"altitude\":0},{\"latitude\":-42.960105045505074,\"longitude\":-72.81077209923302,\"altitude\":0},{\"latitude\":-42.95902642361551,\"longitude\":-72.81154629462114,\"altitude\":0},{\"latitude\":-42.95774794453886,\"longitude\":-72.8112143429035,\"altitude\":0},{\"latitude\":-42.95685040677608,\"longitude\":-72.80883518059147,\"altitude\":0},{\"latitude\":-42.95688073894183,\"longitude\":-72.8072230926338,\"altitude\":0},{\"latitude\":-42.957522229230605,\"longitude\":-72.80624614854081,\"altitude\":0},{\"latitude\":-42.95750541809474,\"longitude\":-72.80622840760891,\"altitude\":0},{\"latitude\":-42.95750541809474,\"longitude\":-72.80622840760891,\"altitude\":0},{\"latitude\":-42.95669970712687,\"longitude\":-72.80708410864368,\"altitude\":0},{\"latitude\":-42.95645208266582,\"longitude\":-72.80878878349431,\"altitude\":0},{\"latitude\":-42.95660543658094,\"longitude\":-72.81084377930931,\"altitude\":0},{\"latitude\":-42.957489481873274,\"longitude\":-72.81292488179439,\"altitude\":0},{\"latitude\":-42.959484464539116,\"longitude\":-72.81334429463625,\"altitude\":0},{\"latitude\":-42.96094544352997,\"longitude\":-72.8122564291754,\"altitude\":0},{\"latitude\":-42.96161517352287,\"longitude\":-72.80998031232362,\"altitude\":0},{\"latitude\":-42.9611054904642,\"longitude\":-72.80797353249565,\"altitude\":0},{\"latitude\":-42.96027490251005,\"longitude\":-72.80656872284383,\"altitude\":0},{\"latitude\":-42.95882741760297,\"longitude\":-72.80595200918553,\"altitude\":0},{\"latitude\":-42.95750541809474,\"longitude\":-72.80622840760891,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"61cd7904-6aee-46b6-6ae0-e8aede41759c\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-42.95750541809474,\"longitude\":-72.80622840760891,\"altitude\":0},{\"latitude\":-42.95805963661889,\"longitude\":-72.80733185579808,\"altitude\":0},{\"latitude\":-42.95848502586217,\"longitude\":-72.80704036208712,\"altitude\":0},{\"latitude\":-42.95955981476236,\"longitude\":-72.80976045743554,\"altitude\":0},{\"latitude\":-42.95865271285815,\"longitude\":-72.81043180734275,\"altitude\":0},{\"latitude\":-42.95752566858622,\"longitude\":-72.80775914626415,\"altitude\":0},{\"latitude\":-42.9579996485278,\"longitude\":-72.80738054710636,\"altitude\":0},{\"latitude\":-42.95750541809474,\"longitude\":-72.80622840760891,\"altitude\":0},{\"latitude\":-42.95616866522484,\"longitude\":-72.8073857436824,\"altitude\":0},{\"latitude\":-42.95579129979553,\"longitude\":-72.80941458658567,\"altitude\":0},{\"latitude\":-42.95654784467306,\"longitude\":-72.8126012174691,\"altitude\":0},{\"latitude\":-42.957941915229654,\"longitude\":-72.81440004736147,\"altitude\":0},{\"latitude\":-42.959767396325034,\"longitude\":-72.8141352929357,\"altitude\":0},{\"latitude\":-42.96110423957064,\"longitude\":-72.81331296778062,\"altitude\":0},{\"latitude\":-42.962318752400016,\"longitude\":-72.81160371841989,\"altitude\":0},{\"latitude\":-42.96238034803881,\"longitude\":-72.80947223269862,\"altitude\":0},{\"latitude\":-42.961655743446194,\"longitude\":-72.80743166544896,\"altitude\":0},{\"latitude\":-42.960184843703615,\"longitude\":-72.80579539118781,\"altitude\":0},{\"latitude\":-42.9590904086854,\"longitude\":-72.80562406284896,\"altitude\":0},{\"latitude\":-42.95750541809474,\"longitude\":-72.80622840760891,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 2220,
        "wires": [
            [
                "2f38816c7bc7858e"
            ]
        ]
    },
    {
        "id": "2f38816c7bc7858e",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 2220,
        "wires": [
            [
                "7d06c6816c8d7ab2"
            ]
        ]
    },
    {
        "id": "7d06c6816c8d7ab2",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "152",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Becerra;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Becerra\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2220,
        "wires": [
            [
                "7e577022e5a00a18"
            ]
        ]
    },
    {
        "id": "7e577022e5a00a18",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 2220,
        "wires": [
            [
                "d61720338f4be7b9"
            ]
        ]
    },
    {
        "id": "d61720338f4be7b9",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2220,
        "wires": []
    },
    {
        "id": "0e75025c995df3ba",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT ERRAZURIZ",
        "info": "",
        "x": 160,
        "y": 2260,
        "wires": []
    },
    {
        "id": "64eb14b3504f8e4c",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Errazuriz\":{\"codigo_centro\":\"153\",\"Modulo100\":{\"id\":\"e693e896-6208-44d3-5462-f55503addf1b\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-42.98455499943645,\"longitude\":-72.79528400336858,\"altitude\":0},{\"latitude\":-42.98408999814693,\"longitude\":-72.79442399914844,\"altitude\":0},{\"latitude\":-42.98592700042818,\"longitude\":-72.7925460023107,\"altitude\":0},{\"latitude\":-42.9864210012761,\"longitude\":-72.79339700122364,\"altitude\":0},{\"latitude\":-42.98455499943645,\"longitude\":-72.79528400336858,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"75c1a579-b5d6-4b2d-4f9d-65f4cfdcf679\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-42.98664581196516,\"longitude\":-72.79120445251465,\"altitude\":0},{\"latitude\":-42.98595688929147,\"longitude\":-72.79225623631889,\"altitude\":0},{\"latitude\":-42.98659479812936,\"longitude\":-72.7934628725052,\"altitude\":0},{\"latitude\":-42.984503194411545,\"longitude\":-72.79568374156952,\"altitude\":0},{\"latitude\":-42.98383213949119,\"longitude\":-72.79437482357025,\"altitude\":0},{\"latitude\":-42.98600028761396,\"longitude\":-72.79221296310426,\"altitude\":0},{\"latitude\":-42.98659479812936,\"longitude\":-72.7934628725052,\"altitude\":0},{\"latitude\":-42.98664581196516,\"longitude\":-72.79120445251465,\"altitude\":0},{\"latitude\":-42.98561767879588,\"longitude\":-72.79094696044922,\"altitude\":0},{\"latitude\":-42.984429148088516,\"longitude\":-72.79151190093768,\"altitude\":0},{\"latitude\":-42.98386673136869,\"longitude\":-72.79189808880201,\"altitude\":0},{\"latitude\":-42.9831074715408,\"longitude\":-72.79310057584867,\"altitude\":0},{\"latitude\":-42.98312968234152,\"longitude\":-72.7949810028076,\"altitude\":0},{\"latitude\":-42.98385176108405,\"longitude\":-72.79630064964294,\"altitude\":0},{\"latitude\":-42.98498744115524,\"longitude\":-72.79673806073237,\"altitude\":0},{\"latitude\":-42.98625579749345,\"longitude\":-72.79598345480342,\"altitude\":0},{\"latitude\":-42.98702636046771,\"longitude\":-72.7948866734765,\"altitude\":0},{\"latitude\":-42.987164963594395,\"longitude\":-72.79292598054344,\"altitude\":0},{\"latitude\":-42.98664581196516,\"longitude\":-72.79120445251465,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"632e0521-de8c-4cc4-68d5-047e08d077bc\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-42.986643910450255,\"longitude\":-72.79120587124127,\"altitude\":0},{\"latitude\":-42.98716306209557,\"longitude\":-72.79292739927007,\"altitude\":0},{\"latitude\":-42.987024458964584,\"longitude\":-72.79488809220314,\"altitude\":0},{\"latitude\":-42.98625637878662,\"longitude\":-72.79598071934223,\"altitude\":0},{\"latitude\":-42.98498802246042,\"longitude\":-72.79673532527117,\"altitude\":0},{\"latitude\":-42.98384985948272,\"longitude\":-72.79630206836957,\"altitude\":0},{\"latitude\":-42.983130263664265,\"longitude\":-72.79497826734641,\"altitude\":0},{\"latitude\":-42.98310805286375,\"longitude\":-72.79309784038749,\"altitude\":0},{\"latitude\":-42.98388684194698,\"longitude\":-72.79188194347817,\"altitude\":0},{\"latitude\":-42.984429148088516,\"longitude\":-72.79151190093768,\"altitude\":0},{\"latitude\":-42.98561577724921,\"longitude\":-72.79094837917586,\"altitude\":0},{\"latitude\":-42.986643910450255,\"longitude\":-72.79120587124127,\"altitude\":0},{\"latitude\":-42.98562441295053,\"longitude\":-72.7905708684966,\"altitude\":0},{\"latitude\":-42.98520009751661,\"longitude\":-72.79048917927398,\"altitude\":0},{\"latitude\":-42.98372580460372,\"longitude\":-72.7907683736944,\"altitude\":0},{\"latitude\":-42.98215110394548,\"longitude\":-72.79271489284139,\"altitude\":0},{\"latitude\":-42.9820308617757,\"longitude\":-72.79467614986753,\"altitude\":0},{\"latitude\":-42.983307304332044,\"longitude\":-72.79736827677071,\"altitude\":0},{\"latitude\":-42.984744648977866,\"longitude\":-72.79821907314921,\"altitude\":0},{\"latitude\":-42.98640457629733,\"longitude\":-72.79767280528105,\"altitude\":0},{\"latitude\":-42.98766739163383,\"longitude\":-72.79523529664112,\"altitude\":0},{\"latitude\":-42.98735857419878,\"longitude\":-72.79278449939659,\"altitude\":0},{\"latitude\":-42.986643910450255,\"longitude\":-72.79120587124127,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"bfc0aa7d-d27a-47cb-7a3f-9f4ed332e482\",\"name\":\"Active Traking\",\"vertices\":[{\"latitude\":-42.98548866906195,\"longitude\":-72.78960098944286,\"altitude\":0},{\"latitude\":-42.986593082956496,\"longitude\":-72.79069542654604,\"altitude\":0},{\"latitude\":-42.98775209062166,\"longitude\":-72.79247098673845,\"altitude\":0},{\"latitude\":-42.98592700042818,\"longitude\":-72.7925460023107,\"altitude\":0},{\"latitude\":-42.98408999814693,\"longitude\":-72.79442399914844,\"altitude\":0},{\"latitude\":-42.98455499943645,\"longitude\":-72.79528400336858,\"altitude\":0},{\"latitude\":-42.9864210012761,\"longitude\":-72.79339700122364,\"altitude\":0},{\"latitude\":-42.98592700042818,\"longitude\":-72.7925460023107,\"altitude\":0},{\"latitude\":-42.98775209062166,\"longitude\":-72.79247098673845,\"altitude\":0},{\"latitude\":-42.98821582625764,\"longitude\":-72.79572817228268,\"altitude\":0},{\"latitude\":-42.98708018734627,\"longitude\":-72.79932726059434,\"altitude\":0},{\"latitude\":-42.98400194508278,\"longitude\":-72.8000764597535,\"altitude\":0},{\"latitude\":-42.981954685904746,\"longitude\":-72.79846811326175,\"altitude\":0},{\"latitude\":-42.98097833769566,\"longitude\":-72.79553691079664,\"altitude\":0},{\"latitude\":-42.98095447143119,\"longitude\":-72.79193150162584,\"altitude\":0},{\"latitude\":-42.98341598365148,\"longitude\":-72.789718983891,\"altitude\":0},{\"latitude\":-42.98548866906195,\"longitude\":-72.78960098944286,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 2300,
        "wires": [
            [
                "d959c4c9383dbde3"
            ]
        ]
    },
    {
        "id": "d959c4c9383dbde3",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 2300,
        "wires": [
            [
                "e26ec794f8fbc75d"
            ]
        ]
    },
    {
        "id": "e26ec794f8fbc75d",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "153",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Errazuriz;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Errazuriz\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2300,
        "wires": [
            [
                "c95ab37bb98c02cb"
            ]
        ]
    },
    {
        "id": "c95ab37bb98c02cb",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 2300,
        "wires": [
            [
                "3b4d02f4f1cb3a3e"
            ]
        ]
    },
    {
        "id": "3b4d02f4f1cb3a3e",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2300,
        "wires": []
    },
    {
        "id": "92cc1b0afd11e4ad",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT PICHAGUA",
        "info": "",
        "x": 150,
        "y": 2340,
        "wires": []
    },
    {
        "id": "4bd68a78c8769096",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Pichagua\":{\"codigo_centro\":\"154\",\"Modulo100\":{\"id\":\"e0d40027-fe8d-45f9-6166-a8b62a7677fe\",\"name\":\"Modulo_100\",\"vertices\":[{\"latitude\":-43.17072500341227,\"longitude\":-73.60692998176091,\"altitude\":0},{\"latitude\":-43.17078500130709,\"longitude\":-73.6079540028004,\"altitude\":0},{\"latitude\":-43.17306900953525,\"longitude\":-73.60762199692543,\"altitude\":0},{\"latitude\":-43.17297300538563,\"longitude\":-73.60659300175027,\"altitude\":0},{\"latitude\":-43.17072500341227,\"longitude\":-73.60692998176091,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"0b0e935c-040b-41f2-6a14-226a1a3e2bf3\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-43.17313926397165,\"longitude\":-73.60728318036612,\"altitude\":0},{\"latitude\":-43.17316323310865,\"longitude\":-73.60759098799731,\"altitude\":0},{\"latitude\":-43.173084625014184,\"longitude\":-73.6077377081738,\"altitude\":0},{\"latitude\":-43.170762340935575,\"longitude\":-73.60809932050817,\"altitude\":0},{\"latitude\":-43.17064116941189,\"longitude\":-73.6078976531282,\"altitude\":0},{\"latitude\":-43.17058672392857,\"longitude\":-73.60697106207986,\"altitude\":0},{\"latitude\":-43.17070543545552,\"longitude\":-73.60675887392252,\"altitude\":0},{\"latitude\":-43.17296679477662,\"longitude\":-73.60644052711895,\"altitude\":0},{\"latitude\":-43.1730620746431,\"longitude\":-73.60649886593214,\"altitude\":0},{\"latitude\":-43.17309185956124,\"longitude\":-73.60681560808666,\"altitude\":0},{\"latitude\":-43.17354830385639,\"longitude\":-73.60702461000982,\"altitude\":0},{\"latitude\":-43.17347658734324,\"longitude\":-73.60624897842949,\"altitude\":0},{\"latitude\":-43.173106420825455,\"longitude\":-73.60550594290544,\"altitude\":0},{\"latitude\":-43.17180911618453,\"longitude\":-73.60504031181335,\"altitude\":0},{\"latitude\":-43.17031459976416,\"longitude\":-73.60530853271484,\"altitude\":0},{\"latitude\":-43.16941107750868,\"longitude\":-73.60663287239714,\"altitude\":0},{\"latitude\":-43.16944416924264,\"longitude\":-73.60828386267438,\"altitude\":0},{\"latitude\":-43.170397463496634,\"longitude\":-73.60957978961639,\"altitude\":0},{\"latitude\":-43.17205363240093,\"longitude\":-73.60956442282104,\"altitude\":0},{\"latitude\":-43.17328239239415,\"longitude\":-73.60872027797573,\"altitude\":0},{\"latitude\":-43.173586447611655,\"longitude\":-73.60791027545929,\"altitude\":0},{\"latitude\":-43.17354830385639,\"longitude\":-73.60706752535405,\"altitude\":0},{\"latitude\":-43.17313926397165,\"longitude\":-73.60728318036612,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"76a136fe-8493-4f70-5332-655a14c0ad9e\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-43.17354830385639,\"longitude\":-73.60706752535405,\"altitude\":0},{\"latitude\":-43.173586447611655,\"longitude\":-73.60791027545929,\"altitude\":0},{\"latitude\":-43.17328239239415,\"longitude\":-73.60872027797573,\"altitude\":0},{\"latitude\":-43.17205363240093,\"longitude\":-73.60956442282104,\"altitude\":0},{\"latitude\":-43.170397463496634,\"longitude\":-73.60957978961639,\"altitude\":0},{\"latitude\":-43.16944416924264,\"longitude\":-73.60828386267438,\"altitude\":0},{\"latitude\":-43.16941107750868,\"longitude\":-73.60663287239714,\"altitude\":0},{\"latitude\":-43.17031459976416,\"longitude\":-73.60530853271484,\"altitude\":0},{\"latitude\":-43.17180911618453,\"longitude\":-73.60504031181335,\"altitude\":0},{\"latitude\":-43.173106420825455,\"longitude\":-73.60550594290544,\"altitude\":0},{\"latitude\":-43.17347658734324,\"longitude\":-73.60624897842949,\"altitude\":0},{\"latitude\":-43.17354830385639,\"longitude\":-73.60702461000982,\"altitude\":0},{\"latitude\":-43.173550647754595,\"longitude\":-73.60612892464704,\"altitude\":0},{\"latitude\":-43.17308999042479,\"longitude\":-73.60488367106882,\"altitude\":0},{\"latitude\":-43.17188814485536,\"longitude\":-73.60424852318828,\"altitude\":0},{\"latitude\":-43.17034165692767,\"longitude\":-73.60396511345961,\"altitude\":0},{\"latitude\":-43.16873114880392,\"longitude\":-73.60491118016988,\"altitude\":0},{\"latitude\":-43.16817881665261,\"longitude\":-73.60616465129745,\"altitude\":0},{\"latitude\":-43.16829230184607,\"longitude\":-73.60876436735771,\"altitude\":0},{\"latitude\":-43.169075979016085,\"longitude\":-73.61018465293257,\"altitude\":0},{\"latitude\":-43.169404708232726,\"longitude\":-73.61028497484699,\"altitude\":0},{\"latitude\":-43.16970661077334,\"longitude\":-73.61013221714529,\"altitude\":0},{\"latitude\":-43.170895978726925,\"longitude\":-73.61033821027378,\"altitude\":0},{\"latitude\":-43.171275390391834,\"longitude\":-73.61084575231968,\"altitude\":0},{\"latitude\":-43.1724507298146,\"longitude\":-73.60991120338439,\"altitude\":0},{\"latitude\":-43.17248359161322,\"longitude\":-73.60988189279743,\"altitude\":0},{\"latitude\":-43.17324737885125,\"longitude\":-73.6091692726055,\"altitude\":0},{\"latitude\":-43.173679953164076,\"longitude\":-73.60805070874603,\"altitude\":0},{\"latitude\":-43.17354830385639,\"longitude\":-73.60706752535405,\"altitude\":0}]},\"ACTIVETRACKING\":{\"name\":\"Active Tracking\",\"type\":\"alert\",\"vertices\":[{\"latitude\":-43.173022110360215,\"longitude\":-73.6071193202763,\"altitude\":0},{\"latitude\":-43.17305752378731,\"longitude\":-73.60761826056698,\"altitude\":0},{\"latitude\":-43.17078500130709,\"longitude\":-73.6079540028004,\"altitude\":0},{\"latitude\":-43.17072500341227,\"longitude\":-73.60692998176091,\"altitude\":0},{\"latitude\":-43.17297300538563,\"longitude\":-73.60659300175027,\"altitude\":0},{\"latitude\":-43.173022110360215,\"longitude\":-73.6071193202763,\"altitude\":0},{\"latitude\":-43.17354830385639,\"longitude\":-73.60702461000982,\"altitude\":0},{\"latitude\":-43.173746696308115,\"longitude\":-73.6057742805824,\"altitude\":0},{\"latitude\":-43.1731132878941,\"longitude\":-73.60446824355448,\"altitude\":0},{\"latitude\":-43.1701412677384,\"longitude\":-73.6032945272391,\"altitude\":0},{\"latitude\":-43.16883277820938,\"longitude\":-73.60386889781076,\"altitude\":0},{\"latitude\":-43.16815726747182,\"longitude\":-73.60498666763304,\"altitude\":0},{\"latitude\":-43.16744923273132,\"longitude\":-73.60798880489577,\"altitude\":0},{\"latitude\":-43.168451856535924,\"longitude\":-73.61108690876975,\"altitude\":0},{\"latitude\":-43.16975194306979,\"longitude\":-73.61035166126668,\"altitude\":0},{\"latitude\":-43.170368162582555,\"longitude\":-73.61049386477903,\"altitude\":0},{\"latitude\":-43.17090871353808,\"longitude\":-73.61061860761953,\"altitude\":0},{\"latitude\":-43.17139725316747,\"longitude\":-73.6112295656985,\"altitude\":0},{\"latitude\":-43.173116778663484,\"longitude\":-73.6096452799582,\"altitude\":0},{\"latitude\":-43.173818293395954,\"longitude\":-73.60871194042029,\"altitude\":0},{\"latitude\":-43.17354830385639,\"longitude\":-73.60702461000982,\"altitude\":0},{\"latitude\":-43.173022110360215,\"longitude\":-73.6071193202763,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 2380,
        "wires": [
            [
                "dbe191fe86951e85"
            ]
        ]
    },
    {
        "id": "dbe191fe86951e85",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 2380,
        "wires": [
            [
                "a938fc14ec391ddb"
            ]
        ]
    },
    {
        "id": "a938fc14ec391ddb",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "154",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Pichagua;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Pichagua\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2380,
        "wires": [
            [
                "c011f7c58b18254d"
            ]
        ]
    },
    {
        "id": "c011f7c58b18254d",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 2380,
        "wires": [
            [
                "904ad2227b8dd73d"
            ]
        ]
    },
    {
        "id": "904ad2227b8dd73d",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2380,
        "wires": []
    },
    {
        "id": "dcae6db35e5d7280",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT PUELO",
        "info": "",
        "x": 140,
        "y": 2420,
        "wires": []
    },
    {
        "id": "1c309b0867315c24",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Puelo\":{\"codigo_centro\":\"155\",\"Modulo100\":{\"id\":\"b809330e-4f45-4a6d-778f-5f273862e3d7\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-41.65862470287029,\"longitude\":-72.34681522560221,\"altitude\":0},{\"latitude\":-41.65738995615542,\"longitude\":-72.34547899697353,\"altitude\":0},{\"latitude\":-41.65688998016536,\"longitude\":-72.34630802979174,\"altitude\":0},{\"latitude\":-41.65812130072103,\"longitude\":-72.34761682342487,\"altitude\":0},{\"latitude\":-41.65862470287029,\"longitude\":-72.34681522560221,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"c1cfa334-881e-4e1c-4b8e-51290e70b24b\",\"name\":\"Zona 2 interior\",\"vertices\":[{\"latitude\":-41.65722142076567,\"longitude\":-72.3451813983234,\"altitude\":0},{\"latitude\":-41.657221175297316,\"longitude\":-72.34517419034903,\"altitude\":0},{\"latitude\":-41.65752833796903,\"longitude\":-72.34514851246868,\"altitude\":0},{\"latitude\":-41.657117272199876,\"longitude\":-72.34480401660565,\"altitude\":0},{\"latitude\":-41.65642886899417,\"longitude\":-72.34500605815516,\"altitude\":0},{\"latitude\":-41.65518115528395,\"longitude\":-72.3452460488706,\"altitude\":0},{\"latitude\":-41.65472835738541,\"longitude\":-72.34632930957873,\"altitude\":0},{\"latitude\":-41.65562786745712,\"longitude\":-72.34863084828696,\"altitude\":0},{\"latitude\":-41.65683234812666,\"longitude\":-72.34874343035057,\"altitude\":0},{\"latitude\":-41.65803456734329,\"longitude\":-72.34931188700585,\"altitude\":0},{\"latitude\":-41.65919077336566,\"longitude\":-72.3493286426949,\"altitude\":0},{\"latitude\":-41.660197625029944,\"longitude\":-72.34752930006354,\"altitude\":0},{\"latitude\":-41.65908584140144,\"longitude\":-72.34556873373678,\"altitude\":0},{\"latitude\":-41.657808991639854,\"longitude\":-72.3452049138622,\"altitude\":0},{\"latitude\":-41.65752833796903,\"longitude\":-72.34514851246868,\"altitude\":0},{\"latitude\":-41.65722142076567,\"longitude\":-72.3451813983234,\"altitude\":0},{\"latitude\":-41.65875822187588,\"longitude\":-72.3468337913233,\"altitude\":0},{\"latitude\":-41.658152975801045,\"longitude\":-72.34781468583583,\"altitude\":0},{\"latitude\":-41.656599536844965,\"longitude\":-72.3462466888675,\"altitude\":0},{\"latitude\":-41.657221175297316,\"longitude\":-72.34517419034903,\"altitude\":0},{\"latitude\":-41.65722142076567,\"longitude\":-72.3451813983234,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"538b31b0-b0d3-41b8-6046-c665a5c74b56\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-41.65712311550025,\"longitude\":-72.34480568530631,\"altitude\":0},{\"latitude\":-41.65583475471492,\"longitude\":-72.34447783604644,\"altitude\":0},{\"latitude\":-41.654074849149545,\"longitude\":-72.34457969167309,\"altitude\":0},{\"latitude\":-41.65375105080615,\"longitude\":-72.34686637338751,\"altitude\":0},{\"latitude\":-41.65479238157085,\"longitude\":-72.34922463836169,\"altitude\":0},{\"latitude\":-41.65643949668056,\"longitude\":-72.34974003282089,\"altitude\":0},{\"latitude\":-41.657875046931174,\"longitude\":-72.35033559583574,\"altitude\":0},{\"latitude\":-41.65946885795374,\"longitude\":-72.3506730160214,\"altitude\":0},{\"latitude\":-41.66118135700489,\"longitude\":-72.34827404701882,\"altitude\":0},{\"latitude\":-41.66047898846998,\"longitude\":-72.34642856004847,\"altitude\":0},{\"latitude\":-41.65921666108846,\"longitude\":-72.34517696001825,\"altitude\":0},{\"latitude\":-41.65781483487746,\"longitude\":-72.34520658256287,\"altitude\":0},{\"latitude\":-41.65909168452321,\"longitude\":-72.34557040243743,\"altitude\":0},{\"latitude\":-41.66020346805083,\"longitude\":-72.3475309687642,\"altitude\":0},{\"latitude\":-41.65919661647791,\"longitude\":-72.34933031139555,\"altitude\":0},{\"latitude\":-41.65804041056044,\"longitude\":-72.3493135557065,\"altitude\":0},{\"latitude\":-41.65683819145289,\"longitude\":-72.34874509905123,\"altitude\":0},{\"latitude\":-41.65563371089262,\"longitude\":-72.34863251698762,\"altitude\":0},{\"latitude\":-41.654734200902524,\"longitude\":-72.34633097827938,\"altitude\":0},{\"latitude\":-41.65518699875999,\"longitude\":-72.34524771757127,\"altitude\":0},{\"latitude\":-41.656434712357,\"longitude\":-72.34500772685583,\"altitude\":0},{\"latitude\":-41.65712311550025,\"longitude\":-72.34480568530631,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"c6a5fb17-16fb-4b2d-495d-ee2b312db9a7\",\"name\":\"ActiveTracking\",\"vertices\":[{\"latitude\":-41.657535098231605,\"longitude\":-72.34515047768089,\"altitude\":0},{\"latitude\":-41.65739105810847,\"longitude\":-72.34547743218113,\"altitude\":0},{\"latitude\":-41.658623530606036,\"longitude\":-72.3468237421392,\"altitude\":0},{\"latitude\":-41.65812072994356,\"longitude\":-72.34761399699356,\"altitude\":0},{\"latitude\":-41.65688593795742,\"longitude\":-72.34630355152326,\"altitude\":0},{\"latitude\":-41.65739105810847,\"longitude\":-72.34547743218113,\"altitude\":0},{\"latitude\":-41.657535098231605,\"longitude\":-72.34515047768089,\"altitude\":0},{\"latitude\":-41.65709299741781,\"longitude\":-72.3447568861097,\"altitude\":0},{\"latitude\":-41.6563531094611,\"longitude\":-72.34445015754115,\"altitude\":0},{\"latitude\":-41.65542436650264,\"longitude\":-72.34449974932201,\"altitude\":0},{\"latitude\":-41.65415366269818,\"longitude\":-72.34483429154552,\"altitude\":0},{\"latitude\":-41.65372545147588,\"longitude\":-72.34665871613589,\"altitude\":0},{\"latitude\":-41.653943017377124,\"longitude\":-72.34842357497982,\"altitude\":0},{\"latitude\":-41.65508077623377,\"longitude\":-72.34949663528143,\"altitude\":0},{\"latitude\":-41.65670978689402,\"longitude\":-72.35009314245904,\"altitude\":0},{\"latitude\":-41.657997859464594,\"longitude\":-72.35090935368495,\"altitude\":0},{\"latitude\":-41.65975306969961,\"longitude\":-72.3511883475909,\"altitude\":0},{\"latitude\":-41.66130628878019,\"longitude\":-72.34873064199539,\"altitude\":0},{\"latitude\":-41.661212406272945,\"longitude\":-72.34708022020607,\"altitude\":0},{\"latitude\":-41.66029485317869,\"longitude\":-72.3460080930417,\"altitude\":0},{\"latitude\":-41.65913001068887,\"longitude\":-72.34507010772714,\"altitude\":0},{\"latitude\":-41.657535098231605,\"longitude\":-72.34515047768089,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 2460,
        "wires": [
            [
                "0d0a18611e0658fc"
            ]
        ]
    },
    {
        "id": "0d0a18611e0658fc",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 2460,
        "wires": [
            [
                "609420a3f21b8519"
            ]
        ]
    },
    {
        "id": "609420a3f21b8519",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "155",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Puelo;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Puelo\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2460,
        "wires": [
            [
                "e30b70c27fe879a7"
            ]
        ]
    },
    {
        "id": "e30b70c27fe879a7",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 2460,
        "wires": [
            [
                "5dd09d48c5040166"
            ]
        ]
    },
    {
        "id": "5dd09d48c5040166",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2460,
        "wires": []
    },
    {
        "id": "872cd2b5f62a073b",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT RALUN",
        "info": "",
        "x": 140,
        "y": 2500,
        "wires": []
    },
    {
        "id": "d14d06d0ca219ad6",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Ralun\":{\"codigo_centro\":\"156\",\"Modulo100\":{\"id\":\"ff74adf2-c691-4701-6887-91694c3e756b\",\"name\":\"Mod100\",\"vertices\":[{\"latitude\":-41.4131109606005,\"longitude\":-72.28737501054965,\"altitude\":0},{\"latitude\":-41.41298298687225,\"longitude\":-72.28663498537983,\"altitude\":0},{\"latitude\":-41.411063989087054,\"longitude\":-72.28720000800824,\"altitude\":0},{\"latitude\":-41.41120097173647,\"longitude\":-72.28790893772701,\"altitude\":0},{\"latitude\":-41.4131109606005,\"longitude\":-72.28737501054965,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"75daae33-1bc9-49db-6597-be7a2a44f3ab\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-41.41098810754734,\"longitude\":-72.28713588872027,\"altitude\":0},{\"latitude\":-41.413008049031625,\"longitude\":-72.2865304501483,\"altitude\":0},{\"latitude\":-41.41316459627643,\"longitude\":-72.28745608968336,\"altitude\":0},{\"latitude\":-41.4111640231365,\"longitude\":-72.28801094370651,\"altitude\":0},{\"latitude\":-41.41058055108382,\"longitude\":-72.28718299973606,\"altitude\":0},{\"latitude\":-41.41095075152807,\"longitude\":-72.28854294049266,\"altitude\":0},{\"latitude\":-41.41151626429115,\"longitude\":-72.28900598546367,\"altitude\":0},{\"latitude\":-41.41291954261855,\"longitude\":-72.28866246990847,\"altitude\":0},{\"latitude\":-41.413691162797896,\"longitude\":-72.28823072431196,\"altitude\":0},{\"latitude\":-41.41390533467037,\"longitude\":-72.28715478178977,\"altitude\":0},{\"latitude\":-41.41372330736698,\"longitude\":-72.28630646295348,\"altitude\":0},{\"latitude\":-41.41325018177357,\"longitude\":-72.28551491392876,\"altitude\":0},{\"latitude\":-41.411976646558685,\"longitude\":-72.2856116447428,\"altitude\":0},{\"latitude\":-41.410775173668576,\"longitude\":-72.2863136035481,\"altitude\":0},{\"latitude\":-41.41058055108382,\"longitude\":-72.28718299973606,\"altitude\":0},{\"latitude\":-41.4111640231365,\"longitude\":-72.28801094370651,\"altitude\":0},{\"latitude\":-41.41098810754734,\"longitude\":-72.28713588872027,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"1e9d846b-72f3-4187-5b40-c5f3b807b7a5\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-41.41325018177357,\"longitude\":-72.28551491392876,\"altitude\":0},{\"latitude\":-41.41372330736698,\"longitude\":-72.28630646295348,\"altitude\":0},{\"latitude\":-41.41390533467037,\"longitude\":-72.28715478178977,\"altitude\":0},{\"latitude\":-41.413691162797896,\"longitude\":-72.28823072431196,\"altitude\":0},{\"latitude\":-41.41291954261855,\"longitude\":-72.28866246990847,\"altitude\":0},{\"latitude\":-41.41151626429115,\"longitude\":-72.28900598546367,\"altitude\":0},{\"latitude\":-41.41095075152807,\"longitude\":-72.28854294049266,\"altitude\":0},{\"latitude\":-41.41058055108382,\"longitude\":-72.28718299973606,\"altitude\":0},{\"latitude\":-41.41031902772395,\"longitude\":-72.28825745850705,\"altitude\":0},{\"latitude\":-41.41061163139282,\"longitude\":-72.28997591073194,\"altitude\":0},{\"latitude\":-41.4118879012665,\"longitude\":-72.29064977534168,\"altitude\":0},{\"latitude\":-41.413693444604675,\"longitude\":-72.29042790408181,\"altitude\":0},{\"latitude\":-41.414451330106,\"longitude\":-72.2894935774279,\"altitude\":0},{\"latitude\":-41.41508826811097,\"longitude\":-72.28799289740788,\"altitude\":0},{\"latitude\":-41.41485109939095,\"longitude\":-72.28540718236178,\"altitude\":0},{\"latitude\":-41.41385905171536,\"longitude\":-72.28397208880554,\"altitude\":0},{\"latitude\":-41.41231760923349,\"longitude\":-72.28384027010513,\"altitude\":0},{\"latitude\":-41.410909291718504,\"longitude\":-72.28426508611459,\"altitude\":0},{\"latitude\":-41.41030393143704,\"longitude\":-72.28581791062,\"altitude\":0},{\"latitude\":-41.41058055108382,\"longitude\":-72.28718299973606,\"altitude\":0},{\"latitude\":-41.410775173668576,\"longitude\":-72.2863136035481,\"altitude\":0},{\"latitude\":-41.411976646558685,\"longitude\":-72.2856116447428,\"altitude\":0},{\"latitude\":-41.41325018177357,\"longitude\":-72.28551491392876,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"84674744-5a18-4aa6-54f7-de7b7a69a3b7\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-41.41130856376708,\"longitude\":-72.28780640051754,\"altitude\":0},{\"latitude\":-41.41123816514326,\"longitude\":-72.28710698345677,\"altitude\":0},{\"latitude\":-41.41058055108382,\"longitude\":-72.28718299973606,\"altitude\":0},{\"latitude\":-41.41031902772395,\"longitude\":-72.28825745850705,\"altitude\":0},{\"latitude\":-41.41061163139282,\"longitude\":-72.28997591073194,\"altitude\":0},{\"latitude\":-41.4118879012665,\"longitude\":-72.29064977534168,\"altitude\":0},{\"latitude\":-41.413693444604675,\"longitude\":-72.29042790408181,\"altitude\":0},{\"latitude\":-41.414451330106,\"longitude\":-72.2894935774279,\"altitude\":0},{\"latitude\":-41.41508826811097,\"longitude\":-72.28799289740788,\"altitude\":0},{\"latitude\":-41.41485109939095,\"longitude\":-72.28540718236178,\"altitude\":0},{\"latitude\":-41.41385905171536,\"longitude\":-72.28397208880554,\"altitude\":0},{\"latitude\":-41.412677250629606,\"longitude\":-72.2837755329906,\"altitude\":0},{\"latitude\":-41.41097218545315,\"longitude\":-72.28369871273354,\"altitude\":0},{\"latitude\":-41.41030393143704,\"longitude\":-72.28581791062,\"altitude\":0},{\"latitude\":-41.41058055108382,\"longitude\":-72.28718299973606,\"altitude\":0},{\"latitude\":-41.41123816514326,\"longitude\":-72.28710698345677,\"altitude\":0},{\"latitude\":-41.41297821673584,\"longitude\":-72.28661515111241,\"altitude\":0},{\"latitude\":-41.413081457036306,\"longitude\":-72.28736315895952,\"altitude\":0},{\"latitude\":-41.41130856376708,\"longitude\":-72.28780640051754,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 2540,
        "wires": [
            [
                "20e43b7b791d35f2"
            ]
        ]
    },
    {
        "id": "20e43b7b791d35f2",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 2540,
        "wires": [
            [
                "425a636212cc0b1f"
            ]
        ]
    },
    {
        "id": "425a636212cc0b1f",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "156",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Ralun;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Ralun\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2540,
        "wires": [
            [
                "ebf54f686a1678ec"
            ]
        ]
    },
    {
        "id": "ebf54f686a1678ec",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "c94a89c8f3025b77",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 2540,
        "wires": [
            [
                "16c576029ae80875"
            ]
        ]
    },
    {
        "id": "16c576029ae80875",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2540,
        "wires": []
    },
    {
        "id": "704c483e7990bf09",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT MARCHANT",
        "info": "",
        "x": 160,
        "y": 5220,
        "wires": []
    },
    {
        "id": "473528d6edb63095",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Marchant\":{\"codigo_centro\":\"150\",\"Modulo100\":{\"id\":\"40749aa3-9616-4ca8-701f-a900786a939b\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-44.07833165293018,\"longitude\":-73.09860204799203,\"altitude\":0},{\"latitude\":-44.07846599927179,\"longitude\":-73.1028459960362,\"altitude\":0},{\"latitude\":-44.07902100376581,\"longitude\":-73.1028169998899,\"altitude\":0},{\"latitude\":-44.07890078359655,\"longitude\":-73.09857881764835,\"altitude\":0},{\"latitude\":-44.07833165293018,\"longitude\":-73.09860204799203,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"0aeef2cf-e7a8-40a2-7676-bc0a4fff13e8\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-44.07780947226745,\"longitude\":-73.10004795769869,\"altitude\":0},{\"latitude\":-44.07822315700595,\"longitude\":-73.10005776487954,\"altitude\":0},{\"latitude\":-44.0781910894368,\"longitude\":-73.09837827934611,\"altitude\":0},{\"latitude\":-44.079042598961124,\"longitude\":-73.09834647165502,\"altitude\":0},{\"latitude\":-44.07913149858918,\"longitude\":-73.10300983182889,\"altitude\":0},{\"latitude\":-44.07833721913466,\"longitude\":-73.10305697824795,\"altitude\":0},{\"latitude\":-44.07822653599419,\"longitude\":-73.10049870663916,\"altitude\":0},{\"latitude\":-44.077805574437484,\"longitude\":-73.10015267639542,\"altitude\":0},{\"latitude\":-44.07780415841024,\"longitude\":-73.10366401003525,\"altitude\":0},{\"latitude\":-44.078427387865595,\"longitude\":-73.1047920519803,\"altitude\":0},{\"latitude\":-44.079726177545474,\"longitude\":-73.10462255862932,\"altitude\":0},{\"latitude\":-44.08044733952599,\"longitude\":-73.1032837734051,\"altitude\":0},{\"latitude\":-44.080278759189476,\"longitude\":-73.09802113635801,\"altitude\":0},{\"latitude\":-44.079495196990784,\"longitude\":-73.09695486138018,\"altitude\":0},{\"latitude\":-44.07821632614421,\"longitude\":-73.09700862633944,\"altitude\":0},{\"latitude\":-44.077679162227604,\"longitude\":-73.0980019470401,\"altitude\":0},{\"latitude\":-44.07780947226745,\"longitude\":-73.10004795769869,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"e2c098ff-7f12-4e88-4ade-2fcb3eee1300\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-44.07780947226745,\"longitude\":-73.10004795769869,\"altitude\":0},{\"latitude\":-44.077679162227604,\"longitude\":-73.0980019470401,\"altitude\":0},{\"latitude\":-44.07821632614421,\"longitude\":-73.09700862633944,\"altitude\":0},{\"latitude\":-44.079495196990784,\"longitude\":-73.09695486138018,\"altitude\":0},{\"latitude\":-44.080278759189476,\"longitude\":-73.09802113635801,\"altitude\":0},{\"latitude\":-44.08044733952599,\"longitude\":-73.1032837734051,\"altitude\":0},{\"latitude\":-44.079726177545474,\"longitude\":-73.10462255862932,\"altitude\":0},{\"latitude\":-44.078427387865595,\"longitude\":-73.1047920519803,\"altitude\":0},{\"latitude\":-44.07780415841024,\"longitude\":-73.10366401003525,\"altitude\":0},{\"latitude\":-44.077805574437484,\"longitude\":-73.10015267639542,\"altitude\":0},{\"latitude\":-44.07751868292674,\"longitude\":-73.1027055610468,\"altitude\":0},{\"latitude\":-44.07766265147786,\"longitude\":-73.10453328824399,\"altitude\":0},{\"latitude\":-44.0782520957323,\"longitude\":-73.10600921152994,\"altitude\":0},{\"latitude\":-44.07936321959191,\"longitude\":-73.10663985159428,\"altitude\":0},{\"latitude\":-44.080599815457255,\"longitude\":-73.10614804670311,\"altitude\":0},{\"latitude\":-44.08145452345088,\"longitude\":-73.10521086107866,\"altitude\":0},{\"latitude\":-44.08190424041208,\"longitude\":-73.1009697637725,\"altitude\":0},{\"latitude\":-44.081488598104286,\"longitude\":-73.09756855716005,\"altitude\":0},{\"latitude\":-44.08026708974769,\"longitude\":-73.09567623754566,\"altitude\":0},{\"latitude\":-44.07905401073718,\"longitude\":-73.09535089206268,\"altitude\":0},{\"latitude\":-44.077791313331765,\"longitude\":-73.09588808619165,\"altitude\":0},{\"latitude\":-44.07744450061873,\"longitude\":-73.09754661136886,\"altitude\":0},{\"latitude\":-44.07780947226745,\"longitude\":-73.10004795769869,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"69763286-f269-4eb3-7f65-0d4b1f1cfb36\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-44.07890224394962,\"longitude\":-73.09857389629362,\"altitude\":0},{\"latitude\":-44.07902100376581,\"longitude\":-73.1028169998899,\"altitude\":0},{\"latitude\":-44.07846599927179,\"longitude\":-73.1028459960362,\"altitude\":0},{\"latitude\":-44.07839212917102,\"longitude\":-73.10051246744013,\"altitude\":0},{\"latitude\":-44.077805574437484,\"longitude\":-73.10015267639542,\"altitude\":0},{\"latitude\":-44.077362397515785,\"longitude\":-73.1022393111218,\"altitude\":0},{\"latitude\":-44.07755987347507,\"longitude\":-73.10508509452336,\"altitude\":0},{\"latitude\":-44.078963726972766,\"longitude\":-73.10746207053303,\"altitude\":0},{\"latitude\":-44.08151660925658,\"longitude\":-73.10611332833663,\"altitude\":0},{\"latitude\":-44.08239172877413,\"longitude\":-73.10286599038375,\"altitude\":0},{\"latitude\":-44.08202862112762,\"longitude\":-73.0983967088633,\"altitude\":0},{\"latitude\":-44.081163624370035,\"longitude\":-73.09584528929588,\"altitude\":0},{\"latitude\":-44.07974793512565,\"longitude\":-73.09478942562212,\"altitude\":0},{\"latitude\":-44.07761408355358,\"longitude\":-73.09592838588692,\"altitude\":0},{\"latitude\":-44.077356906141276,\"longitude\":-73.09723087864828,\"altitude\":0},{\"latitude\":-44.07780947226745,\"longitude\":-73.10004795769869,\"altitude\":0},{\"latitude\":-44.07837428488099,\"longitude\":-73.09994877349158,\"altitude\":0},{\"latitude\":-44.07833165293018,\"longitude\":-73.09860204799203,\"altitude\":0},{\"latitude\":-44.07890224394962,\"longitude\":-73.09857389629362,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 5260,
        "wires": [
            [
                "102cadee7148f5de"
            ]
        ]
    },
    {
        "id": "102cadee7148f5de",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 5260,
        "wires": [
            [
                "f94616cd7c2d2298"
            ]
        ]
    },
    {
        "id": "f94616cd7c2d2298",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "150",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Marchant;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Marchant\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 5260,
        "wires": [
            [
                "75f7486a8572e4e3"
            ]
        ]
    },
    {
        "id": "75f7486a8572e4e3",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 5260,
        "wires": [
            [
                "44e868a978e92ceb"
            ]
        ]
    },
    {
        "id": "44e868a978e92ceb",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 5260,
        "wires": []
    },
    {
        "id": "aaba1dec1797d809",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT WAGNER1",
        "info": "",
        "x": 150,
        "y": 5300,
        "wires": []
    },
    {
        "id": "653a27d11b6028c9",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Wagner1\":{\"codigo_centro\":\"151\",\"Modulo100\":{\"id\":\"2857e321-2446-45dd-73a8-ff0eead59bcc\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-52.258085576525175,\"longitude\":-72.92208497096274,\"altitude\":0},{\"latitude\":-52.25812339081671,\"longitude\":-72.9209009037061,\"altitude\":0},{\"latitude\":-52.25963593615628,\"longitude\":-72.92099871782166,\"altitude\":0},{\"latitude\":-52.25962842847472,\"longitude\":-72.92216981765138,\"altitude\":0},{\"latitude\":-52.258085576525175,\"longitude\":-72.92208497096274,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"eca5df23-6d8a-4200-69bf-9cec30a8abe2\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-52.25891355997704,\"longitude\":-72.9200559858873,\"altitude\":0},{\"latitude\":-52.25766689568566,\"longitude\":-72.91986644355347,\"altitude\":0},{\"latitude\":-52.25713604034981,\"longitude\":-72.92053699580721,\"altitude\":0},{\"latitude\":-52.257001804369196,\"longitude\":-72.92229005220489,\"altitude\":0},{\"latitude\":-52.25742950960088,\"longitude\":-72.92354001753489,\"altitude\":0},{\"latitude\":-52.25974100169375,\"longitude\":-72.92371988274681,\"altitude\":0},{\"latitude\":-52.260481930892894,\"longitude\":-72.92270862280658,\"altitude\":0},{\"latitude\":-52.26056733336961,\"longitude\":-72.92071580930497,\"altitude\":0},{\"latitude\":-52.26004745780462,\"longitude\":-72.91997373191407,\"altitude\":0},{\"latitude\":-52.25891355997704,\"longitude\":-72.9200559858873,\"altitude\":0},{\"latitude\":-52.2587931636649,\"longitude\":-72.92078912279976,\"altitude\":0},{\"latitude\":-52.25982746640681,\"longitude\":-72.92083382650164,\"altitude\":0},{\"latitude\":-52.25978368676037,\"longitude\":-72.92237162611855,\"altitude\":0},{\"latitude\":-52.25792849018497,\"longitude\":-72.92235374450684,\"altitude\":0},{\"latitude\":-52.25797740216103,\"longitude\":-72.92076922953126,\"altitude\":0},{\"latitude\":-52.2587931636649,\"longitude\":-72.92078912279976,\"altitude\":0},{\"latitude\":-52.25891355997704,\"longitude\":-72.9200559858873,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"c876e388-afe7-473f-4e3e-e2e8af2f6913\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-52.25881067579956,\"longitude\":-72.9198575024202,\"altitude\":0},{\"latitude\":-52.25700469371091,\"longitude\":-72.9191780090332,\"altitude\":0},{\"latitude\":-52.25632387413248,\"longitude\":-72.92028665586257,\"altitude\":0},{\"latitude\":-52.2561109921839,\"longitude\":-72.92276259677922,\"altitude\":0},{\"latitude\":-52.25661649623668,\"longitude\":-72.92443781680164,\"altitude\":0},{\"latitude\":-52.25743973356641,\"longitude\":-72.92509846614813,\"altitude\":0},{\"latitude\":-52.26015486381816,\"longitude\":-72.92536980479717,\"altitude\":0},{\"latitude\":-52.26142571834347,\"longitude\":-72.9234468410538,\"altitude\":0},{\"latitude\":-52.26155569008496,\"longitude\":-72.92052110625869,\"altitude\":0},{\"latitude\":-52.26085528248285,\"longitude\":-72.91927059062195,\"altitude\":0},{\"latitude\":-52.260075434002744,\"longitude\":-72.919294184686,\"altitude\":0},{\"latitude\":-52.25881067579956,\"longitude\":-72.9198575024202,\"altitude\":0},{\"latitude\":-52.25891355997704,\"longitude\":-72.9200559858873,\"altitude\":0},{\"latitude\":-52.26004745780462,\"longitude\":-72.91997373191407,\"altitude\":0},{\"latitude\":-52.26056733336961,\"longitude\":-72.92071580930497,\"altitude\":0},{\"latitude\":-52.260481930892894,\"longitude\":-72.92270862280658,\"altitude\":0},{\"latitude\":-52.25974100169375,\"longitude\":-72.92371988274681,\"altitude\":0},{\"latitude\":-52.25742950960088,\"longitude\":-72.92354001753489,\"altitude\":0},{\"latitude\":-52.25699799885289,\"longitude\":-72.92226462292271,\"altitude\":0},{\"latitude\":-52.25713604034981,\"longitude\":-72.92053699580721,\"altitude\":0},{\"latitude\":-52.25766689568566,\"longitude\":-72.91986644355347,\"altitude\":0},{\"latitude\":-52.258800983545164,\"longitude\":-72.92003886959336,\"altitude\":0},{\"latitude\":-52.25881067579956,\"longitude\":-72.9198575024202,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"60d9f5bf-5230-4778-5ac2-7a26c0732676\",\"name\":\"Active tracking\",\"vertices\":[{\"latitude\":-52.258917189108196,\"longitude\":-72.9201601082653,\"altitude\":0},{\"latitude\":-52.25888830498972,\"longitude\":-72.920856150436,\"altitude\":0},{\"latitude\":-52.25807231597803,\"longitude\":-72.920856150436,\"altitude\":0},{\"latitude\":-52.25805787338155,\"longitude\":-72.92220104405705,\"altitude\":0},{\"latitude\":-52.25969311762239,\"longitude\":-72.92222678683174,\"altitude\":0},{\"latitude\":-52.2597001078749,\"longitude\":-72.92090461048879,\"altitude\":0},{\"latitude\":-52.25888830498972,\"longitude\":-72.920856150436,\"altitude\":0},{\"latitude\":-52.258917189108196,\"longitude\":-72.9201601082653,\"altitude\":0},{\"latitude\":-52.25913382071938,\"longitude\":-72.91928710629395,\"altitude\":0},{\"latitude\":-52.26134340271017,\"longitude\":-72.91862645694748,\"altitude\":0},{\"latitude\":-52.26206113247758,\"longitude\":-72.92115816154111,\"altitude\":0},{\"latitude\":-52.26203947079403,\"longitude\":-72.9245911816742,\"altitude\":0},{\"latitude\":-52.26045091813987,\"longitude\":-72.92698603793137,\"altitude\":0},{\"latitude\":-52.25792355864876,\"longitude\":-72.92699783496339,\"altitude\":0},{\"latitude\":-52.255634368758464,\"longitude\":-72.92557035952596,\"altitude\":0},{\"latitude\":-52.25525884369195,\"longitude\":-72.9219367846641,\"altitude\":0},{\"latitude\":-52.25590878904216,\"longitude\":-72.92050930922667,\"altitude\":0},{\"latitude\":-52.25612543534824,\"longitude\":-72.91914082067748,\"altitude\":0},{\"latitude\":-52.256717596408784,\"longitude\":-72.91856275141924,\"altitude\":0},{\"latitude\":-52.25870344496954,\"longitude\":-72.91969529414357,\"altitude\":0},{\"latitude\":-52.258917189108196,\"longitude\":-72.9201601082653,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 5340,
        "wires": [
            [
                "ea949a737bcee1d9"
            ]
        ]
    },
    {
        "id": "ea949a737bcee1d9",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 5340,
        "wires": [
            [
                "a477991b966d14fe"
            ]
        ]
    },
    {
        "id": "a477991b966d14fe",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "151",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Wagner1;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Wagner1\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 5340,
        "wires": [
            [
                "0e95d14e0bbc3af6"
            ]
        ]
    },
    {
        "id": "0e95d14e0bbc3af6",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 5340,
        "wires": [
            [
                "5f88dbcd7f5a35ac"
            ]
        ]
    },
    {
        "id": "5f88dbcd7f5a35ac",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 5340,
        "wires": []
    },
    {
        "id": "3be00769ddaa1eb5",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT GERTRUDIS1",
        "info": "",
        "x": 160,
        "y": 5380,
        "wires": []
    },
    {
        "id": "c0a634730a525b10",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Gertrudis1\":{\"codigo_centro\":\"157\",\"Modulo100\":{\"id\":\"f18e734f-e446-47a4-45a2-070699611bdb\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-44.585430010808615,\"longitude\":-73.9715699808392,\"altitude\":0},{\"latitude\":-44.586089981952625,\"longitude\":-73.97401997284038,\"altitude\":0},{\"latitude\":-44.5867799872362,\"longitude\":-73.97362999967231,\"altitude\":0},{\"latitude\":-44.58612000137992,\"longitude\":-73.97117999126183,\"altitude\":0},{\"latitude\":-44.585430010808615,\"longitude\":-73.9715699808392,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"66ab92ad-68a2-4902-4138-5d5d1002b0af\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-44.58537688133193,\"longitude\":-73.97138071053631,\"altitude\":0},{\"latitude\":-44.58522787904502,\"longitude\":-73.97170042971993,\"altitude\":0},{\"latitude\":-44.58589953244151,\"longitude\":-73.97413587566915,\"altitude\":0},{\"latitude\":-44.586101103570925,\"longitude\":-73.97423836700024,\"altitude\":0},{\"latitude\":-44.58697232805721,\"longitude\":-73.97371959679731,\"altitude\":0},{\"latitude\":-44.58699372254553,\"longitude\":-73.97350502007612,\"altitude\":0},{\"latitude\":-44.58631902543473,\"longitude\":-73.97108244902483,\"altitude\":0},{\"latitude\":-44.58605006130905,\"longitude\":-73.9709837436021,\"altitude\":0},{\"latitude\":-44.58568171396689,\"longitude\":-73.97121025621686,\"altitude\":0},{\"latitude\":-44.58557927547285,\"longitude\":-73.9705438613646,\"altitude\":0},{\"latitude\":-44.586334693420895,\"longitude\":-73.97017682093188,\"altitude\":0},{\"latitude\":-44.58705974416156,\"longitude\":-73.9701674809376,\"altitude\":0},{\"latitude\":-44.587951078550645,\"longitude\":-73.97341779894538,\"altitude\":0},{\"latitude\":-44.587957730248434,\"longitude\":-73.97522975783475,\"altitude\":0},{\"latitude\":-44.58594223099063,\"longitude\":-73.97628517718785,\"altitude\":0},{\"latitude\":-44.58503756173594,\"longitude\":-73.97522041784049,\"altitude\":0},{\"latitude\":-44.58435905055553,\"longitude\":-73.97185801990142,\"altitude\":0},{\"latitude\":-44.58475152367447,\"longitude\":-73.97112950034796,\"altitude\":0},{\"latitude\":-44.58557927547285,\"longitude\":-73.9705438613646,\"altitude\":0},{\"latitude\":-44.58568171396689,\"longitude\":-73.97121025621686,\"altitude\":0},{\"latitude\":-44.58537688133193,\"longitude\":-73.97138071053631,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"92aedf60-8349-4ad7-5b10-96857bf9db90\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-44.585343147295546,\"longitude\":-73.97081324720894,\"altitude\":0},{\"latitude\":-44.58475152367447,\"longitude\":-73.97112950034796,\"altitude\":0},{\"latitude\":-44.58435905055553,\"longitude\":-73.97185801990142,\"altitude\":0},{\"latitude\":-44.58503756173594,\"longitude\":-73.97522041784049,\"altitude\":0},{\"latitude\":-44.58594223099063,\"longitude\":-73.97628517718785,\"altitude\":0},{\"latitude\":-44.587957730248434,\"longitude\":-73.97522975783475,\"altitude\":0},{\"latitude\":-44.587951078550645,\"longitude\":-73.97341779894538,\"altitude\":0},{\"latitude\":-44.58705974416156,\"longitude\":-73.9701674809376,\"altitude\":0},{\"latitude\":-44.586334693420895,\"longitude\":-73.97017682093188,\"altitude\":0},{\"latitude\":-44.58583457552918,\"longitude\":-73.97047640407045,\"altitude\":0},{\"latitude\":-44.58557927547285,\"longitude\":-73.9705438613646,\"altitude\":0},{\"latitude\":-44.58631978958228,\"longitude\":-73.96941089551547,\"altitude\":0},{\"latitude\":-44.58729171791803,\"longitude\":-73.96961688995361,\"altitude\":0},{\"latitude\":-44.58771349313561,\"longitude\":-73.97089576734287,\"altitude\":0},{\"latitude\":-44.587896872669845,\"longitude\":-73.97167682647705,\"altitude\":0},{\"latitude\":-44.587933548414,\"longitude\":-73.97283554077147,\"altitude\":0},{\"latitude\":-44.58847757071155,\"longitude\":-73.97404575334802,\"altitude\":0},{\"latitude\":-44.58886266172326,\"longitude\":-73.97680521011354,\"altitude\":0},{\"latitude\":-44.586081921311916,\"longitude\":-73.97797571615166,\"altitude\":0},{\"latitude\":-44.58355413976797,\"longitude\":-73.97550061766873,\"altitude\":0},{\"latitude\":-44.58383439434429,\"longitude\":-73.97143982106537,\"altitude\":0},{\"latitude\":-44.58425926883165,\"longitude\":-73.9704757007487,\"altitude\":0},{\"latitude\":-44.58557927547285,\"longitude\":-73.9705438613646,\"altitude\":0},{\"latitude\":-44.585343147295546,\"longitude\":-73.97081324720894,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"c2e0d9e6-f6a1-4acb-5775-c1fac3301f1b\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-44.585682649790336,\"longitude\":-73.97116691116571,\"altitude\":0},{\"latitude\":-44.58522787904502,\"longitude\":-73.97170042971993,\"altitude\":0},{\"latitude\":-44.58593773786766,\"longitude\":-73.9743161201477,\"altitude\":0},{\"latitude\":-44.58697232805721,\"longitude\":-73.97371959679731,\"altitude\":0},{\"latitude\":-44.58624433147101,\"longitude\":-73.97105503751943,\"altitude\":0},{\"latitude\":-44.5856836514858,\"longitude\":-73.97117310952378,\"altitude\":0},{\"latitude\":-44.58557927547285,\"longitude\":-73.9705438613646,\"altitude\":0},{\"latitude\":-44.58631978958228,\"longitude\":-73.96941089551547,\"altitude\":0},{\"latitude\":-44.58732686577542,\"longitude\":-73.96962547223666,\"altitude\":0},{\"latitude\":-44.587896872669845,\"longitude\":-73.97167682647705,\"altitude\":0},{\"latitude\":-44.587933548414,\"longitude\":-73.97283554077147,\"altitude\":0},{\"latitude\":-44.58847757071155,\"longitude\":-73.97404575334802,\"altitude\":0},{\"latitude\":-44.58886266172326,\"longitude\":-73.97680521011354,\"altitude\":0},{\"latitude\":-44.58607527770695,\"longitude\":-73.97809267044067,\"altitude\":0},{\"latitude\":-44.58347115165661,\"longitude\":-73.97556924741366,\"altitude\":0},{\"latitude\":-44.5837859756112,\"longitude\":-73.9714579579595,\"altitude\":0},{\"latitude\":-44.58421388926013,\"longitude\":-73.97035074260204,\"altitude\":0},{\"latitude\":-44.58557927547285,\"longitude\":-73.9705438613646,\"altitude\":0},{\"latitude\":-44.585682649790336,\"longitude\":-73.97116691116571,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 5420,
        "wires": [
            [
                "cf5a680b636f495c"
            ]
        ]
    },
    {
        "id": "cf5a680b636f495c",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 5420,
        "wires": [
            [
                "ad604c438675a5d2"
            ]
        ]
    },
    {
        "id": "ad604c438675a5d2",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "157",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Gertrudis1;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Gertrudis1\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 5420,
        "wires": [
            [
                "b2e4a75246a792d0"
            ]
        ]
    },
    {
        "id": "b2e4a75246a792d0",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 5420,
        "wires": [
            [
                "ab728926de60b799"
            ]
        ]
    },
    {
        "id": "ab728926de60b799",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 5420,
        "wires": []
    },
    {
        "id": "c373d52354872cb9",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT STAINES 4",
        "info": "",
        "x": 150,
        "y": 5460,
        "wires": []
    },
    {
        "id": "b100cd90e37b9bce",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Staines4\":{\"codigo_centro\":\"158\",\"Modulo100\":{\"id\":\"fa69b4d6-4fad-4532-6beb-893df713b90d\",\"name\":\"Modulo100\",\"vertices\":[{\"latitude\":-51.446031004797426,\"longitude\":-73.7549569940893,\"altitude\":0},{\"latitude\":-51.44616400471175,\"longitude\":-73.75555897224159,\"altitude\":0},{\"latitude\":-51.44181700989598,\"longitude\":-73.75774398213252,\"altitude\":0},{\"latitude\":-51.441723007694435,\"longitude\":-73.75719299248885,\"altitude\":0},{\"latitude\":-51.446031004797426,\"longitude\":-73.7549569940893,\"altitude\":0}]},\"Modulo200\":{\"id\":\"c2fea819-98c9-4377-6b36-9f58d705948c\",\"name\":\"Modulo200\",\"vertices\":[{\"latitude\":-51.446691993931765,\"longitude\":-73.75310898616986,\"altitude\":0},{\"latitude\":-51.45015298439763,\"longitude\":-73.75064201852426,\"altitude\":0},{\"latitude\":-51.45000799761527,\"longitude\":-73.75018000211819,\"altitude\":0},{\"latitude\":-51.446550005540274,\"longitude\":-73.75256398823696,\"altitude\":0},{\"latitude\":-51.446691993931765,\"longitude\":-73.75310898616986,\"altitude\":0}]},\"INTERIOR100\":{\"id\":\"0256ae14-5901-4002-756d-e4db7a69315b\",\"name\":\"Zona_Interior_Mod100\",\"vertices\":[{\"latitude\":-51.44649723344813,\"longitude\":-73.7552279254781,\"altitude\":0},{\"latitude\":-51.446084749929724,\"longitude\":-73.7548054815056,\"altitude\":0},{\"latitude\":-51.44160170099619,\"longitude\":-73.75709804105189,\"altitude\":0},{\"latitude\":-51.44172333548908,\"longitude\":-73.7579273966542,\"altitude\":0},{\"latitude\":-51.4461627727789,\"longitude\":-73.75566699609107,\"altitude\":0},{\"latitude\":-51.44649723344813,\"longitude\":-73.7552279254781,\"altitude\":0},{\"latitude\":-51.44598683393645,\"longitude\":-73.75758826732635,\"altitude\":0},{\"latitude\":-51.4449670901356,\"longitude\":-73.75820517539978,\"altitude\":0},{\"latitude\":-51.44352143982923,\"longitude\":-73.75869020902975,\"altitude\":0},{\"latitude\":-51.442033110061956,\"longitude\":-73.75918954610823,\"altitude\":0},{\"latitude\":-51.44127241779122,\"longitude\":-73.75896155834198,\"altitude\":0},{\"latitude\":-51.440954762323656,\"longitude\":-73.7570571899414,\"altitude\":0},{\"latitude\":-51.44127241779122,\"longitude\":-73.75570267438889,\"altitude\":0},{\"latitude\":-51.44241763100407,\"longitude\":-73.75497847795486,\"altitude\":0},{\"latitude\":-51.44402255302206,\"longitude\":-73.75407993793488,\"altitude\":0},{\"latitude\":-51.4453950509628,\"longitude\":-73.75352472066879,\"altitude\":0},{\"latitude\":-51.44606373172592,\"longitude\":-73.75373929738998,\"altitude\":0},{\"latitude\":-51.44649723344813,\"longitude\":-73.7552279254781,\"altitude\":0}]},\"INTERIOR200\":{\"id\":\"70862b4f-a87d-4586-513a-557c6e4b37a1\",\"name\":\"Zona_Interior_Mod200\",\"vertices\":[{\"latitude\":-51.44629434677266,\"longitude\":-73.75452432111251,\"altitude\":0},{\"latitude\":-51.4464966972973,\"longitude\":-73.7524464726448,\"altitude\":0},{\"latitude\":-51.450040508265644,\"longitude\":-73.74999225139618,\"altitude\":0},{\"latitude\":-51.4502828815136,\"longitude\":-73.7506628036499,\"altitude\":0},{\"latitude\":-51.446732594015266,\"longitude\":-73.75326560104196,\"altitude\":0},{\"latitude\":-51.446433173648046,\"longitude\":-73.75303655862808,\"altitude\":0},{\"latitude\":-51.44629434677266,\"longitude\":-73.75452432111251,\"altitude\":0},{\"latitude\":-51.44670018489293,\"longitude\":-73.7546575090257,\"altitude\":0},{\"latitude\":-51.44739103403135,\"longitude\":-73.75456541776657,\"altitude\":0},{\"latitude\":-51.44858624175782,\"longitude\":-73.75380098819733,\"altitude\":0},{\"latitude\":-51.449472179741996,\"longitude\":-73.75298291444778,\"altitude\":0},{\"latitude\":-51.450516895842455,\"longitude\":-73.7519770860672,\"altitude\":0},{\"latitude\":-51.45069646834073,\"longitude\":-73.75063924255804,\"altitude\":0},{\"latitude\":-51.450165873899365,\"longitude\":-73.74905347824097,\"altitude\":0},{\"latitude\":-51.44917965495005,\"longitude\":-73.74905347824097,\"altitude\":0},{\"latitude\":-51.44800953704052,\"longitude\":-73.74975085258484,\"altitude\":0},{\"latitude\":-51.446379679980126,\"longitude\":-73.7510785460472,\"altitude\":0},{\"latitude\":-51.44601471670046,\"longitude\":-73.75240863901307,\"altitude\":0},{\"latitude\":-51.44606373172592,\"longitude\":-73.75373929738998,\"altitude\":0},{\"latitude\":-51.44629434677266,\"longitude\":-73.75452432111251,\"altitude\":0},{\"latitude\":-51.44651569001217,\"longitude\":-73.75533630318846,\"altitude\":0},{\"latitude\":-51.44629434677266,\"longitude\":-73.75452432111251,\"altitude\":0}]},\"EXTERIOR100\":{\"id\":\"f1da9617-9325-43ca-742e-b326822b1f9c\",\"name\":\"Zona_Exterior_Mod100\",\"vertices\":[{\"latitude\":-51.44649723344813,\"longitude\":-73.7552279254781,\"altitude\":0},{\"latitude\":-51.44606373172592,\"longitude\":-73.75373929738998,\"altitude\":0},{\"latitude\":-51.4453950509628,\"longitude\":-73.75352472066879,\"altitude\":0},{\"latitude\":-51.44402255302206,\"longitude\":-73.75407993793488,\"altitude\":0},{\"latitude\":-51.44241763100407,\"longitude\":-73.75497847795486,\"altitude\":0},{\"latitude\":-51.44127241779122,\"longitude\":-73.75570267438889,\"altitude\":0},{\"latitude\":-51.440954762323656,\"longitude\":-73.7570571899414,\"altitude\":0},{\"latitude\":-51.44127241779122,\"longitude\":-73.75896155834198,\"altitude\":0},{\"latitude\":-51.442033110061956,\"longitude\":-73.75918954610823,\"altitude\":0},{\"latitude\":-51.4449670901356,\"longitude\":-73.75820517539978,\"altitude\":0},{\"latitude\":-51.44598683393645,\"longitude\":-73.75758826732635,\"altitude\":0},{\"latitude\":-51.44649723344813,\"longitude\":-73.7552279254781,\"altitude\":0},{\"latitude\":-51.446965753792426,\"longitude\":-73.75797910995006,\"altitude\":0},{\"latitude\":-51.44598683393645,\"longitude\":-73.76016318798064,\"altitude\":0},{\"latitude\":-51.44425659943727,\"longitude\":-73.76141041517258,\"altitude\":0},{\"latitude\":-51.44239255365001,\"longitude\":-73.76151770353317,\"altitude\":0},{\"latitude\":-51.44092466853323,\"longitude\":-73.76106441020966,\"altitude\":0},{\"latitude\":-51.43976437060317,\"longitude\":-73.7585136294365,\"altitude\":0},{\"latitude\":-51.439784433642025,\"longitude\":-73.75556319952011,\"altitude\":0},{\"latitude\":-51.44079141368119,\"longitude\":-73.75388512652067,\"altitude\":0},{\"latitude\":-51.44261824934082,\"longitude\":-73.75240623950957,\"altitude\":0},{\"latitude\":-51.44473806257666,\"longitude\":-73.75164985656738,\"altitude\":0},{\"latitude\":-51.445914205586256,\"longitude\":-73.75234274620594,\"altitude\":0},{\"latitude\":-51.44606373172592,\"longitude\":-73.75373929738998,\"altitude\":0},{\"latitude\":-51.44649723344813,\"longitude\":-73.7552279254781,\"altitude\":0}]},\"EXTERIOR200\":{\"id\":\"924f6e3a-f8c1-4054-49cd-b1f45a4cff30\",\"name\":\"Zona_Exterior_Mod200\",\"vertices\":[{\"latitude\":-51.44649001060152,\"longitude\":-73.75519037246704,\"altitude\":0},{\"latitude\":-51.44606373172592,\"longitude\":-73.75373929738998,\"altitude\":0},{\"latitude\":-51.44601471670046,\"longitude\":-73.75240863901307,\"altitude\":0},{\"latitude\":-51.446379679980126,\"longitude\":-73.7510785460472,\"altitude\":0},{\"latitude\":-51.44800953704052,\"longitude\":-73.74975085258484,\"altitude\":0},{\"latitude\":-51.44917965495005,\"longitude\":-73.74905347824097,\"altitude\":0},{\"latitude\":-51.450165873899365,\"longitude\":-73.74905347824097,\"altitude\":0},{\"latitude\":-51.45069646834073,\"longitude\":-73.75063924255804,\"altitude\":0},{\"latitude\":-51.450516895842455,\"longitude\":-73.7519770860672,\"altitude\":0},{\"latitude\":-51.44858624175782,\"longitude\":-73.75380098819733,\"altitude\":0},{\"latitude\":-51.44739103403135,\"longitude\":-73.75456541776657,\"altitude\":0},{\"latitude\":-51.44670018489293,\"longitude\":-73.7546575090257,\"altitude\":0},{\"latitude\":-51.44629434677266,\"longitude\":-73.75452432111251,\"altitude\":0},{\"latitude\":-51.44649723344813,\"longitude\":-73.7552279254781,\"altitude\":0},{\"latitude\":-51.44715198873172,\"longitude\":-73.75630348920821,\"altitude\":0},{\"latitude\":-51.44819675792117,\"longitude\":-73.75619620084761,\"altitude\":0},{\"latitude\":-51.44929666509175,\"longitude\":-73.75544518232346,\"altitude\":0},{\"latitude\":-51.45088463022157,\"longitude\":-73.75339865684509,\"altitude\":0},{\"latitude\":-51.45154391038449,\"longitude\":-73.75240556485308,\"altitude\":0},{\"latitude\":-51.45146453939108,\"longitude\":-73.75052692926798,\"altitude\":0},{\"latitude\":-51.45072583619394,\"longitude\":-73.74859750270842,\"altitude\":0},{\"latitude\":-51.44985684805596,\"longitude\":-73.74795799511936,\"altitude\":0},{\"latitude\":-51.44735592955525,\"longitude\":-73.74901860952379,\"altitude\":0},{\"latitude\":-51.44577869573085,\"longitude\":-73.75081353045896,\"altitude\":0},{\"latitude\":-51.445914205586256,\"longitude\":-73.75234274620594,\"altitude\":0},{\"latitude\":-51.44606373172592,\"longitude\":-73.75373929738998,\"altitude\":0},{\"latitude\":-51.44649001060152,\"longitude\":-73.75519037246704,\"altitude\":0}]},\"ACTIVETRACKING100\":{\"id\":\"80a882a3-7027-441c-6cdf-45159bbf809a\",\"name\":\"ActiveTracking_Mod100\",\"vertices\":[{\"latitude\":-51.446627061866245,\"longitude\":-73.75543060157268,\"altitude\":0},{\"latitude\":-51.445398083439215,\"longitude\":-73.75034552654422,\"altitude\":0},{\"latitude\":-51.44444550745471,\"longitude\":-73.74971866607665,\"altitude\":0},{\"latitude\":-51.44080763693744,\"longitude\":-73.75177860260008,\"altitude\":0},{\"latitude\":-51.438935090620035,\"longitude\":-73.75495433807372,\"altitude\":0},{\"latitude\":-51.43912234870651,\"longitude\":-73.75916004180907,\"altitude\":0},{\"latitude\":-51.439924874667234,\"longitude\":-73.76246452331542,\"altitude\":0},{\"latitude\":-51.441556633968375,\"longitude\":-73.76315116882323,\"altitude\":0},{\"latitude\":-51.444071034163706,\"longitude\":-73.76306533813477,\"altitude\":0},{\"latitude\":-51.44626433404545,\"longitude\":-73.761305809021,\"altitude\":0},{\"latitude\":-51.447173720174305,\"longitude\":-73.75890254974364,\"altitude\":0},{\"latitude\":-51.446627061866245,\"longitude\":-73.75543060157268,\"altitude\":0},{\"latitude\":-51.44616400471175,\"longitude\":-73.75555897224159,\"altitude\":0},{\"latitude\":-51.44181700989598,\"longitude\":-73.75774398213252,\"altitude\":0},{\"latitude\":-51.441723007694435,\"longitude\":-73.75719299248885,\"altitude\":0},{\"latitude\":-51.446031004797426,\"longitude\":-73.7549569940893,\"altitude\":0},{\"latitude\":-51.446627061866245,\"longitude\":-73.75543060157268,\"altitude\":0}]},\"ACTIVETRACKING200\":{\"id\":\"6b630572-39c7-4da4-7bc4-f28eeffaa269\",\"name\":\"ActiveTraking_Mod200\",\"vertices\":[{\"latitude\":-51.44636523807583,\"longitude\":-73.75500807854928,\"altitude\":0},{\"latitude\":-51.446691993931765,\"longitude\":-73.75310898616986,\"altitude\":0},{\"latitude\":-51.45015298439763,\"longitude\":-73.75064201852426,\"altitude\":0},{\"latitude\":-51.45000799761527,\"longitude\":-73.75018000211819,\"altitude\":0},{\"latitude\":-51.446550005540274,\"longitude\":-73.75256398823696,\"altitude\":0},{\"latitude\":-51.446691993931765,\"longitude\":-73.75310898616986,\"altitude\":0},{\"latitude\":-51.44636523807583,\"longitude\":-73.75500807854928,\"altitude\":0},{\"latitude\":-51.445398083439215,\"longitude\":-73.75034552654422,\"altitude\":0},{\"latitude\":-51.44734680548935,\"longitude\":-73.7490091413064,\"altitude\":0},{\"latitude\":-51.449861286419015,\"longitude\":-73.74796507848241,\"altitude\":0},{\"latitude\":-51.450743527611735,\"longitude\":-73.74856674180471,\"altitude\":0},{\"latitude\":-51.45146033602792,\"longitude\":-73.7503717317716,\"altitude\":0},{\"latitude\":-51.45155958553699,\"longitude\":-73.75247755339963,\"altitude\":0},{\"latitude\":-51.449434934188446,\"longitude\":-73.7557334581598,\"altitude\":0},{\"latitude\":-51.448418576699815,\"longitude\":-73.75669776859347,\"altitude\":0},{\"latitude\":-51.446922633867516,\"longitude\":-73.75772492599177,\"altitude\":0},{\"latitude\":-51.44656375903019,\"longitude\":-73.75525582227023,\"altitude\":0},{\"latitude\":-51.44636523807583,\"longitude\":-73.75500807854928,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 5500,
        "wires": [
            [
                "f320b9074ec3d904"
            ]
        ]
    },
    {
        "id": "f320b9074ec3d904",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 5500,
        "wires": [
            [
                "7c2cb06efd34c8c4"
            ]
        ]
    },
    {
        "id": "7c2cb06efd34c8c4",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "158",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Staines4;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Staines4\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int_100\"] = convertirCoordenadas(json.INTERIOR100.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext_100\"] = convertirCoordenadas(json.EXTERIOR100.vertices);\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_200\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int_200\"] = convertirCoordenadas(json.INTERIOR200.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext_200\"] = convertirCoordenadas(json.EXTERIOR200.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 5500,
        "wires": [
            [
                "de19c86f7f3c190c"
            ]
        ]
    },
    {
        "id": "de19c86f7f3c190c",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 5500,
        "wires": [
            [
                "4bd916de3aa4b757"
            ]
        ]
    },
    {
        "id": "4bd916de3aa4b757",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 5500,
        "wires": []
    },
    {
        "id": "40c3ef52938061f9",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT TAHUENAHUEC",
        "info": "",
        "x": 170,
        "y": 5540,
        "wires": []
    },
    {
        "id": "a53da0f7101e8c7e",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Tahuenahuec\":{\"codigo_centro\":\"159\",\"Modulo100\":{\"id\":\"73788143-fba7-481d-76d3-7dd79bb72e02\",\"name\":\"Modulo100\",\"vertices\":[{\"latitude\":-44.449189705993604,\"longitude\":-73.99205021560189,\"altitude\":0},{\"latitude\":-44.44865299819546,\"longitude\":-73.9918652772576,\"altitude\":0},{\"latitude\":-44.44920170736442,\"longitude\":-73.98884012375878,\"altitude\":0},{\"latitude\":-44.44973828024304,\"longitude\":-73.98903554674688,\"altitude\":0},{\"latitude\":-44.449189705993604,\"longitude\":-73.99205021560189,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"a3c7c69e-0763-40e2-4463-adf441f24478\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-44.44966408415818,\"longitude\":-73.99084184690082,\"altitude\":0},{\"latitude\":-44.44943383674438,\"longitude\":-73.9921656845707,\"altitude\":0},{\"latitude\":-44.44914202860154,\"longitude\":-73.99242103099824,\"altitude\":0},{\"latitude\":-44.44859210847533,\"longitude\":-73.9922171831131,\"altitude\":0},{\"latitude\":-44.448426641376685,\"longitude\":-73.99189267633905,\"altitude\":0},{\"latitude\":-44.44899574134023,\"longitude\":-73.98873138467025,\"altitude\":0},{\"latitude\":-44.44923460167418,\"longitude\":-73.9884200466226,\"altitude\":0},{\"latitude\":-44.449848951811255,\"longitude\":-73.98862731450207,\"altitude\":0},{\"latitude\":-44.450011948451326,\"longitude\":-73.98895792042156,\"altitude\":0},{\"latitude\":-44.449664658588986,\"longitude\":-73.99083919823168,\"altitude\":0},{\"latitude\":-44.45000481074419,\"longitude\":-73.99092248078887,\"altitude\":0},{\"latitude\":-44.45051221123659,\"longitude\":-73.98811769511667,\"altitude\":0},{\"latitude\":-44.45020968606137,\"longitude\":-73.98736774921417,\"altitude\":0},{\"latitude\":-44.44945374994122,\"longitude\":-73.98697829194134,\"altitude\":0},{\"latitude\":-44.448779755967365,\"longitude\":-73.98725294988253,\"altitude\":0},{\"latitude\":-44.448378419544426,\"longitude\":-73.98869061391451,\"altitude\":0},{\"latitude\":-44.44788823385581,\"longitude\":-73.99002957317862,\"altitude\":0},{\"latitude\":-44.447236816524544,\"longitude\":-73.99179124835428,\"altitude\":0},{\"latitude\":-44.44704648345141,\"longitude\":-73.99210131148719,\"altitude\":0},{\"latitude\":-44.447898956665,\"longitude\":-73.99394130719884,\"altitude\":0},{\"latitude\":-44.44880579674135,\"longitude\":-73.99448204079818,\"altitude\":0},{\"latitude\":-44.44986580165728,\"longitude\":-73.9940185549494,\"altitude\":0},{\"latitude\":-44.44992889135898,\"longitude\":-73.99257136564363,\"altitude\":0},{\"latitude\":-44.45000481074419,\"longitude\":-73.99092248078887,\"altitude\":0},{\"latitude\":-44.44966408415818,\"longitude\":-73.99084184690082,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"a59f9a8e-7ecb-4417-519e-85c23e2fbf0a\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-44.45000481074419,\"longitude\":-73.99092248078887,\"altitude\":0},{\"latitude\":-44.449963835711365,\"longitude\":-73.99176979051846,\"altitude\":0},{\"latitude\":-44.44986580165728,\"longitude\":-73.9940185549494,\"altitude\":0},{\"latitude\":-44.44880579674135,\"longitude\":-73.99448204079818,\"altitude\":0},{\"latitude\":-44.447898956665,\"longitude\":-73.99394130719884,\"altitude\":0},{\"latitude\":-44.44704648345141,\"longitude\":-73.99210131148719,\"altitude\":0},{\"latitude\":-44.44683738433037,\"longitude\":-73.99232876294263,\"altitude\":0},{\"latitude\":-44.44649904308153,\"longitude\":-73.99225170060754,\"altitude\":0},{\"latitude\":-44.44623382666922,\"longitude\":-73.99245321750641,\"altitude\":0},{\"latitude\":-44.44601629933798,\"longitude\":-73.99252188199169,\"altitude\":0},{\"latitude\":-44.44584472780678,\"longitude\":-73.99275791638502,\"altitude\":0},{\"latitude\":-44.445591965361245,\"longitude\":-73.99276757227199,\"altitude\":0},{\"latitude\":-44.44537137176436,\"longitude\":-73.99258732795715,\"altitude\":0},{\"latitude\":-44.44503435231321,\"longitude\":-73.99275255163958,\"altitude\":0},{\"latitude\":-44.44523656424059,\"longitude\":-73.99413442624791,\"altitude\":0},{\"latitude\":-44.445757410041445,\"longitude\":-73.99517297744751,\"altitude\":0},{\"latitude\":-44.44729541008955,\"longitude\":-73.99683809293492,\"altitude\":0},{\"latitude\":-44.44856683362075,\"longitude\":-73.99688100762431,\"altitude\":0},{\"latitude\":-44.44986580142356,\"longitude\":-73.99526739041904,\"altitude\":0},{\"latitude\":-44.4505887995808,\"longitude\":-73.99435758590698,\"altitude\":0},{\"latitude\":-44.45000481074419,\"longitude\":-73.99092248078887,\"altitude\":0},{\"latitude\":-44.45138837561642,\"longitude\":-73.98733663532768,\"altitude\":0},{\"latitude\":-44.4510330099967,\"longitude\":-73.98568010277813,\"altitude\":0},{\"latitude\":-44.45006646498659,\"longitude\":-73.98530459351605,\"altitude\":0},{\"latitude\":-44.449317419829214,\"longitude\":-73.98528528239694,\"altitude\":0},{\"latitude\":-44.448980423027876,\"longitude\":-73.98602342553204,\"altitude\":0},{\"latitude\":-44.44877822406054,\"longitude\":-73.98665857341257,\"altitude\":0},{\"latitude\":-44.448779755967365,\"longitude\":-73.98725294988253,\"altitude\":0},{\"latitude\":-44.44945374994122,\"longitude\":-73.98697829194134,\"altitude\":0},{\"latitude\":-44.45020968606137,\"longitude\":-73.98736774921417,\"altitude\":0},{\"latitude\":-44.45051221123659,\"longitude\":-73.98811769511667,\"altitude\":0},{\"latitude\":-44.45000481074419,\"longitude\":-73.99092248078887,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"2f2722ed-f7fd-41f5-69de-d0f5abc2464b\",\"name\":\"Active  Tracking\",\"vertices\":[{\"latitude\":-44.449664658588986,\"longitude\":-73.99083919823168,\"altitude\":0},{\"latitude\":-44.449419784417074,\"longitude\":-73.99224671791626,\"altitude\":0},{\"latitude\":-44.44909760630885,\"longitude\":-73.99258625500808,\"altitude\":0},{\"latitude\":-44.448912576112726,\"longitude\":-73.99251317521257,\"altitude\":0},{\"latitude\":-44.44855807921622,\"longitude\":-73.99237316324914,\"altitude\":0},{\"latitude\":-44.44840183390472,\"longitude\":-73.99203047858953,\"altitude\":0},{\"latitude\":-44.448516802416,\"longitude\":-73.99139184310738,\"altitude\":0},{\"latitude\":-44.44899574134023,\"longitude\":-73.98873138467025,\"altitude\":0},{\"latitude\":-44.449282188740284,\"longitude\":-73.98835801999665,\"altitude\":0},{\"latitude\":-44.44985201545184,\"longitude\":-73.9885039332148,\"altitude\":0},{\"latitude\":-44.45002557238678,\"longitude\":-73.98898053757212,\"altitude\":0},{\"latitude\":-44.449664658588986,\"longitude\":-73.99083919823168,\"altitude\":0},{\"latitude\":-44.45000481074419,\"longitude\":-73.99092248078887,\"altitude\":0},{\"latitude\":-44.45209297402457,\"longitude\":-73.98767137448885,\"altitude\":0},{\"latitude\":-44.451224478961564,\"longitude\":-73.98520588874817,\"altitude\":0},{\"latitude\":-44.44943536843729,\"longitude\":-73.98493123080698,\"altitude\":0},{\"latitude\":-44.449317419829214,\"longitude\":-73.98528528239694,\"altitude\":0},{\"latitude\":-44.448994558784186,\"longitude\":-73.98599246327186,\"altitude\":0},{\"latitude\":-44.44877822406054,\"longitude\":-73.98665857341257,\"altitude\":0},{\"latitude\":-44.4487791866879,\"longitude\":-73.98703207070078,\"altitude\":0},{\"latitude\":-44.44859458158782,\"longitude\":-73.98791628124873,\"altitude\":0},{\"latitude\":-44.44788823385581,\"longitude\":-73.99002957317862,\"altitude\":0},{\"latitude\":-44.447391955848126,\"longitude\":-73.9913716956022,\"altitude\":0},{\"latitude\":-44.44704648345141,\"longitude\":-73.99210131148719,\"altitude\":0},{\"latitude\":-44.44683738433037,\"longitude\":-73.99232876294263,\"altitude\":0},{\"latitude\":-44.44649904308153,\"longitude\":-73.99225170060754,\"altitude\":0},{\"latitude\":-44.44628547549301,\"longitude\":-73.99241397373682,\"altitude\":0},{\"latitude\":-44.44601629933798,\"longitude\":-73.99252188199169,\"altitude\":0},{\"latitude\":-44.44584472780678,\"longitude\":-73.99275791638502,\"altitude\":0},{\"latitude\":-44.445591965361245,\"longitude\":-73.99276757227199,\"altitude\":0},{\"latitude\":-44.44537137176436,\"longitude\":-73.99258732795715,\"altitude\":0},{\"latitude\":-44.44497322092211,\"longitude\":-73.99276394903461,\"altitude\":0},{\"latitude\":-44.44483213956897,\"longitude\":-73.99433612823485,\"altitude\":0},{\"latitude\":-44.44590447175485,\"longitude\":-73.99651622785312,\"altitude\":0},{\"latitude\":-44.44657849878972,\"longitude\":-73.99724578837775,\"altitude\":0},{\"latitude\":-44.44747310454019,\"longitude\":-73.99735736853471,\"altitude\":0},{\"latitude\":-44.44921611315073,\"longitude\":-73.99730303308588,\"altitude\":0},{\"latitude\":-44.45106650079114,\"longitude\":-73.99439766506674,\"altitude\":0},{\"latitude\":-44.45000481074419,\"longitude\":-73.99092248078887,\"altitude\":0},{\"latitude\":-44.449664658588986,\"longitude\":-73.99083919823168,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 5580,
        "wires": [
            [
                "421aa1d8ec4dcfc5"
            ]
        ]
    },
    {
        "id": "421aa1d8ec4dcfc5",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 5580,
        "wires": [
            [
                "bed1f9c66f0786ed"
            ]
        ]
    },
    {
        "id": "bed1f9c66f0786ed",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "159",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Tahuenahuec;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Tahuenahuec\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 5580,
        "wires": [
            [
                "230d2c6131ef3c50"
            ]
        ]
    },
    {
        "id": "230d2c6131ef3c50",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 5580,
        "wires": [
            [
                "9427ac4493493de7"
            ]
        ]
    },
    {
        "id": "9427ac4493493de7",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 5580,
        "wires": []
    },
    {
        "id": "c7b76f1fdd265ff6",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Bobe\":{\"codigo_centro\":\"160\",\"Modulo100\":{\"id\":\"7dc637e2-f26d-4bd6-5336-8cae482dffa9\",\"name\":\"Mod100\",\"vertices\":[{\"latitude\":-44.12023749343601,\"longitude\":-73.73525783864291,\"altitude\":0},{\"latitude\":-44.11799997348393,\"longitude\":-73.73573301624268,\"altitude\":0},{\"latitude\":-44.11787708261981,\"longitude\":-73.7346899881956,\"altitude\":0},{\"latitude\":-44.11787708261981,\"longitude\":-73.7346899881956,\"altitude\":0},{\"latitude\":-44.12012495776985,\"longitude\":-73.73415818282467,\"altitude\":0},{\"latitude\":-44.12023749343601,\"longitude\":-73.73525783864291,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"c5a70ad0-2cd3-446a-4f1d-459d5d1e86ae\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-44.12035988600015,\"longitude\":-73.7346507518849,\"altitude\":0},{\"latitude\":-44.120240785831385,\"longitude\":-73.73463205258786,\"altitude\":0},{\"latitude\":-44.120325427076786,\"longitude\":-73.73532970763335,\"altitude\":0},{\"latitude\":-44.120325427076786,\"longitude\":-73.73532970763335,\"altitude\":0},{\"latitude\":-44.120325427076786,\"longitude\":-73.73532970763335,\"altitude\":0},{\"latitude\":-44.120325427076786,\"longitude\":-73.73532970763335,\"altitude\":0},{\"latitude\":-44.120325427076786,\"longitude\":-73.73532970763335,\"altitude\":0},{\"latitude\":-44.12016282886352,\"longitude\":-73.73537341762129,\"altitude\":0},{\"latitude\":-44.12016282886352,\"longitude\":-73.73537341762129,\"altitude\":0},{\"latitude\":-44.12016282886352,\"longitude\":-73.73537341762129,\"altitude\":0},{\"latitude\":-44.117901098356846,\"longitude\":-73.73583038637662,\"altitude\":0},{\"latitude\":-44.117901098356846,\"longitude\":-73.73583038637662,\"altitude\":0},{\"latitude\":-44.117901098356846,\"longitude\":-73.73583038637662,\"altitude\":0},{\"latitude\":-44.117901098356846,\"longitude\":-73.73583038637662,\"altitude\":0},{\"latitude\":-44.117901098356846,\"longitude\":-73.73583038637662,\"altitude\":0},{\"latitude\":-44.117901098356846,\"longitude\":-73.73583038637662,\"altitude\":0},{\"latitude\":-44.117901098356846,\"longitude\":-73.73583038637662,\"altitude\":0},{\"latitude\":-44.117901098356846,\"longitude\":-73.73583038637662,\"altitude\":0},{\"latitude\":-44.11778215792112,\"longitude\":-73.7346485753551,\"altitude\":0},{\"latitude\":-44.11778215792112,\"longitude\":-73.7346485753551,\"altitude\":0},{\"latitude\":-44.11778215792112,\"longitude\":-73.7346485753551,\"altitude\":0},{\"latitude\":-44.11778215792112,\"longitude\":-73.7346485753551,\"altitude\":0},{\"latitude\":-44.11778215792112,\"longitude\":-73.7346485753551,\"altitude\":0},{\"latitude\":-44.11874317272728,\"longitude\":-73.73439783823079,\"altitude\":0},{\"latitude\":-44.120171529404764,\"longitude\":-73.73402516001079,\"altitude\":0},{\"latitude\":-44.120171529404764,\"longitude\":-73.73402516001079,\"altitude\":0},{\"latitude\":-44.120171529404764,\"longitude\":-73.73402516001079,\"altitude\":0},{\"latitude\":-44.120240785831385,\"longitude\":-73.73463205258786,\"altitude\":0},{\"latitude\":-44.12035988600015,\"longitude\":-73.7346507518849,\"altitude\":0},{\"latitude\":-44.12097184302465,\"longitude\":-73.73458018831597,\"altitude\":0},{\"latitude\":-44.12002503186737,\"longitude\":-73.73281530394274,\"altitude\":0},{\"latitude\":-44.12002503186737,\"longitude\":-73.73281530394274,\"altitude\":0},{\"latitude\":-44.12002503186737,\"longitude\":-73.73281530394274,\"altitude\":0},{\"latitude\":-44.12002503186737,\"longitude\":-73.73281530394274,\"altitude\":0},{\"latitude\":-44.12002503186737,\"longitude\":-73.73281530394274,\"altitude\":0},{\"latitude\":-44.118978033101655,\"longitude\":-73.73211059460738,\"altitude\":0},{\"latitude\":-44.11710763233895,\"longitude\":-73.73241282942253,\"altitude\":0},{\"latitude\":-44.11595360892314,\"longitude\":-73.73438114340085,\"altitude\":0},{\"latitude\":-44.11608745765313,\"longitude\":-73.73690212389438,\"altitude\":0},{\"latitude\":-44.117688851280505,\"longitude\":-73.73848632916174,\"altitude\":0},{\"latitude\":-44.11966263200786,\"longitude\":-73.73802066033785,\"altitude\":0},{\"latitude\":-44.1204018682308,\"longitude\":-73.73713064927317,\"altitude\":0},{\"latitude\":-44.120720077104814,\"longitude\":-73.73562831145121,\"altitude\":0},{\"latitude\":-44.12097184302465,\"longitude\":-73.73458018831597,\"altitude\":0},{\"latitude\":-44.12035988600015,\"longitude\":-73.7346507518849,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 760,
        "wires": [
            [
                "06d6a3dc88ef47df"
            ]
        ]
    },
    {
        "id": "06d6a3dc88ef47df",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 760,
        "wires": [
            [
                "56f524fc33d88d39"
            ]
        ]
    },
    {
        "id": "6a47b1440ded9986",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 760,
        "wires": []
    },
    {
        "id": "2d45de3794cc3ad7",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT BOBE",
        "info": "",
        "x": 140,
        "y": 720,
        "wires": []
    },
    {
        "id": "44568ab8beb2d525",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "8011183b04709ce1",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 720,
        "y": 760,
        "wires": [
            [
                "6a47b1440ded9986"
            ]
        ]
    },
    {
        "id": "56f524fc33d88d39",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "160",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Bobe;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Bobe\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 760,
        "wires": [
            [
                "44568ab8beb2d525"
            ]
        ]
    },
    {
        "id": "99d60946ddcd2ffc",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Butan2\":{\"codigo_centro\":\"161\",\"Modulo100\":{\"id\":\"7826a6f3-7f28-4130-4939-36d9eed1415b\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-45.32135639852378,\"longitude\":-74.2558273113991,\"altitude\":0},{\"latitude\":-45.32104454948564,\"longitude\":-74.25469346344471,\"altitude\":0},{\"latitude\":-45.32327236415805,\"longitude\":-74.25325859335315,\"altitude\":0},{\"latitude\":-45.32362386541567,\"longitude\":-74.25443524498283,\"altitude\":0},{\"latitude\":-45.32135639852378,\"longitude\":-74.2558273113991,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"7e3fd59c-089a-4a34-6f62-a31b7c12854e\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-45.32330451373144,\"longitude\":-74.25186740403934,\"altitude\":0},{\"latitude\":-45.32386774366246,\"longitude\":-74.2528144892816,\"altitude\":0},{\"latitude\":-45.32417314555984,\"longitude\":-74.2538209491251,\"altitude\":0},{\"latitude\":-45.32424763357774,\"longitude\":-74.2551028611363,\"altitude\":0},{\"latitude\":-45.32411627750234,\"longitude\":-74.25665997209505,\"altitude\":0},{\"latitude\":-45.32339075653266,\"longitude\":-74.2581497111485,\"altitude\":0},{\"latitude\":-45.32238786728882,\"longitude\":-74.25908637183649,\"altitude\":0},{\"latitude\":-45.32137963702004,\"longitude\":-74.25895381072326,\"altitude\":0},{\"latitude\":-45.320672491837705,\"longitude\":-74.25823966576044,\"altitude\":0},{\"latitude\":-45.32026109137888,\"longitude\":-74.25660427601107,\"altitude\":0},{\"latitude\":-45.320509376379626,\"longitude\":-74.25412024036767,\"altitude\":0},{\"latitude\":-45.32134203224639,\"longitude\":-74.25285155795997,\"altitude\":0},{\"latitude\":-45.32237050566236,\"longitude\":-74.25220001906135,\"altitude\":0},{\"latitude\":-45.32330451373144,\"longitude\":-74.25186740403934,\"altitude\":0},{\"latitude\":-45.32330108610819,\"longitude\":-74.2531196553953,\"altitude\":0},{\"latitude\":-45.320968325576956,\"longitude\":-74.25464183092119,\"altitude\":0},{\"latitude\":-45.32130528164323,\"longitude\":-74.25596505381692,\"altitude\":0},{\"latitude\":-45.32371923668084,\"longitude\":-74.25447016954422,\"altitude\":0},{\"latitude\":-45.32330108610819,\"longitude\":-74.2531196553953,\"altitude\":0},{\"latitude\":-45.32330108610819,\"longitude\":-74.2531196553953,\"altitude\":0},{\"latitude\":-45.32330108610819,\"longitude\":-74.2531196553953,\"altitude\":0},{\"latitude\":-45.32330108610819,\"longitude\":-74.2531196553953,\"altitude\":0},{\"latitude\":-45.32330451373144,\"longitude\":-74.25186740403934,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 840,
        "wires": [
            [
                "0681ca83ee256dec"
            ]
        ]
    },
    {
        "id": "0681ca83ee256dec",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 840,
        "wires": [
            [
                "07a2ee5ae033d162"
            ]
        ]
    },
    {
        "id": "c2c49742da91bbd9",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 840,
        "wires": []
    },
    {
        "id": "d31c12e872b4583d",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT BUTAN 2",
        "info": "",
        "x": 150,
        "y": 800,
        "wires": []
    },
    {
        "id": "1ea0fe5af8a21c5a",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "8011183b04709ce1",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 720,
        "y": 840,
        "wires": [
            [
                "c2c49742da91bbd9"
            ]
        ]
    },
    {
        "id": "07a2ee5ae033d162",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "161",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Butan2;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Butan2\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 840,
        "wires": [
            [
                "1ea0fe5af8a21c5a"
            ]
        ]
    },
    {
        "id": "cb9f4d42a8c9595c",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"IslaSanchez\":{\"codigo_centro\":\"162\",\"Modulo100\":{\"id\":\"0129ccaa-ff18-44ba-58f8-9b68ea63ec14\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-44.152532271677316,\"longitude\":-73.5431818664074,\"altitude\":0},{\"latitude\":-44.15285509772178,\"longitude\":-73.54286536574364,\"altitude\":0},{\"latitude\":-44.151052349055476,\"longitude\":-73.53943884372711,\"altitude\":0},{\"latitude\":-44.15072590469084,\"longitude\":-73.53975802659987,\"altitude\":0},{\"latitude\":-44.152532271677316,\"longitude\":-73.5431818664074,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"0819e6d8-6e90-4477-6d1a-86776af5b408\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-44.15082806416752,\"longitude\":-73.54014158248901,\"altitude\":0},{\"latitude\":-44.15062406588769,\"longitude\":-73.53975892045129,\"altitude\":0},{\"latitude\":-44.15107311766298,\"longitude\":-73.53930473327635,\"altitude\":0},{\"latitude\":-44.15294241921725,\"longitude\":-73.54288816452028,\"altitude\":0},{\"latitude\":-44.15252673887576,\"longitude\":-73.54326903820036,\"altitude\":0},{\"latitude\":-44.15082806416752,\"longitude\":-73.54014158248901,\"altitude\":0},{\"latitude\":-44.15074851769694,\"longitude\":-73.54021131992342,\"altitude\":0},{\"latitude\":-44.150400180216415,\"longitude\":-73.541579246521,\"altitude\":0},{\"latitude\":-44.150488708168744,\"longitude\":-73.54251623066375,\"altitude\":0},{\"latitude\":-44.151371414558085,\"longitude\":-73.54424714998459,\"altitude\":0},{\"latitude\":-44.15224769255964,\"longitude\":-73.54464054085838,\"altitude\":0},{\"latitude\":-44.153084869769955,\"longitude\":-73.54425482469836,\"altitude\":0},{\"latitude\":-44.15427862683464,\"longitude\":-73.54294784117297,\"altitude\":0},{\"latitude\":-44.15483169717958,\"longitude\":-73.5409997507967,\"altitude\":0},{\"latitude\":-44.1546760886674,\"longitude\":-73.53851780814246,\"altitude\":0},{\"latitude\":-44.15349680852235,\"longitude\":-73.53564417205158,\"altitude\":0},{\"latitude\":-44.152082077661944,\"longitude\":-73.53496933626947,\"altitude\":0},{\"latitude\":-44.15105207972858,\"longitude\":-73.53513763602565,\"altitude\":0},{\"latitude\":-44.149980632897396,\"longitude\":-73.53617906526777,\"altitude\":0},{\"latitude\":-44.14955036031235,\"longitude\":-73.53791130726817,\"altitude\":0},{\"latitude\":-44.15012392152286,\"longitude\":-73.53971355432395,\"altitude\":0},{\"latitude\":-44.15074851769694,\"longitude\":-73.54021131992342,\"altitude\":0},{\"latitude\":-44.15074851769694,\"longitude\":-73.54021131992342,\"altitude\":0},{\"latitude\":-44.15082806416752,\"longitude\":-73.54014158248901,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 920,
        "wires": [
            [
                "23e11b0a1ea130eb"
            ]
        ]
    },
    {
        "id": "23e11b0a1ea130eb",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 920,
        "wires": [
            [
                "8d96def98fc410b1"
            ]
        ]
    },
    {
        "id": "025a4ef1398808bf",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 920,
        "wires": []
    },
    {
        "id": "d33e8b48a73febf4",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT ISLA SANCHEZ",
        "info": "",
        "x": 170,
        "y": 880,
        "wires": []
    },
    {
        "id": "dd07b516787ac37e",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "8011183b04709ce1",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 720,
        "y": 920,
        "wires": [
            [
                "025a4ef1398808bf"
            ]
        ]
    },
    {
        "id": "8d96def98fc410b1",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "162",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.IslaSanchez;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"IslaSanchez\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 920,
        "wires": [
            [
                "dd07b516787ac37e"
            ]
        ]
    },
    {
        "id": "e5ad777b0db683d6",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"RodadoNotable\":{\"codigo_centro\":\"164\",\"Modulo100\":{\"id\":\"e09682a3-421b-4299-689d-3dfd1d9faffa\",\"name\":\"Módulo 100\",\"vertices\":[{\"latitude\":-45.29887305904886,\"longitude\":-73.10929600149392,\"altitude\":0},{\"latitude\":-45.29966738645021,\"longitude\":-73.10928326100111,\"altitude\":0},{\"latitude\":-45.2996835999553,\"longitude\":-73.11193009838462,\"altitude\":0},{\"latitude\":-45.29887395080426,\"longitude\":-73.11193102039397,\"altitude\":0},{\"latitude\":-45.29887305904886,\"longitude\":-73.10929600149392,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"65ba435d-3cc6-4264-7c7d-485695ddc9dd\",\"name\":\"Zone 2 Interior\",\"vertices\":[{\"latitude\":-45.29933997876848,\"longitude\":-73.10825657805253,\"altitude\":0},{\"latitude\":-45.29921869858526,\"longitude\":-73.10908727050882,\"altitude\":0},{\"latitude\":-45.298837402632245,\"longitude\":-73.10913908605754,\"altitude\":0},{\"latitude\":-45.29868504489126,\"longitude\":-73.10940146789474,\"altitude\":0},{\"latitude\":-45.298718370590464,\"longitude\":-73.11193736238407,\"altitude\":0},{\"latitude\":-45.29886587145433,\"longitude\":-73.11216219454306,\"altitude\":0},{\"latitude\":-45.29967056596421,\"longitude\":-73.11215800161813,\"altitude\":0},{\"latitude\":-45.29978673621132,\"longitude\":-73.11199127455491,\"altitude\":0},{\"latitude\":-45.29978454536052,\"longitude\":-73.10925911614322,\"altitude\":0},{\"latitude\":-45.29964219758498,\"longitude\":-73.10907742096602,\"altitude\":0},{\"latitude\":-45.29934905270154,\"longitude\":-73.10906873859932,\"altitude\":0},{\"latitude\":-45.29933997876848,\"longitude\":-73.10825657805253,\"altitude\":0},{\"latitude\":-45.3002093513213,\"longitude\":-73.10818791389467,\"altitude\":0},{\"latitude\":-45.30089155799038,\"longitude\":-73.10831665992738,\"altitude\":0},{\"latitude\":-45.301567719309986,\"longitude\":-73.1085226537107,\"altitude\":0},{\"latitude\":-45.30192994524659,\"longitude\":-73.10890889180882,\"altitude\":0},{\"latitude\":-45.302086909008295,\"longitude\":-73.11049675954564,\"altitude\":0},{\"latitude\":-45.301942019220384,\"longitude\":-73.1119666100858,\"altitude\":0},{\"latitude\":-45.30155149204138,\"longitude\":-73.11267795880251,\"altitude\":0},{\"latitude\":-45.301083171866786,\"longitude\":-73.11357291065245,\"altitude\":0},{\"latitude\":-45.30031318987642,\"longitude\":-73.11390698528417,\"altitude\":0},{\"latitude\":-45.299527998301066,\"longitude\":-73.11376983126101,\"altitude\":0},{\"latitude\":-45.29869779430393,\"longitude\":-73.11302064458339,\"altitude\":0},{\"latitude\":-45.29833572536264,\"longitude\":-73.11206203288626,\"altitude\":0},{\"latitude\":-45.298257685303156,\"longitude\":-73.11075584089359,\"altitude\":0},{\"latitude\":-45.29842040662279,\"longitude\":-73.10911059379576,\"altitude\":0},{\"latitude\":-45.29933997876848,\"longitude\":-73.10825657805253,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 1080,
        "wires": [
            [
                "ede3240eed547a8a"
            ]
        ]
    },
    {
        "id": "ede3240eed547a8a",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 1080,
        "wires": [
            [
                "5a51f84ab45df5ef"
            ]
        ]
    },
    {
        "id": "0b33af5c670df716",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1080,
        "wires": []
    },
    {
        "id": "c276f11a4dddfe93",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT RODADO NOTABLE",
        "info": "",
        "x": 180,
        "y": 1040,
        "wires": []
    },
    {
        "id": "f6f8fc62d13c8645",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "8011183b04709ce1",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 720,
        "y": 1080,
        "wires": [
            [
                "0b33af5c670df716"
            ]
        ]
    },
    {
        "id": "5a51f84ab45df5ef",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "164",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.RodadoNotable;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"RodadoNotable\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1080,
        "wires": [
            [
                "f6f8fc62d13c8645"
            ]
        ]
    },
    {
        "id": "d5bb9677a62adc03",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Larenas\":{\"codigo_centro\":\"163\",\"Modulo100\":{\"id\":\"423472df-eff6-4123-6775-ce2e40b594e4\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-45.073791982270414,\"longitude\":-73.50013700389914,\"altitude\":0},{\"latitude\":-45.07155100040315,\"longitude\":-73.5007500182833,\"altitude\":0},{\"latitude\":-45.07169000661191,\"longitude\":-73.50180698675092,\"altitude\":0},{\"latitude\":-45.073928003504705,\"longitude\":-73.50118301168538,\"altitude\":0},{\"latitude\":-45.073791982270414,\"longitude\":-73.50013700389914,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"6c67f145-b4bb-4be5-5084-907b88e6519a\",\"name\":\"Zona Interior 1\",\"vertices\":[{\"latitude\":-45.074530191968364,\"longitude\":-73.50052893139946,\"altitude\":0},{\"latitude\":-45.07394300571405,\"longitude\":-73.50065946578978,\"altitude\":0},{\"latitude\":-45.074012458204784,\"longitude\":-73.50132644165569,\"altitude\":0},{\"latitude\":-45.071610617118786,\"longitude\":-73.50192725647503,\"altitude\":0},{\"latitude\":-45.07146918059905,\"longitude\":-73.50066483020782,\"altitude\":0},{\"latitude\":-45.07376881624948,\"longitude\":-73.49997641076305,\"altitude\":0},{\"latitude\":-45.07392280142553,\"longitude\":-73.50057363510132,\"altitude\":0},{\"latitude\":-45.074507083554565,\"longitude\":-73.5004523990574,\"altitude\":0},{\"latitude\":-45.074161591283776,\"longitude\":-73.49917137609737,\"altitude\":0},{\"latitude\":-45.07317965456364,\"longitude\":-73.49836349487306,\"altitude\":0},{\"latitude\":-45.07242197584531,\"longitude\":-73.4980630874634,\"altitude\":0},{\"latitude\":-45.071239976986796,\"longitude\":-73.49823474884035,\"altitude\":0},{\"latitude\":-45.07030042199442,\"longitude\":-73.49889993667604,\"altitude\":0},{\"latitude\":-45.06948208731986,\"longitude\":-73.50008010864259,\"altitude\":0},{\"latitude\":-45.06940631499807,\"longitude\":-73.50123882293701,\"altitude\":0},{\"latitude\":-45.06969424928646,\"longitude\":-73.50250482559206,\"altitude\":0},{\"latitude\":-45.070603505937584,\"longitude\":-73.50366353988647,\"altitude\":0},{\"latitude\":-45.072077426941966,\"longitude\":-73.50400262005735,\"altitude\":0},{\"latitude\":-45.07300917772781,\"longitude\":-73.50275874126963,\"altitude\":0},{\"latitude\":-45.07401940371513,\"longitude\":-73.50232958782725,\"altitude\":0},{\"latitude\":-45.074570726816255,\"longitude\":-73.5017280575994,\"altitude\":0},{\"latitude\":-45.074530191968364,\"longitude\":-73.50052893139946,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 1000,
        "wires": [
            [
                "23f3d7ece17b18ac"
            ]
        ]
    },
    {
        "id": "23f3d7ece17b18ac",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 1000,
        "wires": [
            [
                "daf3161a129efe76"
            ]
        ]
    },
    {
        "id": "5fa2a1c7a71dba83",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1000,
        "wires": []
    },
    {
        "id": "8d366f0e1edb1a95",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT LARENAS",
        "info": "",
        "x": 150,
        "y": 960,
        "wires": []
    },
    {
        "id": "194584b7ba1e4771",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "8011183b04709ce1",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 720,
        "y": 1000,
        "wires": [
            [
                "5fa2a1c7a71dba83"
            ]
        ]
    },
    {
        "id": "daf3161a129efe76",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "163",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Larenas;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Larenas\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1000,
        "wires": [
            [
                "194584b7ba1e4771"
            ]
        ]
    },
    {
        "id": "417d08fb3cc913c5",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Level\":{\"codigo_centro\":\"165\",\"Modulo100\":{\"id\":\"72bf6f2b-0da3-4ee3-67e9-343d3c5c1726\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-44.50054669819255,\"longitude\":-74.37993751817795,\"altitude\":0},{\"latitude\":-44.50232319338737,\"longitude\":-74.37711501838473,\"altitude\":0},{\"latitude\":-44.50202757330505,\"longitude\":-74.37679793110226,\"altitude\":0},{\"latitude\":-44.500245460260466,\"longitude\":-74.37956424565303,\"altitude\":0},{\"latitude\":-44.50054669819255,\"longitude\":-74.37993751817795,\"altitude\":0}]},\"Modulo200\":{\"id\":\"30ef9b59-ad67-49e7-6352-a6cb548c04cb\",\"name\":\"Modulo 200\",\"vertices\":[{\"latitude\":-44.50003671414701,\"longitude\":-74.37928942192416,\"altitude\":0},{\"latitude\":-44.50183309409527,\"longitude\":-74.37648318623212,\"altitude\":0},{\"latitude\":-44.501558614913705,\"longitude\":-74.37613710827898,\"altitude\":0},{\"latitude\":-44.49972296165979,\"longitude\":-74.37893228199005,\"altitude\":0},{\"latitude\":-44.50003671414701,\"longitude\":-74.37928942192416,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"3901427b-8667-468b-4946-dc76a7030b71\",\"name\":\"Zona de alerta\",\"vertices\":[{\"latitude\":-44.49954889926184,\"longitude\":-74.38033700316694,\"altitude\":0},{\"latitude\":-44.49886380340961,\"longitude\":-74.37916272461622,\"altitude\":0},{\"latitude\":-44.498764212686304,\"longitude\":-74.37635100265562,\"altitude\":0},{\"latitude\":-44.50038179418119,\"longitude\":-74.37375600828668,\"altitude\":0},{\"latitude\":-44.50221368860482,\"longitude\":-74.37407786203198,\"altitude\":0},{\"latitude\":-44.50389169434476,\"longitude\":-74.37602260377362,\"altitude\":0},{\"latitude\":-44.504247896658754,\"longitude\":-74.37888545392269,\"altitude\":0},{\"latitude\":-44.50287265485494,\"longitude\":-74.38095244725592,\"altitude\":0},{\"latitude\":-44.50086456521364,\"longitude\":-74.38180537450073,\"altitude\":0},{\"latitude\":-44.49954889926184,\"longitude\":-74.38033700316694,\"altitude\":0},{\"latitude\":-44.50018812736285,\"longitude\":-74.37969279191925,\"altitude\":0},{\"latitude\":-44.50060278135659,\"longitude\":-74.3802337843339,\"altitude\":0},{\"latitude\":-44.50257282779539,\"longitude\":-74.3771625111907,\"altitude\":0},{\"latitude\":-44.501498601575584,\"longitude\":-74.37581592581202,\"altitude\":0},{\"latitude\":-44.499559924248956,\"longitude\":-74.3788769009189,\"altitude\":0},{\"latitude\":-44.49997209503835,\"longitude\":-74.379411719148,\"altitude\":0},{\"latitude\":-44.49954889926184,\"longitude\":-74.38033700316694,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 1160,
        "wires": [
            [
                "c78786590286bc94"
            ]
        ]
    },
    {
        "id": "c78786590286bc94",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 1160,
        "wires": [
            [
                "543b4d37010f9403"
            ]
        ]
    },
    {
        "id": "e42b59b3cfc56607",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1160,
        "wires": []
    },
    {
        "id": "b8cb15c2007ab6ea",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT LEVEL",
        "info": "",
        "x": 140,
        "y": 1120,
        "wires": []
    },
    {
        "id": "d6f1571f87190742",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "8011183b04709ce1",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 720,
        "y": 1160,
        "wires": [
            [
                "e42b59b3cfc56607"
            ]
        ]
    },
    {
        "id": "543b4d37010f9403",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "165",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Level;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Level\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de Modulo200 al objeto de resultados\nresultados[\"coord_m_200\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1160,
        "wires": [
            [
                "d6f1571f87190742"
            ]
        ]
    },
    {
        "id": "1104f6d8744239c1",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT MELCHOR 1",
        "info": "",
        "x": 160,
        "y": 5620,
        "wires": []
    },
    {
        "id": "7be65e40f9f1b32a",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Melchor1\":{\"codigo_centro\":\"166\",\"Modulo100\":{\"id\":\"b1c80a89-4a65-44e7-7e24-30e29d79c9e4\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-44.9930420010379,\"longitude\":-73.85356500674575,\"altitude\":0},{\"latitude\":-44.99360999828821,\"longitude\":-73.85355901475936,\"altitude\":0},{\"latitude\":-44.99364900262043,\"longitude\":-73.8567670044795,\"altitude\":0},{\"latitude\":-44.99307500476661,\"longitude\":-73.8567649950565,\"altitude\":0},{\"latitude\":-44.9930420010379,\"longitude\":-73.85356500674575,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"9bb5f381-eb75-4fbf-44f4-3297c7d1eefa\",\"name\":\"Zona Interior\",\"vertices\":[{\"latitude\":-44.993362521044595,\"longitude\":-73.85317243013097,\"altitude\":0},{\"latitude\":-44.993362708038234,\"longitude\":-73.85327906897861,\"altitude\":0},{\"latitude\":-44.99336309286883,\"longitude\":-73.85349853041633,\"altitude\":0},{\"latitude\":-44.99365624716346,\"longitude\":-73.85351506747425,\"altitude\":0},{\"latitude\":-44.99370704289538,\"longitude\":-73.85683171999322,\"altitude\":0},{\"latitude\":-44.9929967603921,\"longitude\":-73.85682087319105,\"altitude\":0},{\"latitude\":-44.992982052633046,\"longitude\":-73.85349998459449,\"altitude\":0},{\"latitude\":-44.993353877262166,\"longitude\":-73.85349839614928,\"altitude\":0},{\"latitude\":-44.993353392403534,\"longitude\":-73.8531711497018,\"altitude\":0},{\"latitude\":-44.992884671000795,\"longitude\":-73.85334362556178,\"altitude\":0},{\"latitude\":-44.992460644978145,\"longitude\":-73.85455399150354,\"altitude\":0},{\"latitude\":-44.99240156678741,\"longitude\":-73.85661888109026,\"altitude\":0},{\"latitude\":-44.99273986514229,\"longitude\":-73.85736197328741,\"altitude\":0},{\"latitude\":-44.99389718254604,\"longitude\":-73.85738385083215,\"altitude\":0},{\"latitude\":-44.9943002528682,\"longitude\":-73.85644289084335,\"altitude\":0},{\"latitude\":-44.99425428243281,\"longitude\":-73.85469132564428,\"altitude\":0},{\"latitude\":-44.99397192961794,\"longitude\":-73.85340649948267,\"altitude\":0},{\"latitude\":-44.993362521044595,\"longitude\":-73.85317243013097,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"ef8f51b0-5935-4dbc-6f9e-48f38b2fc9f1\",\"name\":\"Zona Exterior\",\"vertices\":[{\"latitude\":-44.993353392403534,\"longitude\":-73.8531711497018,\"altitude\":0},{\"latitude\":-44.992884671000795,\"longitude\":-73.85334362556178,\"altitude\":0},{\"latitude\":-44.992460644978145,\"longitude\":-73.85455399150354,\"altitude\":0},{\"latitude\":-44.99240156678741,\"longitude\":-73.85661888109026,\"altitude\":0},{\"latitude\":-44.992736316714684,\"longitude\":-73.85736498057888,\"altitude\":0},{\"latitude\":-44.993900729000224,\"longitude\":-73.85738228611565,\"altitude\":0},{\"latitude\":-44.9943002528682,\"longitude\":-73.85644289084335,\"altitude\":0},{\"latitude\":-44.99425428243281,\"longitude\":-73.85469132564428,\"altitude\":0},{\"latitude\":-44.99397192961794,\"longitude\":-73.85340649948267,\"altitude\":0},{\"latitude\":-44.993362521044595,\"longitude\":-73.85317243013097,\"altitude\":0},{\"latitude\":-44.994579252374734,\"longitude\":-73.85325939201873,\"altitude\":0},{\"latitude\":-44.995161101865605,\"longitude\":-73.85482096467676,\"altitude\":0},{\"latitude\":-44.9952714520339,\"longitude\":-73.85690387018806,\"altitude\":0},{\"latitude\":-44.99457014437898,\"longitude\":-73.85868577362454,\"altitude\":0},{\"latitude\":-44.993435540431484,\"longitude\":-73.85892897516601,\"altitude\":0},{\"latitude\":-44.992432088418994,\"longitude\":-73.85822661761185,\"altitude\":0},{\"latitude\":-44.99186004932764,\"longitude\":-73.85682581310525,\"altitude\":0},{\"latitude\":-44.99210792571702,\"longitude\":-73.85415390697047,\"altitude\":0},{\"latitude\":-44.99259558259709,\"longitude\":-73.85327108082231,\"altitude\":0},{\"latitude\":-44.993353392403534,\"longitude\":-73.8531711497018,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"d07d4e95-ca01-4f0d-68a0-a028c8b7005f\",\"name\":\"Active Tracking\",\"vertices\":[{\"latitude\":-44.993353392403534,\"longitude\":-73.8531711497018,\"altitude\":0},{\"latitude\":-44.99335397107837,\"longitude\":-73.85356171568041,\"altitude\":0},{\"latitude\":-44.9930420010379,\"longitude\":-73.85356500674575,\"altitude\":0},{\"latitude\":-44.99307500476661,\"longitude\":-73.8567649950565,\"altitude\":0},{\"latitude\":-44.99364900262043,\"longitude\":-73.8567670044795,\"altitude\":0},{\"latitude\":-44.99360999828821,\"longitude\":-73.85355901475936,\"altitude\":0},{\"latitude\":-44.993363203494845,\"longitude\":-73.85356161828462,\"altitude\":0},{\"latitude\":-44.993362521044595,\"longitude\":-73.85317243013097,\"altitude\":0},{\"latitude\":-44.994579252374734,\"longitude\":-73.85325939201873,\"altitude\":0},{\"latitude\":-44.995161101865605,\"longitude\":-73.85482096467676,\"altitude\":0},{\"latitude\":-44.9952714520339,\"longitude\":-73.85690387018806,\"altitude\":0},{\"latitude\":-44.99457014437898,\"longitude\":-73.85868577362454,\"altitude\":0},{\"latitude\":-44.993435540431484,\"longitude\":-73.85892897516601,\"altitude\":0},{\"latitude\":-44.992432088418994,\"longitude\":-73.85822661761185,\"altitude\":0},{\"latitude\":-44.99186004932764,\"longitude\":-73.85682581310525,\"altitude\":0},{\"latitude\":-44.99210792571702,\"longitude\":-73.85415390697047,\"altitude\":0},{\"latitude\":-44.99259558259709,\"longitude\":-73.85327108082231,\"altitude\":0},{\"latitude\":-44.993353392403534,\"longitude\":-73.8531711497018,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 5660,
        "wires": [
            [
                "de69373c782c3bad"
            ]
        ]
    },
    {
        "id": "de69373c782c3bad",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 5660,
        "wires": [
            [
                "ce277c5f631a1b1e"
            ]
        ]
    },
    {
        "id": "ce277c5f631a1b1e",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "166",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Melchor1;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Melchor1\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 5660,
        "wires": [
            [
                "aa51f9102d36aa7b"
            ]
        ]
    },
    {
        "id": "aa51f9102d36aa7b",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 5660,
        "wires": [
            [
                "5431db8fc3dc479c"
            ]
        ]
    },
    {
        "id": "5431db8fc3dc479c",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 5660,
        "wires": []
    },
    {
        "id": "f239e77d6f89f2f2",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Lyng2\":{\"codigo_centro\":\"167\",\"Modulo100\":{\"id\":\"9eed0936-2bcc-477c-76fb-bf74f9b56944\",\"name\":\"Modulo\",\"vertices\":[{\"latitude\":-45.694600998811254,\"longitude\":-74.26921098915044,\"altitude\":0},{\"latitude\":-45.69498399736891,\"longitude\":-74.26933201991363,\"altitude\":0},{\"latitude\":-45.69590700605593,\"longitude\":-74.26412697895331,\"altitude\":0},{\"latitude\":-45.6955189852404,\"longitude\":-74.26397801506859,\"altitude\":0},{\"latitude\":-45.694600998811254,\"longitude\":-74.26921098915044,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"f4827da0-1ad6-42b1-5a33-d855c442a963\",\"name\":\"Zona_Interior\",\"vertices\":[{\"latitude\":-45.695421804010024,\"longitude\":-74.26377752732797,\"altitude\":0},{\"latitude\":-45.69605420150669,\"longitude\":-74.2640313243951,\"altitude\":0},{\"latitude\":-45.69508066875437,\"longitude\":-74.26954803699203,\"altitude\":0},{\"latitude\":-45.69447441754195,\"longitude\":-74.26935321814469,\"altitude\":0},{\"latitude\":-45.69436210563188,\"longitude\":-74.2690300955871,\"altitude\":0},{\"latitude\":-45.69455641044772,\"longitude\":-74.27023277136655,\"altitude\":0},{\"latitude\":-45.695354034576084,\"longitude\":-74.27119580086979,\"altitude\":0},{\"latitude\":-45.69705116771554,\"longitude\":-74.2713941624411,\"altitude\":0},{\"latitude\":-45.698421152689335,\"longitude\":-74.27086135771408,\"altitude\":0},{\"latitude\":-45.69886776924413,\"longitude\":-74.26777729032537,\"altitude\":0},{\"latitude\":-45.698341623848016,\"longitude\":-74.26496562204613,\"altitude\":0},{\"latitude\":-45.69680049162596,\"longitude\":-74.26218833962008,\"altitude\":0},{\"latitude\":-45.694977605339815,\"longitude\":-74.2618740042083,\"altitude\":0},{\"latitude\":-45.69352712866205,\"longitude\":-74.26430742888653,\"altitude\":0},{\"latitude\":-45.693124930334626,\"longitude\":-74.26726177529687,\"altitude\":0},{\"latitude\":-45.693478549021115,\"longitude\":-74.26897728772087,\"altitude\":0},{\"latitude\":-45.69436210563188,\"longitude\":-74.2690300955871,\"altitude\":0},{\"latitude\":-45.69447441754195,\"longitude\":-74.26935321814469,\"altitude\":0},{\"latitude\":-45.695421804010024,\"longitude\":-74.26377752732797,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 1240,
        "wires": [
            [
                "db80bb95207d6970"
            ]
        ]
    },
    {
        "id": "db80bb95207d6970",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 1240,
        "wires": [
            [
                "464160207e93987c"
            ]
        ]
    },
    {
        "id": "3342b558efbba155",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1240,
        "wires": []
    },
    {
        "id": "9f8325c12a3a95dc",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT LYNG2",
        "info": "",
        "x": 140,
        "y": 1200,
        "wires": []
    },
    {
        "id": "92dd7f6f2b0d26d8",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "8011183b04709ce1",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 720,
        "y": 1240,
        "wires": [
            [
                "3342b558efbba155"
            ]
        ]
    },
    {
        "id": "464160207e93987c",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "167",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Lyng2;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Lyng2\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1240,
        "wires": [
            [
                "92dd7f6f2b0d26d8"
            ]
        ]
    },
    {
        "id": "c230f89bf5f90966",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT LUNA 2",
        "info": "",
        "x": 140,
        "y": 5700,
        "wires": []
    },
    {
        "id": "a435c2b307db4231",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Luna2\":{\"codigo_centro\":\"168\",\"Modulo100\":{\"id\":\"ac4a5b41-2a1c-4a47-65d5-a0781e66416f\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-44.25046599032872,\"longitude\":-73.88100799045867,\"altitude\":0},{\"latitude\":-44.250227013277595,\"longitude\":-73.87792199989678,\"altitude\":0},{\"latitude\":-44.24967400196716,\"longitude\":-73.87800003490004,\"altitude\":0},{\"latitude\":-44.24990099546727,\"longitude\":-73.88109101606366,\"altitude\":0},{\"latitude\":-44.25046599032872,\"longitude\":-73.88100799045867,\"altitude\":0}]},\"Modulo200\":{\"id\":\"45c1671c-5365-4b87-48ff-a5ee55d0032c\",\"name\":\"Modulo 200\",\"vertices\":[{\"latitude\":-44.2505170103974,\"longitude\":-73.87790003584728,\"altitude\":0},{\"latitude\":-44.25106700495294,\"longitude\":-73.87779500175904,\"altitude\":0},{\"latitude\":-44.25129799523121,\"longitude\":-73.8813230187509,\"altitude\":0},{\"latitude\":-44.25073700093916,\"longitude\":-73.88137600616687,\"altitude\":0},{\"latitude\":-44.2505170103974,\"longitude\":-73.87790003584728,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"1de453f2-0ebb-4230-796c-4b637ed70e8b\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-44.249522139575554,\"longitude\":-73.87781297042386,\"altitude\":0},{\"latitude\":-44.25026329595579,\"longitude\":-73.87772745310826,\"altitude\":0},{\"latitude\":-44.250525793425915,\"longitude\":-73.8811034096137,\"altitude\":0},{\"latitude\":-44.25069354133289,\"longitude\":-73.88133705354379,\"altitude\":0},{\"latitude\":-44.250456541323686,\"longitude\":-73.87769946291462,\"altitude\":0},{\"latitude\":-44.25119392344685,\"longitude\":-73.8775907991004,\"altitude\":0},{\"latitude\":-44.25184038145167,\"longitude\":-73.87600335774944,\"altitude\":0},{\"latitude\":-44.25019576904124,\"longitude\":-73.87555943093946,\"altitude\":0},{\"latitude\":-44.248803838747044,\"longitude\":-73.87648530712063,\"altitude\":0},{\"latitude\":-44.24833467401397,\"longitude\":-73.87773977475463,\"altitude\":0},{\"latitude\":-44.24845027243634,\"longitude\":-73.87978894731862,\"altitude\":0},{\"latitude\":-44.24925081451032,\"longitude\":-73.88090548797196,\"altitude\":0},{\"latitude\":-44.24980812337161,\"longitude\":-73.88125770938039,\"altitude\":0},{\"latitude\":-44.25079459153637,\"longitude\":-73.88234352999487,\"altitude\":0},{\"latitude\":-44.25203033777994,\"longitude\":-73.88213416950987,\"altitude\":0},{\"latitude\":-44.252674161296845,\"longitude\":-73.88153710062144,\"altitude\":0},{\"latitude\":-44.25303393865824,\"longitude\":-73.8792775552008,\"altitude\":0},{\"latitude\":-44.252649997110645,\"longitude\":-73.87739547476073,\"altitude\":0},{\"latitude\":-44.25184038145167,\"longitude\":-73.87600335774944,\"altitude\":0},{\"latitude\":-44.25119392344685,\"longitude\":-73.8775907991004,\"altitude\":0},{\"latitude\":-44.251435053914385,\"longitude\":-73.8814742988256,\"altitude\":0},{\"latitude\":-44.25073599168956,\"longitude\":-73.88155599299103,\"altitude\":0},{\"latitude\":-44.25042758091364,\"longitude\":-73.88111114301414,\"altitude\":0},{\"latitude\":-44.24988830894638,\"longitude\":-73.88117206945219,\"altitude\":0},{\"latitude\":-44.24980812337161,\"longitude\":-73.88125770938039,\"altitude\":0},{\"latitude\":-44.24975639435191,\"longitude\":-73.88119285784225,\"altitude\":0},{\"latitude\":-44.249522139575554,\"longitude\":-73.87781297042386,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"3cc88abe-5031-4799-4aee-3ff56c3c2260\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-44.24979490843859,\"longitude\":-73.88124935745175,\"altitude\":0},{\"latitude\":-44.24925081451032,\"longitude\":-73.88090548797196,\"altitude\":0},{\"latitude\":-44.24845027243634,\"longitude\":-73.87978894731862,\"altitude\":0},{\"latitude\":-44.24833467401397,\"longitude\":-73.87773977475463,\"altitude\":0},{\"latitude\":-44.248803838747044,\"longitude\":-73.87648530712063,\"altitude\":0},{\"latitude\":-44.25019576904124,\"longitude\":-73.87555943093946,\"altitude\":0},{\"latitude\":-44.25184038145167,\"longitude\":-73.87600335774944,\"altitude\":0},{\"latitude\":-44.252649997110645,\"longitude\":-73.87739547476073,\"altitude\":0},{\"latitude\":-44.25303393865824,\"longitude\":-73.8792775552008,\"altitude\":0},{\"latitude\":-44.252674161296845,\"longitude\":-73.88153710062144,\"altitude\":0},{\"latitude\":-44.25203033777994,\"longitude\":-73.88213416950987,\"altitude\":0},{\"latitude\":-44.25079459153637,\"longitude\":-73.88234352999487,\"altitude\":0},{\"latitude\":-44.24980812337161,\"longitude\":-73.88125770938039,\"altitude\":0},{\"latitude\":-44.25004567857446,\"longitude\":-73.88213103647008,\"altitude\":0},{\"latitude\":-44.25063695757448,\"longitude\":-73.8830461784156,\"altitude\":0},{\"latitude\":-44.251536395381024,\"longitude\":-73.88332660651803,\"altitude\":0},{\"latitude\":-44.25261304694918,\"longitude\":-73.88309010407097,\"altitude\":0},{\"latitude\":-44.25335212376106,\"longitude\":-73.88199829256801,\"altitude\":0},{\"latitude\":-44.2533448573746,\"longitude\":-73.8806445237499,\"altitude\":0},{\"latitude\":-44.25359519791338,\"longitude\":-73.87962821562269,\"altitude\":0},{\"latitude\":-44.25394496050412,\"longitude\":-73.87874308785088,\"altitude\":0},{\"latitude\":-44.25390100055375,\"longitude\":-73.87757006028306,\"altitude\":0},{\"latitude\":-44.25366427166943,\"longitude\":-73.87616309382996,\"altitude\":0},{\"latitude\":-44.252682604988955,\"longitude\":-73.87483883887757,\"altitude\":0},{\"latitude\":-44.25095791873619,\"longitude\":-73.87380397575872,\"altitude\":0},{\"latitude\":-44.24867707667378,\"longitude\":-73.87414037974646,\"altitude\":0},{\"latitude\":-44.247498934349785,\"longitude\":-73.87574908406779,\"altitude\":0},{\"latitude\":-44.24741500200033,\"longitude\":-73.87778568801991,\"altitude\":0},{\"latitude\":-44.24788544538143,\"longitude\":-73.87992599826752,\"altitude\":0},{\"latitude\":-44.24873145243171,\"longitude\":-73.88089185861938,\"altitude\":0},{\"latitude\":-44.24979490843859,\"longitude\":-73.88124935745175,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"81d16de3-76cf-4746-79f4-6acccd969185\",\"name\":\"Active tracking\",\"vertices\":[{\"latitude\":-44.24985513984771,\"longitude\":-73.88113113093557,\"altitude\":0},{\"latitude\":-44.25045246863098,\"longitude\":-73.88108316313348,\"altitude\":0},{\"latitude\":-44.250722321048904,\"longitude\":-73.88143373817279,\"altitude\":0},{\"latitude\":-44.25134528292231,\"longitude\":-73.88136685328107,\"altitude\":0},{\"latitude\":-44.25111217260739,\"longitude\":-73.8776876233986,\"altitude\":0},{\"latitude\":-44.24960460219828,\"longitude\":-73.87790959038257,\"altitude\":0},{\"latitude\":-44.24985513984771,\"longitude\":-73.88113113093557,\"altitude\":0},{\"latitude\":-44.24977403941848,\"longitude\":-73.88124416778223,\"altitude\":0},{\"latitude\":-44.24970844605163,\"longitude\":-73.8811824207956,\"altitude\":0},{\"latitude\":-44.24887167463181,\"longitude\":-73.88138330840604,\"altitude\":0},{\"latitude\":-44.24799481589638,\"longitude\":-73.88060376512513,\"altitude\":0},{\"latitude\":-44.24761443337176,\"longitude\":-73.88022493238007,\"altitude\":0},{\"latitude\":-44.24740110655667,\"longitude\":-73.87923718815814,\"altitude\":0},{\"latitude\":-44.2470542688143,\"longitude\":-73.87797481154931,\"altitude\":0},{\"latitude\":-44.24714597798051,\"longitude\":-73.8767163581121,\"altitude\":0},{\"latitude\":-44.247372603090156,\"longitude\":-73.87526207846147,\"altitude\":0},{\"latitude\":-44.248036599014824,\"longitude\":-73.87391101520917,\"altitude\":0},{\"latitude\":-44.248938847279554,\"longitude\":-73.87350707111605,\"altitude\":0},{\"latitude\":-44.2508410693928,\"longitude\":-73.87342497222319,\"altitude\":0},{\"latitude\":-44.25171243784209,\"longitude\":-73.87397610687731,\"altitude\":0},{\"latitude\":-44.252837204414654,\"longitude\":-73.87470359303649,\"altitude\":0},{\"latitude\":-44.253603574573795,\"longitude\":-73.87568113230816,\"altitude\":0},{\"latitude\":-44.254320726224684,\"longitude\":-73.87703514461208,\"altitude\":0},{\"latitude\":-44.25406075319277,\"longitude\":-73.87848493556285,\"altitude\":0},{\"latitude\":-44.25365719724405,\"longitude\":-73.87963187352432,\"altitude\":0},{\"latitude\":-44.25333123707977,\"longitude\":-73.88061855516179,\"altitude\":0},{\"latitude\":-44.253469409539655,\"longitude\":-73.88156953848221,\"altitude\":0},{\"latitude\":-44.2532388433049,\"longitude\":-73.8824124038421,\"altitude\":0},{\"latitude\":-44.2527556616664,\"longitude\":-73.8831813504743,\"altitude\":0},{\"latitude\":-44.25196013300199,\"longitude\":-73.88372694927966,\"altitude\":0},{\"latitude\":-44.25077595861873,\"longitude\":-73.8836342909417,\"altitude\":0},{\"latitude\":-44.25040568087353,\"longitude\":-73.88316612399649,\"altitude\":0},{\"latitude\":-44.249951563564714,\"longitude\":-73.8821225004358,\"altitude\":0},{\"latitude\":-44.24988475224743,\"longitude\":-73.88167108765343,\"altitude\":0},{\"latitude\":-44.24977403941848,\"longitude\":-73.88124416778223,\"altitude\":0},{\"latitude\":-44.24978617967399,\"longitude\":-73.88113177377221,\"altitude\":0},{\"latitude\":-44.24985513984771,\"longitude\":-73.88113113093557,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 5740,
        "wires": [
            [
                "8d4bb9816b689a55"
            ]
        ]
    },
    {
        "id": "8d4bb9816b689a55",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 5740,
        "wires": [
            [
                "f352bbbf5d9ccfc2"
            ]
        ]
    },
    {
        "id": "f352bbbf5d9ccfc2",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "168",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Luna2;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Luna2\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 5740,
        "wires": [
            [
                "0aa9449e864e2037"
            ]
        ]
    },
    {
        "id": "0aa9449e864e2037",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 5740,
        "wires": [
            [
                "fda1711553d7b444"
            ]
        ]
    },
    {
        "id": "fda1711553d7b444",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 5740,
        "wires": []
    },
    {
        "id": "1814746e2adb8e74",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT BETECOI (FALTA AGREGAR ZONA)",
        "info": "",
        "x": 230,
        "y": 5780,
        "wires": []
    },
    {
        "id": "65473bbcb79e2fa1",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Luna2\":{\"codigo_centro\":\"168\",\"Modulo100\":{\"id\":\"ac4a5b41-2a1c-4a47-65d5-a0781e66416f\",\"name\":\"Modulo 100\",\"vertices\":[{\"latitude\":-44.25046599032872,\"longitude\":-73.88100799045867,\"altitude\":0},{\"latitude\":-44.250227013277595,\"longitude\":-73.87792199989678,\"altitude\":0},{\"latitude\":-44.24967400196716,\"longitude\":-73.87800003490004,\"altitude\":0},{\"latitude\":-44.24990099546727,\"longitude\":-73.88109101606366,\"altitude\":0},{\"latitude\":-44.25046599032872,\"longitude\":-73.88100799045867,\"altitude\":0}]},\"Modulo200\":{\"id\":\"45c1671c-5365-4b87-48ff-a5ee55d0032c\",\"name\":\"Modulo 200\",\"vertices\":[{\"latitude\":-44.2505170103974,\"longitude\":-73.87790003584728,\"altitude\":0},{\"latitude\":-44.25106700495294,\"longitude\":-73.87779500175904,\"altitude\":0},{\"latitude\":-44.25129799523121,\"longitude\":-73.8813230187509,\"altitude\":0},{\"latitude\":-44.25073700093916,\"longitude\":-73.88137600616687,\"altitude\":0},{\"latitude\":-44.2505170103974,\"longitude\":-73.87790003584728,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"1de453f2-0ebb-4230-796c-4b637ed70e8b\",\"name\":\"Zona 2 Interior\",\"vertices\":[{\"latitude\":-44.249522139575554,\"longitude\":-73.87781297042386,\"altitude\":0},{\"latitude\":-44.25026329595579,\"longitude\":-73.87772745310826,\"altitude\":0},{\"latitude\":-44.250525793425915,\"longitude\":-73.8811034096137,\"altitude\":0},{\"latitude\":-44.25069354133289,\"longitude\":-73.88133705354379,\"altitude\":0},{\"latitude\":-44.250456541323686,\"longitude\":-73.87769946291462,\"altitude\":0},{\"latitude\":-44.25119392344685,\"longitude\":-73.8775907991004,\"altitude\":0},{\"latitude\":-44.25184038145167,\"longitude\":-73.87600335774944,\"altitude\":0},{\"latitude\":-44.25019576904124,\"longitude\":-73.87555943093946,\"altitude\":0},{\"latitude\":-44.248803838747044,\"longitude\":-73.87648530712063,\"altitude\":0},{\"latitude\":-44.24833467401397,\"longitude\":-73.87773977475463,\"altitude\":0},{\"latitude\":-44.24845027243634,\"longitude\":-73.87978894731862,\"altitude\":0},{\"latitude\":-44.24925081451032,\"longitude\":-73.88090548797196,\"altitude\":0},{\"latitude\":-44.24980812337161,\"longitude\":-73.88125770938039,\"altitude\":0},{\"latitude\":-44.25079459153637,\"longitude\":-73.88234352999487,\"altitude\":0},{\"latitude\":-44.25203033777994,\"longitude\":-73.88213416950987,\"altitude\":0},{\"latitude\":-44.252674161296845,\"longitude\":-73.88153710062144,\"altitude\":0},{\"latitude\":-44.25303393865824,\"longitude\":-73.8792775552008,\"altitude\":0},{\"latitude\":-44.252649997110645,\"longitude\":-73.87739547476073,\"altitude\":0},{\"latitude\":-44.25184038145167,\"longitude\":-73.87600335774944,\"altitude\":0},{\"latitude\":-44.25119392344685,\"longitude\":-73.8775907991004,\"altitude\":0},{\"latitude\":-44.251435053914385,\"longitude\":-73.8814742988256,\"altitude\":0},{\"latitude\":-44.25073599168956,\"longitude\":-73.88155599299103,\"altitude\":0},{\"latitude\":-44.25042758091364,\"longitude\":-73.88111114301414,\"altitude\":0},{\"latitude\":-44.24988830894638,\"longitude\":-73.88117206945219,\"altitude\":0},{\"latitude\":-44.24980812337161,\"longitude\":-73.88125770938039,\"altitude\":0},{\"latitude\":-44.24975639435191,\"longitude\":-73.88119285784225,\"altitude\":0},{\"latitude\":-44.249522139575554,\"longitude\":-73.87781297042386,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"3cc88abe-5031-4799-4aee-3ff56c3c2260\",\"name\":\"Zona 1 Exterior\",\"vertices\":[{\"latitude\":-44.24979490843859,\"longitude\":-73.88124935745175,\"altitude\":0},{\"latitude\":-44.24925081451032,\"longitude\":-73.88090548797196,\"altitude\":0},{\"latitude\":-44.24845027243634,\"longitude\":-73.87978894731862,\"altitude\":0},{\"latitude\":-44.24833467401397,\"longitude\":-73.87773977475463,\"altitude\":0},{\"latitude\":-44.248803838747044,\"longitude\":-73.87648530712063,\"altitude\":0},{\"latitude\":-44.25019576904124,\"longitude\":-73.87555943093946,\"altitude\":0},{\"latitude\":-44.25184038145167,\"longitude\":-73.87600335774944,\"altitude\":0},{\"latitude\":-44.252649997110645,\"longitude\":-73.87739547476073,\"altitude\":0},{\"latitude\":-44.25303393865824,\"longitude\":-73.8792775552008,\"altitude\":0},{\"latitude\":-44.252674161296845,\"longitude\":-73.88153710062144,\"altitude\":0},{\"latitude\":-44.25203033777994,\"longitude\":-73.88213416950987,\"altitude\":0},{\"latitude\":-44.25079459153637,\"longitude\":-73.88234352999487,\"altitude\":0},{\"latitude\":-44.24980812337161,\"longitude\":-73.88125770938039,\"altitude\":0},{\"latitude\":-44.25004567857446,\"longitude\":-73.88213103647008,\"altitude\":0},{\"latitude\":-44.25063695757448,\"longitude\":-73.8830461784156,\"altitude\":0},{\"latitude\":-44.251536395381024,\"longitude\":-73.88332660651803,\"altitude\":0},{\"latitude\":-44.25261304694918,\"longitude\":-73.88309010407097,\"altitude\":0},{\"latitude\":-44.25335212376106,\"longitude\":-73.88199829256801,\"altitude\":0},{\"latitude\":-44.2533448573746,\"longitude\":-73.8806445237499,\"altitude\":0},{\"latitude\":-44.25359519791338,\"longitude\":-73.87962821562269,\"altitude\":0},{\"latitude\":-44.25394496050412,\"longitude\":-73.87874308785088,\"altitude\":0},{\"latitude\":-44.25390100055375,\"longitude\":-73.87757006028306,\"altitude\":0},{\"latitude\":-44.25366427166943,\"longitude\":-73.87616309382996,\"altitude\":0},{\"latitude\":-44.252682604988955,\"longitude\":-73.87483883887757,\"altitude\":0},{\"latitude\":-44.25095791873619,\"longitude\":-73.87380397575872,\"altitude\":0},{\"latitude\":-44.24867707667378,\"longitude\":-73.87414037974646,\"altitude\":0},{\"latitude\":-44.247498934349785,\"longitude\":-73.87574908406779,\"altitude\":0},{\"latitude\":-44.24741500200033,\"longitude\":-73.87778568801991,\"altitude\":0},{\"latitude\":-44.24788544538143,\"longitude\":-73.87992599826752,\"altitude\":0},{\"latitude\":-44.24873145243171,\"longitude\":-73.88089185861938,\"altitude\":0},{\"latitude\":-44.24979490843859,\"longitude\":-73.88124935745175,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"81d16de3-76cf-4746-79f4-6acccd969185\",\"name\":\"Active tracking\",\"vertices\":[{\"latitude\":-44.24985513984771,\"longitude\":-73.88113113093557,\"altitude\":0},{\"latitude\":-44.25045246863098,\"longitude\":-73.88108316313348,\"altitude\":0},{\"latitude\":-44.250722321048904,\"longitude\":-73.88143373817279,\"altitude\":0},{\"latitude\":-44.25134528292231,\"longitude\":-73.88136685328107,\"altitude\":0},{\"latitude\":-44.25111217260739,\"longitude\":-73.8776876233986,\"altitude\":0},{\"latitude\":-44.24960460219828,\"longitude\":-73.87790959038257,\"altitude\":0},{\"latitude\":-44.24985513984771,\"longitude\":-73.88113113093557,\"altitude\":0},{\"latitude\":-44.24977403941848,\"longitude\":-73.88124416778223,\"altitude\":0},{\"latitude\":-44.24970844605163,\"longitude\":-73.8811824207956,\"altitude\":0},{\"latitude\":-44.24887167463181,\"longitude\":-73.88138330840604,\"altitude\":0},{\"latitude\":-44.24799481589638,\"longitude\":-73.88060376512513,\"altitude\":0},{\"latitude\":-44.24761443337176,\"longitude\":-73.88022493238007,\"altitude\":0},{\"latitude\":-44.24740110655667,\"longitude\":-73.87923718815814,\"altitude\":0},{\"latitude\":-44.2470542688143,\"longitude\":-73.87797481154931,\"altitude\":0},{\"latitude\":-44.24714597798051,\"longitude\":-73.8767163581121,\"altitude\":0},{\"latitude\":-44.247372603090156,\"longitude\":-73.87526207846147,\"altitude\":0},{\"latitude\":-44.248036599014824,\"longitude\":-73.87391101520917,\"altitude\":0},{\"latitude\":-44.248938847279554,\"longitude\":-73.87350707111605,\"altitude\":0},{\"latitude\":-44.2508410693928,\"longitude\":-73.87342497222319,\"altitude\":0},{\"latitude\":-44.25171243784209,\"longitude\":-73.87397610687731,\"altitude\":0},{\"latitude\":-44.252837204414654,\"longitude\":-73.87470359303649,\"altitude\":0},{\"latitude\":-44.253603574573795,\"longitude\":-73.87568113230816,\"altitude\":0},{\"latitude\":-44.254320726224684,\"longitude\":-73.87703514461208,\"altitude\":0},{\"latitude\":-44.25406075319277,\"longitude\":-73.87848493556285,\"altitude\":0},{\"latitude\":-44.25365719724405,\"longitude\":-73.87963187352432,\"altitude\":0},{\"latitude\":-44.25333123707977,\"longitude\":-73.88061855516179,\"altitude\":0},{\"latitude\":-44.253469409539655,\"longitude\":-73.88156953848221,\"altitude\":0},{\"latitude\":-44.2532388433049,\"longitude\":-73.8824124038421,\"altitude\":0},{\"latitude\":-44.2527556616664,\"longitude\":-73.8831813504743,\"altitude\":0},{\"latitude\":-44.25196013300199,\"longitude\":-73.88372694927966,\"altitude\":0},{\"latitude\":-44.25077595861873,\"longitude\":-73.8836342909417,\"altitude\":0},{\"latitude\":-44.25040568087353,\"longitude\":-73.88316612399649,\"altitude\":0},{\"latitude\":-44.249951563564714,\"longitude\":-73.8821225004358,\"altitude\":0},{\"latitude\":-44.24988475224743,\"longitude\":-73.88167108765343,\"altitude\":0},{\"latitude\":-44.24977403941848,\"longitude\":-73.88124416778223,\"altitude\":0},{\"latitude\":-44.24978617967399,\"longitude\":-73.88113177377221,\"altitude\":0},{\"latitude\":-44.24985513984771,\"longitude\":-73.88113113093557,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 5820,
        "wires": [
            [
                "adce07e2cf3bb621"
            ]
        ]
    },
    {
        "id": "adce07e2cf3bb621",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 5820,
        "wires": [
            [
                "edef8b3ba664c265"
            ]
        ]
    },
    {
        "id": "edef8b3ba664c265",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "169",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Luna2;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Luna2\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 5820,
        "wires": [
            [
                "6a3f17bf3bbeccf7"
            ]
        ]
    },
    {
        "id": "6a3f17bf3bbeccf7",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 5820,
        "wires": [
            [
                "cc3b6f8b0d23283d"
            ]
        ]
    },
    {
        "id": "cc3b6f8b0d23283d",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 5820,
        "wires": []
    },
    {
        "id": "76ef609f60f7e215",
        "type": "comment",
        "z": "90b8bd624d969ce7",
        "name": "INSERT VALVERDE 1",
        "info": "",
        "x": 160,
        "y": 5860,
        "wires": []
    },
    {
        "id": "a2189e3e426009cf",
        "type": "inject",
        "z": "90b8bd624d969ce7",
        "name": "Insertar Mongo",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Valverde1\":{\"codigo_centro\":\"170\",\"Modulo100\":{\"id\":\"b9cc89ae-1c4f-469d-7b9d-b97f9dfabc56\",\"name\":\"mod_100\",\"vertices\":[{\"latitude\":-44.32865789351037,\"longitude\":-73.93512558671709,\"altitude\":0},{\"latitude\":-44.328138940951916,\"longitude\":-73.93483162897569,\"altitude\":0},{\"latitude\":-44.32770133745433,\"longitude\":-73.93673119943236,\"altitude\":0},{\"latitude\":-44.32821085511158,\"longitude\":-73.9369519446445,\"altitude\":0},{\"latitude\":-44.32865789351037,\"longitude\":-73.93512558671709,\"altitude\":0}]},\"Modulo200\":{\"id\":\"e931ef57-afea-42e7-5c23-eb4a50f16f47\",\"name\":\"mod_200\",\"vertices\":[{\"latitude\":-44.329510869725155,\"longitude\":-73.93546512733836,\"altitude\":0},{\"latitude\":-44.32897739992496,\"longitude\":-73.93522182136783,\"altitude\":0},{\"latitude\":-44.328581135414126,\"longitude\":-73.93712497856353,\"altitude\":0},{\"latitude\":-44.329106170458864,\"longitude\":-73.93738247207565,\"altitude\":0},{\"latitude\":-44.329510869725155,\"longitude\":-73.93546512733836,\"altitude\":0}]},\"INTERIOR\":{\"id\":\"597839fd-a351-429d-5c97-2099a91aec8f\",\"name\":\"interior\",\"vertices\":[{\"latitude\":-44.329138727634614,\"longitude\":-73.93407436315894,\"altitude\":0},{\"latitude\":-44.32882513333817,\"longitude\":-73.93507439841942,\"altitude\":0},{\"latitude\":-44.32809273163542,\"longitude\":-73.9347272554015,\"altitude\":0},{\"latitude\":-44.32763385576131,\"longitude\":-73.93677845822864,\"altitude\":0},{\"latitude\":-44.32824169444843,\"longitude\":-73.93703611873703,\"altitude\":0},{\"latitude\":-44.32869620179424,\"longitude\":-73.93515354046322,\"altitude\":0},{\"latitude\":-44.32889956626317,\"longitude\":-73.93523319388775,\"altitude\":0},{\"latitude\":-44.32849295464075,\"longitude\":-73.93716906829783,\"altitude\":0},{\"latitude\":-44.329146364401005,\"longitude\":-73.93750075313329,\"altitude\":0},{\"latitude\":-44.329584383033946,\"longitude\":-73.93540995999733,\"altitude\":0},{\"latitude\":-44.32882513333817,\"longitude\":-73.93507439841942,\"altitude\":0},{\"latitude\":-44.329138968116546,\"longitude\":-73.93407437945716,\"altitude\":0},{\"latitude\":-44.32975478186659,\"longitude\":-73.93483941547692,\"altitude\":0},{\"latitude\":-44.33022407541416,\"longitude\":-73.93588228227352,\"altitude\":0},{\"latitude\":-44.32994617866644,\"longitude\":-73.93753334145211,\"altitude\":0},{\"latitude\":-44.329406389452046,\"longitude\":-73.93842569070088,\"altitude\":0},{\"latitude\":-44.32826742989049,\"longitude\":-73.93807701293055,\"altitude\":0},{\"latitude\":-44.32742389337323,\"longitude\":-73.93758162827494,\"altitude\":0},{\"latitude\":-44.3270270748252,\"longitude\":-73.9366833240982,\"altitude\":0},{\"latitude\":-44.32749574915298,\"longitude\":-73.93459391970377,\"altitude\":0},{\"latitude\":-44.32808873185602,\"longitude\":-73.93412403360175,\"altitude\":0},{\"latitude\":-44.329138727634614,\"longitude\":-73.93407436315894,\"altitude\":0}]},\"EXTERIOR\":{\"id\":\"23eacd08-5e0e-481f-5fd6-be407f07c32b\",\"name\":\"exterior\",\"vertices\":[{\"latitude\":-44.32912768853287,\"longitude\":-73.93407332475832,\"altitude\":0},{\"latitude\":-44.327428075467374,\"longitude\":-73.93324308964675,\"altitude\":0},{\"latitude\":-44.326444084839785,\"longitude\":-73.93403162948341,\"altitude\":0},{\"latitude\":-44.32611258246232,\"longitude\":-73.93570836170994,\"altitude\":0},{\"latitude\":-44.32588340573914,\"longitude\":-73.93774469531841,\"altitude\":0},{\"latitude\":-44.32691642704305,\"longitude\":-73.93957704824096,\"altitude\":0},{\"latitude\":-44.329156741645164,\"longitude\":-73.94051204317374,\"altitude\":0},{\"latitude\":-44.330640569346436,\"longitude\":-73.93912194244508,\"altitude\":0},{\"latitude\":-44.33122339316212,\"longitude\":-73.93624535278848,\"altitude\":0},{\"latitude\":-44.33090649114732,\"longitude\":-73.93489849616533,\"altitude\":0},{\"latitude\":-44.3291503486989,\"longitude\":-73.93408469737963,\"altitude\":0},{\"latitude\":-44.329748618628386,\"longitude\":-73.93483147997844,\"altitude\":0},{\"latitude\":-44.330223750082205,\"longitude\":-73.93587347755053,\"altitude\":0},{\"latitude\":-44.32994922159819,\"longitude\":-73.93752803887473,\"altitude\":0},{\"latitude\":-44.32940792305442,\"longitude\":-73.93841880881598,\"altitude\":0},{\"latitude\":-44.32826714115744,\"longitude\":-73.9380798336617,\"altitude\":0},{\"latitude\":-44.327428757994205,\"longitude\":-73.937583936816,\"altitude\":0},{\"latitude\":-44.327024503801766,\"longitude\":-73.93668361518742,\"altitude\":0},{\"latitude\":-44.32749234780616,\"longitude\":-73.93459886730493,\"altitude\":0},{\"latitude\":-44.3280928915649,\"longitude\":-73.93412564247922,\"altitude\":0},{\"latitude\":-44.32912768853287,\"longitude\":-73.93407332475832,\"altitude\":0}]},\"ACTIVETRACKING\":{\"id\":\"77add245-9fb5-4dc4-5adf-5bcf1662e808\",\"name\":\"Active tracking\",\"vertices\":[{\"latitude\":-44.32914366426278,\"longitude\":-73.93407746387939,\"altitude\":0},{\"latitude\":-44.3309075146073,\"longitude\":-73.93489564499465,\"altitude\":0},{\"latitude\":-44.33122007112335,\"longitude\":-73.93624658121155,\"altitude\":0},{\"latitude\":-44.33063348035998,\"longitude\":-73.93912392711637,\"altitude\":0},{\"latitude\":-44.329147759876996,\"longitude\":-73.9405078297978,\"altitude\":0},{\"latitude\":-44.326911445330715,\"longitude\":-73.93957564510278,\"altitude\":0},{\"latitude\":-44.325879933204796,\"longitude\":-73.93775122477706,\"altitude\":0},{\"latitude\":-44.3261098042339,\"longitude\":-73.935702906721,\"altitude\":0},{\"latitude\":-44.32644135669417,\"longitude\":-73.93402799324528,\"altitude\":0},{\"latitude\":-44.327432488211876,\"longitude\":-73.93324312400553,\"altitude\":0},{\"latitude\":-44.32914051979846,\"longitude\":-73.93407539859963,\"altitude\":0},{\"latitude\":-44.32880700083399,\"longitude\":-73.93506110715823,\"altitude\":0},{\"latitude\":-44.32809480723338,\"longitude\":-73.93472493786277,\"altitude\":0},{\"latitude\":-44.32763161933196,\"longitude\":-73.93678147429173,\"altitude\":0},{\"latitude\":-44.32824004249753,\"longitude\":-73.9370365800554,\"altitude\":0},{\"latitude\":-44.32870356300794,\"longitude\":-73.93514436955586,\"altitude\":0},{\"latitude\":-44.328927812307384,\"longitude\":-73.93524178885754,\"altitude\":0},{\"latitude\":-44.3284874626587,\"longitude\":-73.93717555087623,\"altitude\":0},{\"latitude\":-44.32915367511385,\"longitude\":-73.9375048979256,\"altitude\":0},{\"latitude\":-44.329583930702434,\"longitude\":-73.93541139896729,\"altitude\":0},{\"latitude\":-44.32882868812243,\"longitude\":-73.93507549079995,\"altitude\":0},{\"latitude\":-44.32914366426278,\"longitude\":-73.93407746387939,\"altitude\":0}]}}}",
        "payloadType": "json",
        "x": 160,
        "y": 5900,
        "wires": [
            [
                "6eb96cf49a76de44"
            ]
        ]
    },
    {
        "id": "6eb96cf49a76de44",
        "type": "json",
        "z": "90b8bd624d969ce7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 5900,
        "wires": [
            [
                "561de0604efef858"
            ]
        ]
    },
    {
        "id": "561de0604efef858",
        "type": "function",
        "z": "90b8bd624d969ce7",
        "name": "170",
        "func": "// Obtén el JSON del mensaje\nvar json = msg.payload.Valverde1;\n\n// Inicializa un objeto para almacenar los resultados\nvar resultados = {};\n\n// Agrega el campo _id al objeto de resultados si está presente en el mensaje\nif (msg.payload._id) {\n    resultados[\"_id\"] = msg.payload._id;\n}\n\n// Agrega el campo \"codigo centro\" y \"nombre centro\" al objeto de resultados\nresultados[\"codigo_centro\"] = json.codigo_centro;\nresultados[\"nombre_centro\"] = \"Valverde1\";\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo100.vertices);\n\n// Agrega las coordenadas de Modulo100 al objeto de resultados\nresultados[\"coord_m_100\"] = convertirCoordenadas(json.Modulo200.vertices);\n\n// Agrega las coordenadas de INTERIOR al objeto de resultados\nresultados[\"coord_z_int\"] = convertirCoordenadas(json.INTERIOR.vertices);\n\n// Agrega las coordenadas de EXTERIOR al objeto de resultados\nresultados[\"coord_z_ext\"] = convertirCoordenadas(json.EXTERIOR.vertices);\n\n// Agrega las coordenadas de ACTIVETRACKING al objeto de resultados\nresultados[\"coord_z_act\"] = convertirCoordenadas(json.ACTIVETRACKING.vertices);\n\n\n// Función para convertir las coordenadas\nfunction convertirCoordenadas(coordenadas) {\n    return coordenadas.map(function (coordenada) {\n        return {\n            lat: coordenada.latitude,\n            lng: coordenada.longitude\n        };\n    });\n}\n\n// Crea el mensaje a enviar con los resultados\nmsg.payload = resultados;\n\n// Envía el mensaje\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 5900,
        "wires": [
            [
                "c416c3d1710b66e3"
            ]
        ]
    },
    {
        "id": "c416c3d1710b66e3",
        "type": "mongodb2 in",
        "z": "90b8bd624d969ce7",
        "service": "_ext_",
        "configNode": "badfc10f611b08ef",
        "name": "",
        "collection": "seguridad_zona",
        "operation": "insert",
        "x": 710,
        "y": 5900,
        "wires": [
            [
                "5b19d62c5be3520c"
            ]
        ]
    },
    {
        "id": "5b19d62c5be3520c",
        "type": "debug",
        "z": "90b8bd624d969ce7",
        "name": "Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 5900,
        "wires": []
    },
    {
        "id": "dae0f5a451e652f6",
        "type": "http in",
        "z": "7b10dc16446eb4a7",
        "name": "NIO",
        "url": "/api/spotter/estacionamiento",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 300,
        "wires": [
            [
                "20cc4a9bcf97ce60",
                "15cc48cef224c1dc"
            ]
        ]
    },
    {
        "id": "20cc4a9bcf97ce60",
        "type": "function",
        "z": "7b10dc16446eb4a7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 300,
        "wires": [
            [
                "8ab080a83f38e2c6"
            ]
        ]
    },
    {
        "id": "1a2ed97e1ff6fe48",
        "type": "switch",
        "z": "7b10dc16446eb4a7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 300,
        "wires": [
            [
                "023ac4c199af51d2",
                "3481746aee997799"
            ],
            [
                "023ac4c199af51d2",
                "2d2354abf5fdc43b",
                "9dfa33ae32c340aa",
                "3481746aee997799"
            ]
        ]
    },
    {
        "id": "2d2354abf5fdc43b",
        "type": "mongodb-collection",
        "z": "7b10dc16446eb4a7",
        "name": "insert_seguridad",
        "config": "90e0dc7690ddd45f",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1770,
        "y": 220,
        "wires": [
            [
                "0d6b996b03cb958f"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "e46d5f999898d0fa",
        "type": "function",
        "z": "7b10dc16446eb4a7",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 300,
        "wires": [
            [
                "f17d9510ac370b2a"
            ]
        ]
    },
    {
        "id": "f17d9510ac370b2a",
        "type": "mongodb-collection",
        "z": "7b10dc16446eb4a7",
        "name": "findDB",
        "config": "90e0dc7690ddd45f",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 890,
        "y": 300,
        "wires": [
            [
                "b060d67694caf3d4"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "023ac4c199af51d2",
        "type": "mongodb-collection",
        "z": "7b10dc16446eb4a7",
        "name": "insert_seguridad_detalle",
        "config": "90e0dc7690ddd45f",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1750,
        "y": 180,
        "wires": [
            [
                "0d6b996b03cb958f"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "df8beee45a1b9c81",
        "type": "mqtt out",
        "z": "7b10dc16446eb4a7",
        "name": "checkBroker",
        "topic": "mqtt_ast_seguridad",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 390,
        "y": 160,
        "wires": []
    },
    {
        "id": "099aec30f6b3f28f",
        "type": "inject",
        "z": "7b10dc16446eb4a7",
        "name": "conectar",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "df8beee45a1b9c81"
            ]
        ]
    },
    {
        "id": "24e2de90b45d9fed",
        "type": "inject",
        "z": "7b10dc16446eb4a7",
        "name": "desconectar",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "df8beee45a1b9c81"
            ]
        ]
    },
    {
        "id": "1f47240a90e983c0",
        "type": "status",
        "z": "7b10dc16446eb4a7",
        "name": "",
        "scope": [
            "df8beee45a1b9c81"
        ],
        "x": 580,
        "y": 160,
        "wires": [
            [
                "0e8122a7f047ee1c"
            ]
        ]
    },
    {
        "id": "0e8122a7f047ee1c",
        "type": "change",
        "z": "7b10dc16446eb4a7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mqtt_status",
                "pt": "flow",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "b060d67694caf3d4",
        "type": "function",
        "z": "7b10dc16446eb4a7",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 300,
        "wires": [
            [
                "13e5964ff94cc083"
            ]
        ]
    },
    {
        "id": "13e5964ff94cc083",
        "type": "switch",
        "z": "7b10dc16446eb4a7",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1210,
        "y": 300,
        "wires": [
            [
                "2028e4c03933e71c"
            ],
            [
                "2028e4c03933e71c"
            ]
        ]
    },
    {
        "id": "b9cd62f62dd998d5",
        "type": "mqtt out",
        "z": "7b10dc16446eb4a7",
        "name": "envioMQTT",
        "topic": "mqtt_ast_seguridad",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 1950,
        "y": 360,
        "wires": []
    },
    {
        "id": "8ab080a83f38e2c6",
        "type": "change",
        "z": "7b10dc16446eb4a7",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "001",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Ast-Networks",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Estacionamiento",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "102",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 300,
        "wires": [
            [
                "f7ba974ce091021e"
            ]
        ]
    },
    {
        "id": "3481746aee997799",
        "type": "change",
        "z": "7b10dc16446eb4a7",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1790,
        "y": 320,
        "wires": [
            [
                "b9cd62f62dd998d5"
            ]
        ]
    },
    {
        "id": "9dfa33ae32c340aa",
        "type": "change",
        "z": "7b10dc16446eb4a7",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1780,
        "y": 360,
        "wires": [
            [
                "b9cd62f62dd998d5"
            ]
        ]
    },
    {
        "id": "0d6b996b03cb958f",
        "type": "debug",
        "z": "7b10dc16446eb4a7",
        "name": "debug 17",
        "active": false,
        "tosidebar": false,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1960,
        "y": 200,
        "wires": []
    },
    {
        "id": "15cc48cef224c1dc",
        "type": "debug",
        "z": "7b10dc16446eb4a7",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 260,
        "wires": []
    },
    {
        "id": "bcf13cfea05aeb19",
        "type": "inject",
        "z": "7b10dc16446eb4a7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "conectado 12-09-2023 10:31",
        "payloadType": "str",
        "x": 1810,
        "y": 400,
        "wires": [
            [
                "b9cd62f62dd998d5",
                "a5b4e1314f3cc290"
            ]
        ]
    },
    {
        "id": "a5b4e1314f3cc290",
        "type": "debug",
        "z": "7b10dc16446eb4a7",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 420,
        "wires": []
    },
    {
        "id": "4aab931eaad4ac03",
        "type": "mqtt in",
        "z": "7b10dc16446eb4a7",
        "name": "",
        "topic": "mqtt_ast_seguridad",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9f945835b1447245",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1770,
        "y": 140,
        "wires": [
            [
                "8b7198c65f24ab9c"
            ]
        ]
    },
    {
        "id": "8b7198c65f24ab9c",
        "type": "debug",
        "z": "7b10dc16446eb4a7",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 140,
        "wires": []
    },
    {
        "id": "2028e4c03933e71c",
        "type": "change",
        "z": "7b10dc16446eb4a7",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 300,
        "wires": [
            [
                "1a2ed97e1ff6fe48"
            ]
        ]
    },
    {
        "id": "f7ba974ce091021e",
        "type": "function",
        "z": "7b10dc16446eb4a7",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'a8d0c471-9893-4d6c-7bb3-d9b3fccb3c32') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '294ecf99-e935-4e87-7fab-3dd224f00be4') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '1bae8db5-b444-4e1c-5092-e48968806e8b') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil,\n        });\n    }\n}\n\nreturn [newMsg];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 570,
        "y": 300,
        "wires": [
            [
                "e46d5f999898d0fa"
            ]
        ]
    },
    {
        "id": "8006c76738dd36bd",
        "type": "comment",
        "z": "7b10dc16446eb4a7",
        "name": "ESTACIONAMIENTO 🐟 🟢",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "96b48d5895241801",
        "type": "mongodb-collection",
        "z": "7b10dc16446eb4a7",
        "name": "insert_seguridad_movil",
        "config": "90e0dc7690ddd45f",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1750,
        "y": 260,
        "wires": [
            [
                "0d6b996b03cb958f"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "6d476ffa22cc93ac",
        "type": "comment",
        "z": "4764728e59dc3fdd",
        "name": "PIREN🐟 🟢",
        "info": "",
        "x": 130,
        "y": 60,
        "wires": []
    },
    {
        "id": "e22b1572738f2fbe",
        "type": "http in",
        "z": "4764728e59dc3fdd",
        "name": "NIO",
        "url": "/api/spotter/piren",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "a153d1d530786412",
                "92878c2c4a32f125",
                "c47708366120e01b"
            ]
        ]
    },
    {
        "id": "a153d1d530786412",
        "type": "function",
        "z": "4764728e59dc3fdd",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 280,
        "wires": [
            [
                "63139b23cd2ec8b8"
            ]
        ]
    },
    {
        "id": "e8f1ce703b21d083",
        "type": "change",
        "z": "4764728e59dc3fdd",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 580,
        "wires": [
            [
                "dee10586ac83d8b5"
            ]
        ]
    },
    {
        "id": "dee10586ac83d8b5",
        "type": "switch",
        "z": "4764728e59dc3fdd",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 580,
        "wires": [
            [
                "afeb576898bb4046",
                "990de4f52c5c6cd6"
            ],
            [
                "afeb576898bb4046",
                "85902748b3ec05ed",
                "1d3111623c7244ab",
                "990de4f52c5c6cd6",
                "ea23ebc895a67ec5"
            ]
        ]
    },
    {
        "id": "85902748b3ec05ed",
        "type": "mongodb-collection",
        "z": "4764728e59dc3fdd",
        "name": "insert_seguridad",
        "config": "aea86e27262eaf28",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 990,
        "y": 520,
        "wires": [
            [
                "55fa68e226a992df"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "8f9d40709e9848c6",
        "type": "function",
        "z": "4764728e59dc3fdd",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 280,
        "wires": [
            [
                "aaaf88cda57b3125"
            ]
        ]
    },
    {
        "id": "aaaf88cda57b3125",
        "type": "mongodb-collection",
        "z": "4764728e59dc3fdd",
        "name": "findDB",
        "config": "aea86e27262eaf28",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 910,
        "y": 280,
        "wires": [
            [
                "352956c6b195660d"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "afeb576898bb4046",
        "type": "mongodb-collection",
        "z": "4764728e59dc3fdd",
        "name": "insert_seguridad_detalle",
        "config": "aea86e27262eaf28",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 970,
        "y": 480,
        "wires": [
            [
                "55fa68e226a992df"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "72fb3bc2cdaf30ab",
        "type": "mqtt out",
        "z": "4764728e59dc3fdd",
        "name": "checkBroker",
        "topic": "mqtt_gmt_seguridad",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1551226ba6a8882c",
        "x": 630,
        "y": 120,
        "wires": []
    },
    {
        "id": "735e52ac483ccda7",
        "type": "inject",
        "z": "4764728e59dc3fdd",
        "name": "conectar",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 460,
        "y": 100,
        "wires": [
            [
                "72fb3bc2cdaf30ab"
            ]
        ]
    },
    {
        "id": "a0811a62835625a0",
        "type": "inject",
        "z": "4764728e59dc3fdd",
        "name": "desconectar",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 450,
        "y": 140,
        "wires": [
            [
                "72fb3bc2cdaf30ab"
            ]
        ]
    },
    {
        "id": "983862d4ee1682da",
        "type": "status",
        "z": "4764728e59dc3fdd",
        "name": "",
        "scope": [
            "72fb3bc2cdaf30ab"
        ],
        "x": 800,
        "y": 120,
        "wires": [
            [
                "62ab180a2c0a5c2c"
            ]
        ]
    },
    {
        "id": "62ab180a2c0a5c2c",
        "type": "change",
        "z": "4764728e59dc3fdd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mqtt_status",
                "pt": "flow",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "352956c6b195660d",
        "type": "function",
        "z": "4764728e59dc3fdd",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 280,
        "wires": [
            [
                "94823c8d4f87d951"
            ]
        ]
    },
    {
        "id": "94823c8d4f87d951",
        "type": "switch",
        "z": "4764728e59dc3fdd",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 580,
        "wires": [
            [
                "e8f1ce703b21d083"
            ],
            [
                "e8f1ce703b21d083"
            ]
        ]
    },
    {
        "id": "cec8b7e219425392",
        "type": "mqtt out",
        "z": "4764728e59dc3fdd",
        "name": "envioMQTT",
        "topic": "mqtt_gmt_seguridad",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1551226ba6a8882c",
        "x": 1170,
        "y": 660,
        "wires": []
    },
    {
        "id": "63139b23cd2ec8b8",
        "type": "change",
        "z": "4764728e59dc3fdd",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "002",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "GMT",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Piren",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "101",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 280,
        "wires": [
            [
                "deb492c015d7b96d"
            ]
        ]
    },
    {
        "id": "990de4f52c5c6cd6",
        "type": "change",
        "z": "4764728e59dc3fdd",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 620,
        "wires": [
            [
                "cec8b7e219425392"
            ]
        ]
    },
    {
        "id": "1d3111623c7244ab",
        "type": "change",
        "z": "4764728e59dc3fdd",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 660,
        "wires": [
            [
                "cec8b7e219425392"
            ]
        ]
    },
    {
        "id": "55fa68e226a992df",
        "type": "debug",
        "z": "4764728e59dc3fdd",
        "name": "debug 18",
        "active": false,
        "tosidebar": false,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 520,
        "wires": []
    },
    {
        "id": "92878c2c4a32f125",
        "type": "debug",
        "z": "4764728e59dc3fdd",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 260,
        "y": 240,
        "wires": []
    },
    {
        "id": "3d4d0f6be10c630b",
        "type": "inject",
        "z": "4764728e59dc3fdd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "conectado 16-08-2023 09:22",
        "payloadType": "str",
        "x": 1030,
        "y": 700,
        "wires": [
            [
                "cec8b7e219425392",
                "932940c2a07d0742"
            ]
        ]
    },
    {
        "id": "932940c2a07d0742",
        "type": "debug",
        "z": "4764728e59dc3fdd",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 720,
        "wires": []
    },
    {
        "id": "1f188463dfe72e58",
        "type": "mqtt in",
        "z": "4764728e59dc3fdd",
        "name": "",
        "topic": "mqtt_gmt_seguridad",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1551226ba6a8882c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 990,
        "y": 420,
        "wires": [
            [
                "6a545f4bd5193973"
            ]
        ]
    },
    {
        "id": "6a545f4bd5193973",
        "type": "debug",
        "z": "4764728e59dc3fdd",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 420,
        "wires": []
    },
    {
        "id": "deb492c015d7b96d",
        "type": "function",
        "z": "4764728e59dc3fdd",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\nvar localSnr = msg.payload.localSnr;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'a8d0c471-9893-4d6c-7bb3-d9b3fccb3c32') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '80a372cf-ded7-439b-6392-d8a758ff3a09') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'fe5b4b7b-7632-48cb-6da4-8b8e7bf66a9e') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_movil',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        \n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil:movil,\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 590,
        "y": 280,
        "wires": [
            [
                "8f9d40709e9848c6"
            ]
        ]
    },
    {
        "id": "c47708366120e01b",
        "type": "debug",
        "z": "4764728e59dc3fdd",
        "name": "debug 232",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 360,
        "wires": []
    },
    {
        "id": "ea23ebc895a67ec5",
        "type": "mongodb-collection",
        "z": "4764728e59dc3fdd",
        "name": "insert_seguridad_movil",
        "config": "aea86e27262eaf28",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 970,
        "y": 560,
        "wires": [
            [
                "55fa68e226a992df"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "8d37c1d93982e6ba",
        "type": "mqtt out",
        "z": "73720112d2633680",
        "name": "checkBroker",
        "topic": "mqtt_mowi_seguridad",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 290,
        "y": 120,
        "wires": []
    },
    {
        "id": "5af1eaedac537b83",
        "type": "inject",
        "z": "73720112d2633680",
        "name": "conectar",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "8d37c1d93982e6ba"
            ]
        ]
    },
    {
        "id": "90f2bebd21972166",
        "type": "inject",
        "z": "73720112d2633680",
        "name": "desconectar",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "8d37c1d93982e6ba"
            ]
        ]
    },
    {
        "id": "732c26ad5ec42431",
        "type": "status",
        "z": "73720112d2633680",
        "name": "",
        "scope": [
            "8d37c1d93982e6ba"
        ],
        "x": 460,
        "y": 120,
        "wires": [
            [
                "ab2c7be7b442de43"
            ]
        ]
    },
    {
        "id": "ab2c7be7b442de43",
        "type": "change",
        "z": "73720112d2633680",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mqtt_status",
                "pt": "flow",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "55ae69a763f3fd38",
        "type": "comment",
        "z": "73720112d2633680",
        "name": "CONEXION MQTT",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "a382bbc43e3af69b",
        "type": "http in",
        "z": "73720112d2633680",
        "name": "NIO",
        "url": "/api/spotter/prueba3",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 320,
        "wires": [
            [
                "2c534c9fcc9f63e6",
                "1d188628187052c1"
            ]
        ]
    },
    {
        "id": "2c534c9fcc9f63e6",
        "type": "function",
        "z": "73720112d2633680",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 320,
        "wires": [
            [
                "390d9799c2a4126a"
            ]
        ]
    },
    {
        "id": "517e7e33e6e5a5d3",
        "type": "function",
        "z": "73720112d2633680",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 320,
        "wires": [
            [
                "42aa1b8904a4285b"
            ]
        ]
    },
    {
        "id": "390d9799c2a4126a",
        "type": "change",
        "z": "73720112d2633680",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Isla-Lola",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "103",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 320,
        "wires": [
            [
                "2142b62f67608d48"
            ]
        ]
    },
    {
        "id": "2142b62f67608d48",
        "type": "function",
        "z": "73720112d2633680",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'bbca809d-850f-4bb0-4715-20cabb701093') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'ba8d7374-de08-45b9-67ba-1044a0d1af72') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'a80b5ad3-a43a-40df-5bf8-1e16fb05ac69') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n        \n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 320,
        "wires": [
            [
                "517e7e33e6e5a5d3"
            ]
        ]
    },
    {
        "id": "a9c8d136b565be0c",
        "type": "comment",
        "z": "73720112d2633680",
        "name": "ISLA-LOLA 🐟 🟢",
        "info": "",
        "x": 110,
        "y": 280,
        "wires": []
    },
    {
        "id": "e18a84278959dddf",
        "type": "change",
        "z": "73720112d2633680",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 800,
        "wires": [
            [
                "68594795be0e798b"
            ]
        ]
    },
    {
        "id": "68594795be0e798b",
        "type": "switch",
        "z": "73720112d2633680",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1230,
        "y": 800,
        "wires": [
            [
                "4639b103597f6573",
                "811388864e12eb96"
            ],
            [
                "4639b103597f6573",
                "1ec622aed63a4659",
                "811388864e12eb96",
                "8987ce8ac7ba7783",
                "427f7810564f00d6"
            ]
        ]
    },
    {
        "id": "8987ce8ac7ba7783",
        "type": "mongodb-collection",
        "z": "73720112d2633680",
        "name": "insert_seguridad",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1550,
        "y": 720,
        "wires": [
            [
                "0fae7a4300c0ed07"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "42aa1b8904a4285b",
        "type": "mongodb-collection",
        "z": "73720112d2633680",
        "name": "findDB",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 930,
        "y": 440,
        "wires": [
            [
                "d7dd896eb0c2b8e7"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "4639b103597f6573",
        "type": "mongodb-collection",
        "z": "73720112d2633680",
        "name": "insert_seguridad_detalle",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1530,
        "y": 680,
        "wires": [
            [
                "0fae7a4300c0ed07"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "d7dd896eb0c2b8e7",
        "type": "function",
        "z": "73720112d2633680",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 440,
        "wires": [
            [
                "b17479a746253ead"
            ]
        ]
    },
    {
        "id": "b17479a746253ead",
        "type": "switch",
        "z": "73720112d2633680",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 800,
        "wires": [
            [
                "e18a84278959dddf"
            ],
            [
                "e18a84278959dddf"
            ]
        ]
    },
    {
        "id": "c52fcd3bc88266e6",
        "type": "mqtt out",
        "z": "73720112d2633680",
        "name": "envioMQTT",
        "topic": "mqtt_mowi_seguridad",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 1710,
        "y": 900,
        "wires": []
    },
    {
        "id": "811388864e12eb96",
        "type": "change",
        "z": "73720112d2633680",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 860,
        "wires": [
            [
                "c52fcd3bc88266e6"
            ]
        ]
    },
    {
        "id": "1ec622aed63a4659",
        "type": "change",
        "z": "73720112d2633680",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 900,
        "wires": [
            [
                "c52fcd3bc88266e6"
            ]
        ]
    },
    {
        "id": "0fae7a4300c0ed07",
        "type": "debug",
        "z": "73720112d2633680",
        "name": "debug 218",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 720,
        "wires": []
    },
    {
        "id": "1cfd495289b555fe",
        "type": "inject",
        "z": "73720112d2633680",
        "name": "Mowi",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "conectado desde Mowi",
        "payloadType": "str",
        "x": 1530,
        "y": 960,
        "wires": [
            [
                "c52fcd3bc88266e6",
                "51a8e41a2015dde4"
            ]
        ]
    },
    {
        "id": "51a8e41a2015dde4",
        "type": "debug",
        "z": "73720112d2633680",
        "name": "debug 219",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 960,
        "wires": []
    },
    {
        "id": "148a759c5358fdce",
        "type": "mqtt in",
        "z": "73720112d2633680",
        "name": "",
        "topic": "mqtt_mowi_seguridad",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9f945835b1447245",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1540,
        "y": 620,
        "wires": [
            [
                "e954dcdeb7e76a80"
            ]
        ]
    },
    {
        "id": "e954dcdeb7e76a80",
        "type": "debug",
        "z": "73720112d2633680",
        "name": "debug 220",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 620,
        "wires": []
    },
    {
        "id": "ae70f5cb211b6ebb",
        "type": "http in",
        "z": "73720112d2633680",
        "name": "NIO",
        "url": "/api/spotter/betecoi",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 400,
        "wires": [
            [
                "ed45ad8e6dd063b5",
                "24b5b25f90f03c74"
            ]
        ]
    },
    {
        "id": "ed45ad8e6dd063b5",
        "type": "function",
        "z": "73720112d2633680",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 400,
        "wires": [
            [
                "4723e61fba0dd3af"
            ]
        ]
    },
    {
        "id": "aa53601f015eb9a4",
        "type": "function",
        "z": "73720112d2633680",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 400,
        "wires": [
            [
                "42aa1b8904a4285b"
            ]
        ]
    },
    {
        "id": "4723e61fba0dd3af",
        "type": "change",
        "z": "73720112d2633680",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Betecoi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "104",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 400,
        "wires": [
            [
                "9e9b58c2444d8582"
            ]
        ]
    },
    {
        "id": "9e9b58c2444d8582",
        "type": "function",
        "z": "73720112d2633680",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '73a6080d-47ba-4aa1-72e4-b3fe09deb827') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '2a3120cb-89f6-47e4-49b9-356d56db95dd') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'ff9c2731-34af-469b-5568-6a2dcf29d7fa') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 400,
        "wires": [
            [
                "aa53601f015eb9a4"
            ]
        ]
    },
    {
        "id": "e37558db4f439c19",
        "type": "comment",
        "z": "73720112d2633680",
        "name": "BETECOI 🐟 🟢",
        "info": "",
        "x": 100,
        "y": 360,
        "wires": []
    },
    {
        "id": "59efa0f25c7e7e4d",
        "type": "http in",
        "z": "73720112d2633680",
        "name": "NIO",
        "url": "/api/spotter/laurel",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 480,
        "wires": [
            [
                "a88d469cd5dd0027",
                "f1492d728ee41f51"
            ]
        ]
    },
    {
        "id": "a88d469cd5dd0027",
        "type": "function",
        "z": "73720112d2633680",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 480,
        "wires": [
            [
                "5d42091b16b0e540"
            ]
        ]
    },
    {
        "id": "503bdf698d263703",
        "type": "function",
        "z": "73720112d2633680",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 480,
        "wires": [
            [
                "42aa1b8904a4285b"
            ]
        ]
    },
    {
        "id": "5d42091b16b0e540",
        "type": "change",
        "z": "73720112d2633680",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Laurel-Oeste",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "105",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 480,
        "wires": [
            [
                "b1e6d5ae3ade8a49"
            ]
        ]
    },
    {
        "id": "b1e6d5ae3ade8a49",
        "type": "function",
        "z": "73720112d2633680",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '788e5ae9-e599-450a-7333-a238f93e597a') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'b987898d-7724-4458-6660-35a68fdad31d') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === 'ebe0fc31-e41f-45b8-6052-8964d7f183c1') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '9e871b7b-9e48-4e34-4900-7d0fdbb94043') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n            \n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        \n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = ''; \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n            \n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n        \n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 480,
        "wires": [
            [
                "503bdf698d263703"
            ]
        ]
    },
    {
        "id": "21a5b1f792d619f0",
        "type": "comment",
        "z": "73720112d2633680",
        "name": "LAUREL-OESTE 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 440,
        "wires": []
    },
    {
        "id": "fb342107b06b1beb",
        "type": "http in",
        "z": "73720112d2633680",
        "name": "NIO",
        "url": "/api/spotter/leucayec",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 560,
        "wires": [
            [
                "777b0c2a67f5c3f8",
                "c169fc87edfd2d23"
            ]
        ]
    },
    {
        "id": "777b0c2a67f5c3f8",
        "type": "function",
        "z": "73720112d2633680",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 560,
        "wires": [
            [
                "55335549064b339f"
            ]
        ]
    },
    {
        "id": "8395430f2b0ad973",
        "type": "function",
        "z": "73720112d2633680",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 560,
        "wires": [
            [
                "42aa1b8904a4285b"
            ]
        ]
    },
    {
        "id": "55335549064b339f",
        "type": "change",
        "z": "73720112d2633680",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "003",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Mowi",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Leucayec",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "106",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 560,
        "wires": [
            [
                "92137e0d9a9b5aba"
            ]
        ]
    },
    {
        "id": "92137e0d9a9b5aba",
        "type": "function",
        "z": "73720112d2633680",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '1750cee8-b7bc-444b-703e-56ab480622e1') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '1c073df0-def2-48ce-67db-f94f59821dec') {\n            nombreModuloZona = 'INTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';     \n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n            \n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        \n        detalle.estado_enviado = false;\n\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 560,
        "wires": [
            [
                "8395430f2b0ad973"
            ]
        ]
    },
    {
        "id": "00450a4b90f74dbc",
        "type": "comment",
        "z": "73720112d2633680",
        "name": "LEUCAYEC 🐟 🟢",
        "info": "",
        "x": 110,
        "y": 520,
        "wires": []
    },
    {
        "id": "1d188628187052c1",
        "type": "debug",
        "z": "73720112d2633680",
        "name": "debug 221",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 280,
        "wires": []
    },
    {
        "id": "24b5b25f90f03c74",
        "type": "debug",
        "z": "73720112d2633680",
        "name": "debug 222",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 360,
        "wires": []
    },
    {
        "id": "f1492d728ee41f51",
        "type": "debug",
        "z": "73720112d2633680",
        "name": "debug 223",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 440,
        "wires": []
    },
    {
        "id": "c169fc87edfd2d23",
        "type": "debug",
        "z": "73720112d2633680",
        "name": "debug 224",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 520,
        "wires": []
    },
    {
        "id": "427f7810564f00d6",
        "type": "mongodb-collection",
        "z": "73720112d2633680",
        "name": "insert_seguridad_movil",
        "config": "7cdcd7390ec48dd3",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1530,
        "y": 760,
        "wires": [
            [
                "0fae7a4300c0ed07"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "8c446fedbbd901ce",
        "type": "mqtt out",
        "z": "1883ce515f2f379c",
        "name": "checkBroker",
        "topic": "mqtt_aquachile_seguridad",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 270,
        "y": 120,
        "wires": []
    },
    {
        "id": "4c22e41b8be18d48",
        "type": "inject",
        "z": "1883ce515f2f379c",
        "name": "conectar",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "8c446fedbbd901ce"
            ]
        ]
    },
    {
        "id": "a1b1331b42e9d434",
        "type": "inject",
        "z": "1883ce515f2f379c",
        "name": "desconectar",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 160,
        "wires": [
            [
                "8c446fedbbd901ce"
            ]
        ]
    },
    {
        "id": "cd025c26fac9f112",
        "type": "status",
        "z": "1883ce515f2f379c",
        "name": "",
        "scope": [
            "8c446fedbbd901ce"
        ],
        "x": 420,
        "y": 120,
        "wires": [
            [
                "ac9a626636f427b8"
            ]
        ]
    },
    {
        "id": "ac9a626636f427b8",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mqtt_status",
                "pt": "flow",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "1e31063f09946a82",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "CONEXION MQTT",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "a7139e648ff4fcf5",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/amparogrande",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 260,
        "wires": [
            [
                "280a898b7bc0bddb"
            ]
        ]
    },
    {
        "id": "280a898b7bc0bddb",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 260,
        "wires": [
            [
                "01e2fb1519f8c424"
            ]
        ]
    },
    {
        "id": "4bc159eb96a07ec8",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 260,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "01e2fb1519f8c424",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Amparo Grande",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "118",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 260,
        "wires": [
            [
                "77682fdec97a1701"
            ]
        ]
    },
    {
        "id": "77682fdec97a1701",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'abf76d76-ca23-4375-442f-1acf321ccb10') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '375b49b7-4590-4179-7636-5d04ad56541e') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '30e955bf-3dad-482b-63c3-1a78e1f6ca99') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'ab3ee495-3bb7-45f7-5fcd-c09bdf7dfca1') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil,\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 260,
        "wires": [
            [
                "4bc159eb96a07ec8"
            ]
        ]
    },
    {
        "id": "b4fa7f8123a49877",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "AMPAROGRANDE🐟 🟢",
        "info": "",
        "x": 130,
        "y": 220,
        "wires": []
    },
    {
        "id": "aaaf95962fe9ebb7",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/angostura",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 340,
        "wires": [
            [
                "25a10ff93faa66b6"
            ]
        ]
    },
    {
        "id": "25a10ff93faa66b6",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 340,
        "wires": [
            [
                "b87dbc541ab1bc77"
            ]
        ]
    },
    {
        "id": "3ffdafd3d9a0a140",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 340,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "b87dbc541ab1bc77",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Angostura",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "119",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 340,
        "wires": [
            [
                "315a76cb7a62eb69"
            ]
        ]
    },
    {
        "id": "315a76cb7a62eb69",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'd6fd449c-5f8d-4d86-6c71-946af104099f') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '72b15177-6a01-48c0-69ad-921f55454151') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '4f39df0d-c1d2-40b7-7781-5f21cc4998c7') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '50d50de5-0a71-4753-7284-95e70ee5aa06') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 340,
        "wires": [
            [
                "3ffdafd3d9a0a140"
            ]
        ]
    },
    {
        "id": "494e6876b5cd2833",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "ANGOSTURA 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 300,
        "wires": []
    },
    {
        "id": "9e5df76d40306c49",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/aysen4",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 420,
        "wires": [
            [
                "0d07a125dbd8ce8b"
            ]
        ]
    },
    {
        "id": "0d07a125dbd8ce8b",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 420,
        "wires": [
            [
                "942d41adbab6deda"
            ]
        ]
    },
    {
        "id": "c4733d82a19419c8",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 420,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "942d41adbab6deda",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Aysen 4",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "120",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 420,
        "wires": [
            [
                "848458d12df63dff"
            ]
        ]
    },
    {
        "id": "848458d12df63dff",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '5df3c5ca-15eb-47ea-671e-6140d106f5a7') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '3c9e92ae-70ef-4aad-4b40-58cde9bec7a7') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '77e131de-8d26-4c8d-7c01-ef1ae3f3ac30') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'af3a2f73-528e-4b91-5c98-6a5b5b4d32ee') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 420,
        "wires": [
            [
                "c4733d82a19419c8"
            ]
        ]
    },
    {
        "id": "be79c3e530f85750",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "AYSEN 4 🐟 🟢",
        "info": "",
        "x": 100,
        "y": 380,
        "wires": []
    },
    {
        "id": "8faf1e6932e87bca",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/brazoguardramiro",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 500,
        "wires": [
            [
                "e1be0c219c45fd55"
            ]
        ]
    },
    {
        "id": "e1be0c219c45fd55",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 500,
        "wires": [
            [
                "f7d368de569e5d1e"
            ]
        ]
    },
    {
        "id": "c6f194965e6496ce",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 500,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "f7d368de569e5d1e",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Brazo Guardramiro",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "121",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 500,
        "wires": [
            [
                "65b2eebc9cabbce0"
            ]
        ]
    },
    {
        "id": "65b2eebc9cabbce0",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '56205a75-6858-472e-7601-627ec18e7b83') {\n            nombreModuloZona = '100';\n        }else if (currentItem.zones[0] === '17773584-6548-4b87-7fc8-4c0cf807e391') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '55493518-c15c-4baa-5374-89ebff3b5383') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === '2ab030cf-91af-4ca1-57c4-4ae3d1778ff7') {\n            nombreModuloZona = 'EXTERIOR100';\n        }else if (currentItem.zones[0] === '3c9e92ae-70ef-4aad-4b40-58cde9bec7a7') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === '04dbfc8a-ff43-4a8b-72dd-d9e806d2844c') {\n            nombreModuloZona = 'EXTERIOR200';\n        } else if (currentItem.zones[0] === '905e5a0d-f566-427d-63a8-520c9d827b5a') {\n            nombreModuloZona = 'ACTIVE_TRACKING100';\n        } else if (currentItem.zones[0] === '69b95b43-bb84-4019-6596-9c1b25a2757d') {\n            nombreModuloZona = 'ACTIVE_TRACKING200';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING100' o 'ACTIVE_TRACKING200'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING100' && nombreModuloZona !== 'ACTIVE_TRACKING200') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100'\n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || ''\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100'\n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100'\n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 500,
        "wires": [
            [
                "c6f194965e6496ce"
            ]
        ]
    },
    {
        "id": "f77647dff17733c1",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "BRAZO GUARDRAMIRO 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 460,
        "wires": []
    },
    {
        "id": "9e6fcc48ef6155ab",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/brazohojeda",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 580,
        "wires": [
            [
                "cdb23bd64d717ba6"
            ]
        ]
    },
    {
        "id": "cdb23bd64d717ba6",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 580,
        "wires": [
            [
                "93635f02fd977199"
            ]
        ]
    },
    {
        "id": "b028c50a4848b9a3",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 580,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "93635f02fd977199",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Brazo Hojeda",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "122",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 580,
        "wires": [
            [
                "0347c8089f5fb4a9"
            ]
        ]
    },
    {
        "id": "0347c8089f5fb4a9",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'b116b092-70e9-4fac-6d93-a460f9a215f7') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'e08f3cde-c985-4864-67be-63574509c569') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '2f80be27-755a-44a4-4340-b75d62f80b00') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '9061fc6e-0b49-4185-6388-18051d93eabc') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 580,
        "wires": [
            [
                "b028c50a4848b9a3"
            ]
        ]
    },
    {
        "id": "0e977f52258f3485",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "BRAZO HOJEDA 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 540,
        "wires": []
    },
    {
        "id": "c2ddd04101036cf8",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/brazohojeda2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 660,
        "wires": [
            [
                "7588e86d0405dd9b"
            ]
        ]
    },
    {
        "id": "7588e86d0405dd9b",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 660,
        "wires": [
            [
                "2558ebf2ff8e348d"
            ]
        ]
    },
    {
        "id": "451c30540334383a",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 660,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "2558ebf2ff8e348d",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Brazo Hojeda 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "123",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 660,
        "wires": [
            [
                "b8a88f7753971518"
            ]
        ]
    },
    {
        "id": "b8a88f7753971518",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'f2c061fc-7780-4229-41ef-3a1fa11f53cb') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '91fef178-7b26-4bb7-5e47-0ffbe0934987') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'f9059498-ce8a-49dd-58dd-fe2e0ace3fab') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 660,
        "wires": [
            [
                "451c30540334383a"
            ]
        ]
    },
    {
        "id": "9398a31d21a9fbba",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "BRAZO HOJEDA 2 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 620,
        "wires": []
    },
    {
        "id": "b136d18f78eb4328",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/caceres",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 740,
        "wires": [
            [
                "9baa4555b165b644"
            ]
        ]
    },
    {
        "id": "9baa4555b165b644",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 740,
        "wires": [
            [
                "6e7603d61af3f5f0"
            ]
        ]
    },
    {
        "id": "a7c1a0aa7ec7b84c",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 740,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "6e7603d61af3f5f0",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Caceres",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "124",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 740,
        "wires": [
            [
                "604242223b845136"
            ]
        ]
    },
    {
        "id": "604242223b845136",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'ac4a5b41-2a1c-4a47-65d5-a0781e66416f') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '1de453f2-0ebb-4230-796c-4b637ed70e8b') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '3cc88abe-5031-4799-4aee-3ff56c3c2260') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '4767e03a-9866-4483-5787-a02998aaedc2') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 740,
        "wires": [
            [
                "a7c1a0aa7ec7b84c"
            ]
        ]
    },
    {
        "id": "14f886de9c6849da",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "CACERES 🐟 🔴",
        "info": "",
        "x": 110,
        "y": 700,
        "wires": []
    },
    {
        "id": "8fdf30b8dadccc81",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/canalad6",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 820,
        "wires": [
            [
                "613b26eaafcdf92d"
            ]
        ]
    },
    {
        "id": "613b26eaafcdf92d",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 820,
        "wires": [
            [
                "3d952eaa2f066e4f"
            ]
        ]
    },
    {
        "id": "fc1145052abf2940",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 820,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "3d952eaa2f066e4f",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Canalad 6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "125",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 820,
        "wires": [
            [
                "97fa3411e3f2935d"
            ]
        ]
    },
    {
        "id": "97fa3411e3f2935d",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '85e04d09-ff07-4239-43ba-e468c1770f6d') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'aa23ea56-01b3-4049-4e29-e4066c0dd5b2') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '12cad551-a9e5-46f5-4313-291356539a59') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '2fed287c-55e4-4ef6-4654-fb0a9694f1e6') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 820,
        "wires": [
            [
                "fc1145052abf2940"
            ]
        ]
    },
    {
        "id": "f44862c3ee9e419f",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "CANALAD 6 🐟 🟢",
        "info": "",
        "x": 110,
        "y": 780,
        "wires": []
    },
    {
        "id": "82421d167919b48b",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/canalpereznorte",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 900,
        "wires": [
            [
                "1e0e7350adfe24cb"
            ]
        ]
    },
    {
        "id": "1e0e7350adfe24cb",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 900,
        "wires": [
            [
                "624b97fd674bbcd9"
            ]
        ]
    },
    {
        "id": "9e43df7a14576a36",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 900,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "624b97fd674bbcd9",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Canal Perez Norte",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "126",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 900,
        "wires": [
            [
                "d9411e6434294836"
            ]
        ]
    },
    {
        "id": "d9411e6434294836",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '30fa9ca3-ea8f-4db0-70cd-2aaccd2ea0ac') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '3bfe21da-dd0a-44b1-719f-8e1beaba1c63') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'ec251a7a-04ea-49e0-6f73-572fcb06f382') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '9b80128f-7d2c-4f71-43ac-e07755549c38') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 900,
        "wires": [
            [
                "9e43df7a14576a36"
            ]
        ]
    },
    {
        "id": "52911c2272e0f377",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "CANAL PEREZ NORTE 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 860,
        "wires": []
    },
    {
        "id": "a9b757ef5d7433f3",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/cascada",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 980,
        "wires": [
            [
                "3c2e925c2fa5df80"
            ]
        ]
    },
    {
        "id": "3c2e925c2fa5df80",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 980,
        "wires": [
            [
                "ada321b2439b7adc"
            ]
        ]
    },
    {
        "id": "d11c240280d6706d",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 980,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "ada321b2439b7adc",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Cascada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "127",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 980,
        "wires": [
            [
                "58446789c7304011"
            ]
        ]
    },
    {
        "id": "58446789c7304011",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '96bf214d-0740-4a6d-7022-cbf0ffd9926a') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'f374ff18-d4f2-4996-578a-8accfbab932d') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'f0c6dd98-c1ab-4c54-782e-4d1660211cb4') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '0e72211e-fd79-42ea-5bb2-6afc7b82ae30') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 980,
        "wires": [
            [
                "d11c240280d6706d"
            ]
        ]
    },
    {
        "id": "8a6a7a2b6cb8a63e",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "CASCADA 🐟 🟢",
        "info": "",
        "x": 110,
        "y": 940,
        "wires": []
    },
    {
        "id": "7d3511a91eaf46ff",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/concoto",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 1060,
        "wires": [
            [
                "fcafd46081952a3c"
            ]
        ]
    },
    {
        "id": "fcafd46081952a3c",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1060,
        "wires": [
            [
                "155849180b1fcc90"
            ]
        ]
    },
    {
        "id": "7323b158a8746184",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1060,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "155849180b1fcc90",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Concoto",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "128",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "58a4f8d5bc4c9f96"
            ]
        ]
    },
    {
        "id": "58a4f8d5bc4c9f96",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '28758ea6-fb87-4bc1-4ab0-84632cde4b76') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '31214ae2-24c7-4c6a-68fd-f7e8931c4d07') {\n            nombreModuloZona = '200';\n        }else if (currentItem.zones[0] === '7d2328ac-10fa-497c-6d2a-5a065e239243') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '08ea1613-14c6-4a05-54f1-a653e522af58') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '46ad6750-1e40-458f-418b-e30000d7c6eb') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 1060,
        "wires": [
            [
                "7323b158a8746184"
            ]
        ]
    },
    {
        "id": "f5aaac45525c93d0",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "CONCOTO 🐟 🟢",
        "info": "",
        "x": 110,
        "y": 1020,
        "wires": []
    },
    {
        "id": "7e3bb31e8c54108a",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/elefante",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 1140,
        "wires": [
            [
                "f9244b1098b55595"
            ]
        ]
    },
    {
        "id": "f9244b1098b55595",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1140,
        "wires": [
            [
                "3521b3842cf27b3f"
            ]
        ]
    },
    {
        "id": "4f1e1377dbccf8b1",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1140,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "3521b3842cf27b3f",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Elefante",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "129",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1140,
        "wires": [
            [
                "ab594c6ea816c0fe"
            ]
        ]
    },
    {
        "id": "ab594c6ea816c0fe",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '23cdfdad-c460-4973-504a-de3b911308f8') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '2a0e3b9e-7e88-48dc-72b2-1859a7ee3325') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'bd2364a8-ba4d-4348-748f-7857d49e8791') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '472da4a1-d244-413c-7707-a83375aa760d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        \n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 1140,
        "wires": [
            [
                "4f1e1377dbccf8b1"
            ]
        ]
    },
    {
        "id": "65dbd7eaa0f124eb",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "ELEFANTE 🐟 🟢",
        "info": "",
        "x": 110,
        "y": 1100,
        "wires": []
    },
    {
        "id": "aba41756d323eb8b",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/esterofrio",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 1220,
        "wires": [
            [
                "0404317d6d5b3193"
            ]
        ]
    },
    {
        "id": "0404317d6d5b3193",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1220,
        "wires": [
            [
                "a377e54bbf2516aa"
            ]
        ]
    },
    {
        "id": "314664f23d438697",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1220,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "a377e54bbf2516aa",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Estero Frio",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "130",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1220,
        "wires": [
            [
                "7149fadf4822ec92"
            ]
        ]
    },
    {
        "id": "7149fadf4822ec92",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4c4adc9f-1abe-42c4-6726-dbcd504398e4') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '0898af5c-1bfe-4f47-54af-f59682d6bacc') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'db76287c-f3c5-4130-4c8f-0e0aeb33898b') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '15ef3e6b-a8f1-4174-5b57-b96e6cd6574e') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 1220,
        "wires": [
            [
                "314664f23d438697"
            ]
        ]
    },
    {
        "id": "ae9c0c18d3685ca6",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "ESTERO FRIO 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1180,
        "wires": []
    },
    {
        "id": "64655494f4495f7f",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/fislaswagner",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 1300,
        "wires": [
            [
                "51a3787a6d5f57c5"
            ]
        ]
    },
    {
        "id": "51a3787a6d5f57c5",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1300,
        "wires": [
            [
                "27559fa10e326ec8"
            ]
        ]
    },
    {
        "id": "2382e1b7cad241f0",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1300,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "27559fa10e326ec8",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Frente Islas Wagner",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "131",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1300,
        "wires": [
            [
                "6f55f530ec211a7b"
            ]
        ]
    },
    {
        "id": "6f55f530ec211a7b",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '93d6f88d-f7be-4559-6a16-9c7c75d99551') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'a6d0c3b9-2995-4b11-6e87-60b06e429012') {\n            nombreModuloZona = '200';\n        }else if (currentItem.zones[0] === 'f1e50c10-4563-455d-68ce-e1e1235634c7') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'e8d00714-b675-4384-7e90-458a47541125') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'fe794929-16d4-4059-70f7-b17454e7c6a2') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 1300,
        "wires": [
            [
                "2382e1b7cad241f0"
            ]
        ]
    },
    {
        "id": "128fd6484c2fa2d5",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "FRENTE ISLAS WAGNER 🐟 🟢",
        "info": "",
        "x": 160,
        "y": 1260,
        "wires": []
    },
    {
        "id": "d2cf8394a0dd4efd",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/graffer",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 1380,
        "wires": [
            [
                "f236571ae6035d52"
            ]
        ]
    },
    {
        "id": "f236571ae6035d52",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1380,
        "wires": [
            [
                "f9ae3395957242af"
            ]
        ]
    },
    {
        "id": "c3622d71de784d3d",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1380,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "f9ae3395957242af",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Graffer",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "132",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1380,
        "wires": [
            [
                "56878c7af7f39957"
            ]
        ]
    },
    {
        "id": "56878c7af7f39957",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'bdb5f803-1d2e-4ec2-6e7f-c922b0ee5a06') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '32a10fa3-15b1-4f58-45d5-55e7c9dc05f9') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'a709d5bf-ff32-4a83-7fe6-2a32114d8991') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'd020ee3f-bb39-47cf-7414-dec973167bab') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 1380,
        "wires": [
            [
                "c3622d71de784d3d"
            ]
        ]
    },
    {
        "id": "ca047f7346172105",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "GRAFFER 🐟 🔴",
        "info": "",
        "x": 110,
        "y": 1340,
        "wires": []
    },
    {
        "id": "3d646b11057a4907",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/herradura",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 1460,
        "wires": [
            [
                "a8d4c84fae08b5f7"
            ]
        ]
    },
    {
        "id": "a8d4c84fae08b5f7",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1460,
        "wires": [
            [
                "174685ce86f3cd6d"
            ]
        ]
    },
    {
        "id": "538a46ed851d3e06",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1460,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "174685ce86f3cd6d",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Herradura",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "133",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1460,
        "wires": [
            [
                "2c9b124aaa6df605"
            ]
        ]
    },
    {
        "id": "2c9b124aaa6df605",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '436e4287-daa8-4610-7cb7-a9b7d0261e9b') {\n            nombreModuloZona = '100';\n        }else if (currentItem.zones[0] === '7497e4a7-5d42-4630-60b2-719afef2eab0') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '5d0d4ea8-5f20-4072-53cf-5c94eabe8405') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === '85126ed3-bfee-45a5-6b44-dd5b0dc06b02') {\n            nombreModuloZona = 'EXTERIOR100';\n        } else if (currentItem.zones[0] === '28c06adb-5339-4476-61dd-b14392936c40') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === 'd3abe1cd-530b-451d-7850-c9981fe08d2d') {\n            nombreModuloZona = 'EXTERIOR200';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n            || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n            || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n            || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 1460,
        "wires": [
            [
                "538a46ed851d3e06"
            ]
        ]
    },
    {
        "id": "a2da0e58209e2366",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "HERRADURA 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1420,
        "wires": []
    },
    {
        "id": "fd4f55ef9740e3c9",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/huelmo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 1540,
        "wires": [
            [
                "0d7adac455bacdf8"
            ]
        ]
    },
    {
        "id": "0d7adac455bacdf8",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1540,
        "wires": [
            [
                "894840bec513b316"
            ]
        ]
    },
    {
        "id": "86ac06d7dc4e8877",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1540,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "894840bec513b316",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Huelmo",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "134",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1540,
        "wires": [
            [
                "ac6a14de19812b91"
            ]
        ]
    },
    {
        "id": "ac6a14de19812b91",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '2aab0bba-13e3-4414-71a2-6d9c02e3c4ce') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '52bee7c6-02d2-4d82-5455-f42d20adc80b') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '1fe1688e-a99e-416a-62a1-a5d359d4af42') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '32e60a2d-6501-4776-7b9d-e1934f400362') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'd8b0f076-70f1-49a4-452f-2eead1c9911b') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {       \n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,    \n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 1540,
        "wires": [
            [
                "86ac06d7dc4e8877"
            ]
        ]
    },
    {
        "id": "4505b389b3c8f026",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "HUELMO 🐟 🟢",
        "info": "",
        "x": 100,
        "y": 1500,
        "wires": []
    },
    {
        "id": "51e126b9b4058642",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/huenquillahue",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 1620,
        "wires": [
            [
                "571b7ade18300664"
            ]
        ]
    },
    {
        "id": "571b7ade18300664",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1620,
        "wires": [
            [
                "0e445b417b5e9a31"
            ]
        ]
    },
    {
        "id": "f388d84bbd5ab675",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1620,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "0e445b417b5e9a31",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Huenquillahue",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "135",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1620,
        "wires": [
            [
                "83f3784693b43b81"
            ]
        ]
    },
    {
        "id": "83f3784693b43b81",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '9525d165-b6fb-4f68-6a43-fbb293ca13e5') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '13e101ee-6ab5-4baa-4915-735db0bef481') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === 'd371c139-22d5-4e15-4489-ea87aa8f8379') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'd5ab2a19-d045-430c-4f72-df0984044908') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '2a4ef2ee-c884-4ce6-4654-0e2476f882a8') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 1620,
        "wires": [
            [
                "f388d84bbd5ab675"
            ]
        ]
    },
    {
        "id": "99c5dc83685f9c7b",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "HUENQUILLAHUE 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 1580,
        "wires": []
    },
    {
        "id": "d1fd368cf0f9e9ba",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/islasanchezaqua",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 1700,
        "wires": [
            [
                "fac4b9ebb0d2ed92"
            ]
        ]
    },
    {
        "id": "fac4b9ebb0d2ed92",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1700,
        "wires": [
            [
                "c3fc0e7344aa6eab"
            ]
        ]
    },
    {
        "id": "8a2e8656b2e274aa",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1700,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "c3fc0e7344aa6eab",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Isla Sanchez",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "136",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1700,
        "wires": [
            [
                "31208789d23983a7"
            ]
        ]
    },
    {
        "id": "31208789d23983a7",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'dc8f384d-8c27-4c14-5ccb-416c7bdf005c') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '5fd8e52e-b8ba-4344-4469-91fc53d83c76') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '144e3dd5-92a6-47e9-6907-7146e6b9cea7') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '67e237f9-e665-42d9-679f-9ceba46fa9bb') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil,\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 1700,
        "wires": [
            [
                "8a2e8656b2e274aa"
            ]
        ]
    },
    {
        "id": "8d618cc97f617b8b",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "ISLA SANCHEZ 🐟 🔴",
        "info": "",
        "x": 120,
        "y": 1660,
        "wires": []
    },
    {
        "id": "502882ca37d4f31c",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/ladrilleros",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 1780,
        "wires": [
            [
                "33d8e885dc3d1ee8"
            ]
        ]
    },
    {
        "id": "33d8e885dc3d1ee8",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1780,
        "wires": [
            [
                "ae81f0a17f01da75"
            ]
        ]
    },
    {
        "id": "efb068530a435c37",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1780,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "ae81f0a17f01da75",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Ladrilleros",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "137",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1780,
        "wires": [
            [
                "eb29f32c1d0a24d8"
            ]
        ]
    },
    {
        "id": "eb29f32c1d0a24d8",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4d68fc37-4169-42ce-5e35-11e3d191726d') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'dc35cd27-c090-416b-5ea3-a8dec3422a09') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === 'c9ffd728-46b1-4863-4d4d-79fc6688c38d') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'dc12514a-e3ee-441a-585a-cc2bf928c926') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '02461d86-4bd8-4df0-4c63-c6707ea5abe4') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 1780,
        "wires": [
            [
                "efb068530a435c37"
            ]
        ]
    },
    {
        "id": "607cc5bced279fe6",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "LADRILLEROS 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 1740,
        "wires": []
    },
    {
        "id": "90ab5407357bb97d",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/marta",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 1860,
        "wires": [
            [
                "cd5102c944d502a8"
            ]
        ]
    },
    {
        "id": "cd5102c944d502a8",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1860,
        "wires": [
            [
                "6b573019b0e3d212"
            ]
        ]
    },
    {
        "id": "a7fcd60c004bb5f3",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1860,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "6b573019b0e3d212",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Marta",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "138",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1860,
        "wires": [
            [
                "0aac1f1b73d77fcf"
            ]
        ]
    },
    {
        "id": "0aac1f1b73d77fcf",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4d50324f-9862-4e7c-52ee-ecaffc13b955') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'fe7ccd77-85b6-45ec-5911-152fa57a8563') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '82190faf-a191-45a7-423f-b379a24e2505') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'ae4417cc-a08b-4e54-6aae-20b2e3fd0408') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 1860,
        "wires": [
            [
                "a7fcd60c004bb5f3"
            ]
        ]
    },
    {
        "id": "8ea84f67a579feed",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "MARTA 🐟 🟢",
        "info": "",
        "x": 100,
        "y": 1820,
        "wires": []
    },
    {
        "id": "3cae03fa82b63c31",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/pamela",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 1940,
        "wires": [
            [
                "402df302d6023826"
            ]
        ]
    },
    {
        "id": "402df302d6023826",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1940,
        "wires": [
            [
                "2c1e7ddb62dcc6ce"
            ]
        ]
    },
    {
        "id": "1a7f1578a0aa4e18",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1940,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "2c1e7ddb62dcc6ce",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pamela",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "139",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1940,
        "wires": [
            [
                "c40dccb2853261b5"
            ]
        ]
    },
    {
        "id": "c40dccb2853261b5",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'f98b0c28-cef2-42fc-6af9-86262092feee') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '7d0626b8-ef3f-4a99-7371-1be5e289c978') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '12b679e2-453a-450c-5a23-4edcf4ca386d') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'a3b5c35a-92e2-446c-46ee-21fdecedec33') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;    \n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }    \n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 1940,
        "wires": [
            [
                "1a7f1578a0aa4e18"
            ]
        ]
    },
    {
        "id": "9b9aceefed28e3f5",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "PAMELA 🐟 🟢",
        "info": "",
        "x": 100,
        "y": 1900,
        "wires": []
    },
    {
        "id": "bbfcb4a06a940b2f",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/pangal1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 2020,
        "wires": [
            [
                "7fc03753c2a0d57a"
            ]
        ]
    },
    {
        "id": "7fc03753c2a0d57a",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2020,
        "wires": [
            [
                "90a2199a04be3b99"
            ]
        ]
    },
    {
        "id": "738ed2204092ddb5",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2020,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "90a2199a04be3b99",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pangal 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "140",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2020,
        "wires": [
            [
                "983c4239d6036cac"
            ]
        ]
    },
    {
        "id": "983c4239d6036cac",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'e34977b1-2b5a-45fd-50ed-e46fc4168e40') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'faaf428e-633e-44dd-6274-caa57279b5ed') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '093b528b-5237-4e7b-6686-3c2ddd94d012') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '186248fa-1997-4587-4eed-65b2df66e7e4') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 2020,
        "wires": [
            [
                "738ed2204092ddb5"
            ]
        ]
    },
    {
        "id": "6532e40c3ab02183",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "PANGAL 1 🐟 🟢",
        "info": "",
        "x": 110,
        "y": 1980,
        "wires": []
    },
    {
        "id": "38085dc167956113",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/pangal2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 2100,
        "wires": [
            [
                "80548aa554a36745"
            ]
        ]
    },
    {
        "id": "80548aa554a36745",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2100,
        "wires": [
            [
                "fd699fdf21b48bb3"
            ]
        ]
    },
    {
        "id": "6123fb2be13ff04c",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2100,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "fd699fdf21b48bb3",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pangal 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "141",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2100,
        "wires": [
            [
                "6f092a3ec0a6a8a1"
            ]
        ]
    },
    {
        "id": "6f092a3ec0a6a8a1",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '7fbe2ba2-86d5-46ed-40d7-c774977ec291') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'ed3f6cda-e15c-4305-52af-efbb4a1d4acb') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '67540a91-337b-47b7-7990-725ce6e945cb') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === 'bfa3fe1b-f464-4a47-5cb5-7fa83c569c6b') {\n            nombreModuloZona = 'EXTERIOR100';\n        } else if (currentItem.zones[0] === 'ff5fad04-77ad-4634-77b7-cfbb4193eba2') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === '1349cc45-2482-488e-473f-a4eefa2782f5') {\n            nombreModuloZona = 'EXTERIOR200';\n        } else if (currentItem.zones[0] === 'c494c96a-a3f2-44d6-5de2-1d208363cc0f') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n                || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 2100,
        "wires": [
            [
                "6123fb2be13ff04c"
            ]
        ]
    },
    {
        "id": "b63f0b2eef9f69f9",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "PANGAL 2 🐟 🟢",
        "info": "",
        "x": 110,
        "y": 2060,
        "wires": []
    },
    {
        "id": "ea86e44aef6bdd59",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/refugio",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 2180,
        "wires": [
            [
                "fda911c45cbdaba5"
            ]
        ]
    },
    {
        "id": "fda911c45cbdaba5",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2180,
        "wires": [
            [
                "ec9cef68dfe23d8d"
            ]
        ]
    },
    {
        "id": "eb5e280edf1b840f",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2180,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "ec9cef68dfe23d8d",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Refugio",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "142",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2180,
        "wires": [
            [
                "2305f31c726fc306"
            ]
        ]
    },
    {
        "id": "2305f31c726fc306",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '427b9d05-da9b-4f99-555d-d7fd49218db9') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '639d76bb-84ce-4ba1-6a59-ecf0191ec520') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '02684e44-d900-4cf8-77eb-a38e467abd3c') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 2180,
        "wires": [
            [
                "eb5e280edf1b840f"
            ]
        ]
    },
    {
        "id": "b0b4b744dbc0980a",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "REFUGIO 🐟 🟢",
        "info": "",
        "x": 100,
        "y": 2140,
        "wires": []
    },
    {
        "id": "f3a909ee60cfcf96",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/serrano",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 2260,
        "wires": [
            [
                "184e34772b40a28f"
            ]
        ]
    },
    {
        "id": "184e34772b40a28f",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2260,
        "wires": [
            [
                "cecd4828560eba1e"
            ]
        ]
    },
    {
        "id": "0c9e03b430e0d141",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2260,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "cecd4828560eba1e",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Serrano",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "143",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2260,
        "wires": [
            [
                "3ab0bc62de456c24"
            ]
        ]
    },
    {
        "id": "3ab0bc62de456c24",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '04f83931-97ce-45e3-6202-3d60b9c1a993') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'c659e24e-8d24-4b57-6821-168baa4973e9') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'b75eae40-6107-424c-6530-29adb77057fd') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '48e44b0c-36f7-4bf2-7d1f-dacfed4ae634') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 2260,
        "wires": [
            [
                "0c9e03b430e0d141"
            ]
        ]
    },
    {
        "id": "4ac27d9506d10bde",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "SERRANO 🐟 🟢",
        "info": "",
        "x": 110,
        "y": 2220,
        "wires": []
    },
    {
        "id": "dd605ab1e9e0af40",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/staines2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 2340,
        "wires": [
            [
                "fba57c2cf3d964dc"
            ]
        ]
    },
    {
        "id": "fba57c2cf3d964dc",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2340,
        "wires": [
            [
                "fe70472efe815968"
            ]
        ]
    },
    {
        "id": "dc7d92d4e6eb0876",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2340,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "fe70472efe815968",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Staines 2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "144",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2340,
        "wires": [
            [
                "42b05cf23b5af26e"
            ]
        ]
    },
    {
        "id": "42b05cf23b5af26e",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '79d57fbb-4f86-4b77-74a6-41a1f6a26366') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '2195739d-631c-4580-5af3-678f64d8dfdc') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '2b9e3368-fcdc-42cb-7d88-ecf92d70ee65') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '7cca3aeb-7f93-429a-7321-4ed41518744d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {       \n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 2340,
        "wires": [
            [
                "dc7d92d4e6eb0876"
            ]
        ]
    },
    {
        "id": "15e781a97cf30f1d",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "STAINES 2 🐟 🔴",
        "info": "",
        "x": 110,
        "y": 2300,
        "wires": []
    },
    {
        "id": "c9d3f65dff7462a8",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/teguel1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 2420,
        "wires": [
            [
                "fcb257e1f977d9ad"
            ]
        ]
    },
    {
        "id": "fcb257e1f977d9ad",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2420,
        "wires": [
            [
                "9b123a1e2d50cda0"
            ]
        ]
    },
    {
        "id": "0537804d0096683d",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2420,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "9b123a1e2d50cda0",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Teguel 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "145",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2420,
        "wires": [
            [
                "c83b0027ada07519"
            ]
        ]
    },
    {
        "id": "c83b0027ada07519",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'fde3ed65-a309-4eb5-5c5c-a321b5293cdb') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'aff0a432-9ea2-4e8d-756d-ad4a71516cc6') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c0765270-24da-4c2f-6dde-d8bc208bcb0f') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '6d6b1423-545f-4a87-51e1-22843bcaf66c') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 2420,
        "wires": [
            [
                "0537804d0096683d"
            ]
        ]
    },
    {
        "id": "fba954a3c6ac0a0e",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "TEGUEL 1 🐟 🟢",
        "info": "",
        "x": 110,
        "y": 2380,
        "wires": []
    },
    {
        "id": "6e623cb780a737d6",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/teguel3",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 2500,
        "wires": [
            [
                "754bdb0da6ced4b9"
            ]
        ]
    },
    {
        "id": "754bdb0da6ced4b9",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2500,
        "wires": [
            [
                "f025686f3d82533c"
            ]
        ]
    },
    {
        "id": "1b0e476f68dbcf2c",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2500,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "f025686f3d82533c",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Teguel 3",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "146",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2500,
        "wires": [
            [
                "3370918af55acc8e"
            ]
        ]
    },
    {
        "id": "3370918af55acc8e",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '4356d915-27db-41ce-4fcf-6bb591720acf') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '55bd80cd-fe6d-41c9-4186-d021866021ee') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'babe5eab-a7df-4312-4ed4-289bd12b8d6a') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'fbb128f0-6ac9-4d26-6a97-3798eebc4c11') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil,\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 2500,
        "wires": [
            [
                "1b0e476f68dbcf2c"
            ]
        ]
    },
    {
        "id": "4c6a1220f272f5d2",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "TEGUEL 3 🐟 🟢",
        "info": "",
        "x": 110,
        "y": 2460,
        "wires": []
    },
    {
        "id": "612676df98caf573",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/teresa1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 2580,
        "wires": [
            [
                "19b47d8b0b6835ef"
            ]
        ]
    },
    {
        "id": "19b47d8b0b6835ef",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2580,
        "wires": [
            [
                "e6be224571a101b5"
            ]
        ]
    },
    {
        "id": "f83d24ba5388c79b",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2580,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "e6be224571a101b5",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Teresa 1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "147",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2580,
        "wires": [
            [
                "833ebdb7c3618020"
            ]
        ]
    },
    {
        "id": "833ebdb7c3618020",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '16396220-b35c-4558-5451-e6c7ec9000c2') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '8c407982-1ffe-4cb1-7467-3f32e403cf23') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '15e6e855-b7a7-43b3-4508-01ae9ca12fbd') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '7f6bf50c-b6df-43bc-5ddb-37229fcccd3e') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 2580,
        "wires": [
            [
                "f83d24ba5388c79b"
            ]
        ]
    },
    {
        "id": "70bf7ae62eef46e2",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "TERESA 1 🐟 🟢",
        "info": "",
        "x": 110,
        "y": 2540,
        "wires": []
    },
    {
        "id": "aba16ed22b6cdf16",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/valverde6",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 2660,
        "wires": [
            [
                "3d157a677fb73d53"
            ]
        ]
    },
    {
        "id": "3d157a677fb73d53",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2660,
        "wires": [
            [
                "b072824be4835587"
            ]
        ]
    },
    {
        "id": "b6e31ca1b6f1fc03",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2660,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "b072824be4835587",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Valverde 6",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "148",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2660,
        "wires": [
            [
                "16251c25a39367cb"
            ]
        ]
    },
    {
        "id": "16251c25a39367cb",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '04f17a82-92ad-46eb-496b-bd333e872b89') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '787b2829-a265-40cd-5f9c-93eedc988b6f') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c3993fe2-481b-4740-7afe-c5ae4ceeb2e8') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'ca4ff249-3200-462a-62ae-0644c7f4811d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 2660,
        "wires": [
            [
                "b6e31ca1b6f1fc03"
            ]
        ]
    },
    {
        "id": "344a19f98ad98d5e",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "VALVERDE 6 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 2620,
        "wires": []
    },
    {
        "id": "7f0f14ceaf2c6d68",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/vicunamackena",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 2740,
        "wires": [
            [
                "ceaa2f41d302fc62"
            ]
        ]
    },
    {
        "id": "ceaa2f41d302fc62",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2740,
        "wires": [
            [
                "e594c772b4a3b29e"
            ]
        ]
    },
    {
        "id": "5f1af914e16b467b",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2740,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "e594c772b4a3b29e",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Vicuna Mackena",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "149",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2740,
        "wires": [
            [
                "16d4745572128bbc"
            ]
        ]
    },
    {
        "id": "16d4745572128bbc",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '46f86705-6cfc-4f53-5c83-3473b1e05591') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '9a28347a-5a62-42f3-44a5-c5a607b79bbd') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '9eb769df-6107-42d3-79e1-01dda638c403') {\n            nombreModuloZona = 'INTERIOR100';\n        } else if (currentItem.zones[0] === '7703606a-aa3b-45c7-48b7-1234898ae40f') {\n            nombreModuloZona = 'EXTERIOR100';\n        } else if (currentItem.zones[0] === '6e1719ef-9d5c-425a-6914-7c0fed860e41') {\n            nombreModuloZona = 'INTERIOR200';\n        } else if (currentItem.zones[0] === 'a3e6f9d4-8b68-4e21-7091-afbde95fb460') {\n            nombreModuloZona = 'EXTERIOR200';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n            || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            clasificacion: currentItem.classification?.type?.value || '',\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration,\n            snr: currentItem.stats?.localSnr || '',\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n            || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR100' || nombreModuloZona === 'EXTERIOR100' \n            || nombreModuloZona === 'INTERIOR200' || nombreModuloZona === 'EXTERIOR200') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 2740,
        "wires": [
            [
                "5f1af914e16b467b"
            ]
        ]
    },
    {
        "id": "db1d6571a470eded",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "VICUNA MACKENA 🐟 🟢",
        "info": "",
        "x": 140,
        "y": 2700,
        "wires": []
    },
    {
        "id": "24994892408338ea",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 1700,
        "wires": [
            [
                "0a774e5a400b8f90"
            ]
        ]
    },
    {
        "id": "0a774e5a400b8f90",
        "type": "switch",
        "z": "1883ce515f2f379c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 1700,
        "wires": [
            [
                "c7b071cb5310b7cb",
                "7e73c37dce124458"
            ],
            [
                "c7b071cb5310b7cb",
                "ef84b6fd7ef3c1b0",
                "db2892387646a222",
                "7e73c37dce124458",
                "43b75a5469928d18"
            ]
        ]
    },
    {
        "id": "ef84b6fd7ef3c1b0",
        "type": "mongodb-collection",
        "z": "1883ce515f2f379c",
        "name": "insert_seguridad",
        "config": "5f9bbe83046a3fce",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1550,
        "y": 1580,
        "wires": [
            [
                "1ffbd1786ced8b1f"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "afdbd82e422e2a64",
        "type": "mongodb-collection",
        "z": "1883ce515f2f379c",
        "name": "findDB",
        "config": "5f9bbe83046a3fce",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 990,
        "y": 1380,
        "wires": [
            [
                "b55da15d305b5870"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "c7b071cb5310b7cb",
        "type": "mongodb-collection",
        "z": "1883ce515f2f379c",
        "name": "insert_seguridad_detalle",
        "config": "5f9bbe83046a3fce",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1530,
        "y": 1540,
        "wires": [
            [
                "1ffbd1786ced8b1f"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "b55da15d305b5870",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 1380,
        "wires": [
            [
                "6d9a07503702cc30"
            ]
        ]
    },
    {
        "id": "6d9a07503702cc30",
        "type": "switch",
        "z": "1883ce515f2f379c",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 1700,
        "wires": [
            [
                "24994892408338ea"
            ],
            [
                "24994892408338ea"
            ]
        ]
    },
    {
        "id": "f5862e579adcc535",
        "type": "mqtt out",
        "z": "1883ce515f2f379c",
        "name": "envioMQTT",
        "topic": "mqtt_aquachile_seguridad",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 1730,
        "y": 1780,
        "wires": []
    },
    {
        "id": "7e73c37dce124458",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 1740,
        "wires": [
            [
                "f5862e579adcc535"
            ]
        ]
    },
    {
        "id": "db2892387646a222",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 1780,
        "wires": [
            [
                "f5862e579adcc535"
            ]
        ]
    },
    {
        "id": "1ffbd1786ced8b1f",
        "type": "debug",
        "z": "1883ce515f2f379c",
        "name": "debug 228",
        "active": false,
        "tosidebar": false,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 1580,
        "wires": []
    },
    {
        "id": "aeb0efe2bbdeae02",
        "type": "inject",
        "z": "1883ce515f2f379c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "conectado desde aquachile",
        "payloadType": "str",
        "x": 1570,
        "y": 1820,
        "wires": [
            [
                "f5862e579adcc535",
                "210253ad03c3c809"
            ]
        ]
    },
    {
        "id": "210253ad03c3c809",
        "type": "debug",
        "z": "1883ce515f2f379c",
        "name": "debug 229",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 1840,
        "wires": []
    },
    {
        "id": "9474888c547682bf",
        "type": "mqtt in",
        "z": "1883ce515f2f379c",
        "name": "",
        "topic": "mqtt_aquachile_seguridad",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9f945835b1447245",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1530,
        "y": 1480,
        "wires": [
            [
                "9e06656f2732e73a"
            ]
        ]
    },
    {
        "id": "9e06656f2732e73a",
        "type": "debug",
        "z": "1883ce515f2f379c",
        "name": "debug 230",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 1480,
        "wires": []
    },
    {
        "id": "f4e1eeae2122de48",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/marchant",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 2820,
        "wires": [
            [
                "c4df84ebc0755738"
            ]
        ]
    },
    {
        "id": "c4df84ebc0755738",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2820,
        "wires": [
            [
                "b399698267c54141"
            ]
        ]
    },
    {
        "id": "643dc4064fa0121d",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2820,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "b399698267c54141",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Marchant",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "150",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2820,
        "wires": [
            [
                "d67cb0c232aef674"
            ]
        ]
    },
    {
        "id": "d67cb0c232aef674",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '40749aa3-9616-4ca8-701f-a900786a939b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '0aeef2cf-e7a8-40a2-7676-bc0a4fff13e8') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'e2c098ff-7f12-4e88-4ade-2fcb3eee1300') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '69763286-f269-4eb3-7f65-0d4b1f1cfb36') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 2820,
        "wires": [
            [
                "643dc4064fa0121d"
            ]
        ]
    },
    {
        "id": "2cc36546c467fca1",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "MARCHANT 🐟 🟢",
        "info": "",
        "x": 110,
        "y": 2780,
        "wires": []
    },
    {
        "id": "811e0f0d635c9326",
        "type": "http in",
        "z": "1883ce515f2f379c",
        "name": "NIO",
        "url": "/api/spotter/wagner1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 2900,
        "wires": [
            [
                "e8f0f2bc027b6e1a"
            ]
        ]
    },
    {
        "id": "e8f0f2bc027b6e1a",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2900,
        "wires": [
            [
                "c76e104980ec148e"
            ]
        ]
    },
    {
        "id": "c6e7c5dff03df360",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2900,
        "wires": [
            [
                "afdbd82e422e2a64"
            ]
        ]
    },
    {
        "id": "c76e104980ec148e",
        "type": "change",
        "z": "1883ce515f2f379c",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "004",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "AquaChile",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Wagner1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "151",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2900,
        "wires": [
            [
                "5729b83596da817c"
            ]
        ]
    },
    {
        "id": "5729b83596da817c",
        "type": "function",
        "z": "1883ce515f2f379c",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '2857e321-2446-45dd-73a8-ff0eead59bcc') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'eca5df23-6d8a-4200-69bf-9cec30a8abe2') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c876e388-afe7-473f-4e3e-e2e8af2f6913') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '60d9f5bf-5230-4778-5ac2-7a26c0732676') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 2900,
        "wires": [
            [
                "c6e7c5dff03df360"
            ]
        ]
    },
    {
        "id": "d5ace597cd7ba773",
        "type": "comment",
        "z": "1883ce515f2f379c",
        "name": "WAGNER1 🐟 🟢",
        "info": "",
        "x": 110,
        "y": 2860,
        "wires": []
    },
    {
        "id": "43b75a5469928d18",
        "type": "mongodb-collection",
        "z": "1883ce515f2f379c",
        "name": "insert_seguridad_movil",
        "config": "5f9bbe83046a3fce",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1530,
        "y": 1620,
        "wires": [
            [
                "1ffbd1786ced8b1f"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "6b5c4e36d6d1a588",
        "type": "mqtt out",
        "z": "db3871cde3e51b44",
        "name": "checkBroker",
        "topic": "mqtt_salmonesaustral_seguridad",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "a64a45b285eb271f",
        "type": "inject",
        "z": "db3871cde3e51b44",
        "name": "conectar",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "6b5c4e36d6d1a588"
            ]
        ]
    },
    {
        "id": "22e69fc260dfb129",
        "type": "inject",
        "z": "db3871cde3e51b44",
        "name": "desconectar",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "6b5c4e36d6d1a588"
            ]
        ]
    },
    {
        "id": "8ee41ac0a39ea3a8",
        "type": "status",
        "z": "db3871cde3e51b44",
        "name": "",
        "scope": [
            "6b5c4e36d6d1a588"
        ],
        "x": 440,
        "y": 100,
        "wires": [
            [
                "7eee292de1b68f27"
            ]
        ]
    },
    {
        "id": "7eee292de1b68f27",
        "type": "change",
        "z": "db3871cde3e51b44",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mqtt_status",
                "pt": "flow",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7062a12160c4f00d",
        "type": "comment",
        "z": "db3871cde3e51b44",
        "name": "CONEXION MQTT",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "31557ba30e3c88cc",
        "type": "http in",
        "z": "db3871cde3e51b44",
        "name": "NIO",
        "url": "/api/spotter/pocoihuen",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 220,
        "wires": [
            [
                "f7f0fc14f0dce084"
            ]
        ]
    },
    {
        "id": "f7f0fc14f0dce084",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 220,
        "wires": [
            [
                "9737529b567bd0c5"
            ]
        ]
    },
    {
        "id": "511432f73c1013f9",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 220,
        "wires": [
            [
                "ad0c39c40733fce0"
            ]
        ]
    },
    {
        "id": "9737529b567bd0c5",
        "type": "change",
        "z": "db3871cde3e51b44",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pocoihuen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "107",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 220,
        "wires": [
            [
                "2859c652eff26237"
            ]
        ]
    },
    {
        "id": "2859c652eff26237",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n    for (var i = 0; i < arr.length; i++) {\n        var currentItem = arr[i];\n        if (currentItem.id !== undefined && currentItem.id !== null) {\n            var timestamp = new Date(currentItem.timestamp);\n            var formattedDateTime = formatDateTime(timestamp);\n\n            var nombreModuloZona;\n\n            if (currentItem.zones[0] === 'e66fa9b0-b417-4b76-4998-f7970374a37b') {\n                nombreModuloZona = '100';\n            } else if (currentItem.zones[0] === '00e657d7-826f-4958-5475-07a19f29f895') {\n                nombreModuloZona = 'INTERIOR';\n            } else if (currentItem.zones[0] === 'a17424f8-0ef5-4a43-4015-391c06bccbde') {\n                nombreModuloZona = 'EXTERIOR';\n            } else if (currentItem.zones[0] === 'b70ee8bc-90f6-4fb2-4d01-7b313ccd72e3') {\n                nombreModuloZona = 'ACTIVE_TRACKING';\n            }else {\n                nombreModuloZona = currentItem.zones[0];\n            }\n\n            // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n            if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n                \n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                \n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        } \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 220,
        "wires": [
            [
                "511432f73c1013f9"
            ]
        ]
    },
    {
        "id": "782c388bef361153",
        "type": "comment",
        "z": "db3871cde3e51b44",
        "name": "POCOIHUEN 🐟 🟢",
        "info": "",
        "x": 120,
        "y": 180,
        "wires": []
    },
    {
        "id": "24d472daea6725c9",
        "type": "http in",
        "z": "db3871cde3e51b44",
        "name": "NIO",
        "url": "/api/spotter/contao",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 300,
        "wires": [
            [
                "c1cff2b58b9c1933"
            ]
        ]
    },
    {
        "id": "c1cff2b58b9c1933",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 300,
        "wires": [
            [
                "ebba49fe462c2078"
            ]
        ]
    },
    {
        "id": "60451fbf9b2e530a",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 300,
        "wires": [
            [
                "ad0c39c40733fce0"
            ]
        ]
    },
    {
        "id": "ebba49fe462c2078",
        "type": "change",
        "z": "db3871cde3e51b44",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Contao",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "108",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 300,
        "wires": [
            [
                "4ca6dd8aa6a611e0"
            ]
        ]
    },
    {
        "id": "4ca6dd8aa6a611e0",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '912eb136-60dd-4173-4b48-38d0dccd5fed') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'dede1a11-ffa6-47d8-7ba0-44f08d2de89c') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '77901925-e744-45b3-724f-3e3731bfe6bf') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'c6b6a04b-1e1b-4889-71bf-12a0f118389a') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                clasificacion: currentItem.classification?.type?.value || '',\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 300,
        "wires": [
            [
                "60451fbf9b2e530a"
            ]
        ]
    },
    {
        "id": "d2384799939cec0b",
        "type": "comment",
        "z": "db3871cde3e51b44",
        "name": "CONTAO 🐟 🟢",
        "info": "",
        "x": 100,
        "y": 260,
        "wires": []
    },
    {
        "id": "fadc7abe8bcb8846",
        "type": "http in",
        "z": "db3871cde3e51b44",
        "d": true,
        "name": "NIO",
        "url": "/api/spotter/pirquen",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 380,
        "wires": [
            [
                "9ed2ef2d3f812ae6"
            ]
        ]
    },
    {
        "id": "9ed2ef2d3f812ae6",
        "type": "function",
        "z": "db3871cde3e51b44",
        "d": true,
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 380,
        "wires": [
            [
                "e7f5ae2c407742d0"
            ]
        ]
    },
    {
        "id": "1525f7b92b11b729",
        "type": "function",
        "z": "db3871cde3e51b44",
        "d": true,
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 380,
        "wires": [
            [
                "ad0c39c40733fce0"
            ]
        ]
    },
    {
        "id": "e7f5ae2c407742d0",
        "type": "change",
        "z": "db3871cde3e51b44",
        "d": true,
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Pirquen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "109",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 380,
        "wires": [
            [
                "0783bdb99f10e1e8"
            ]
        ]
    },
    {
        "id": "0783bdb99f10e1e8",
        "type": "function",
        "z": "db3871cde3e51b44",
        "d": true,
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    //adelantar una hora por atraso del servidor 10.10.7.41\n    timestamp.setHours(timestamp.getHours() + 1);\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'c880ccae-6d38-4f32-6b98-3edaa66c4372') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '32e62643-7deb-4312-4f77-b88c369709fe') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '5e35c87a-1cc8-4ed5-7144-dead32e89f8a') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            modulo: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || ''\n        };\n\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100' || nombreModuloZona === '200') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            modulo: 'seguridad_detalle', \n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration,\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle\n        });\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 380,
        "wires": [
            [
                "1525f7b92b11b729"
            ]
        ]
    },
    {
        "id": "ca3abdc7aa600f47",
        "type": "comment",
        "z": "db3871cde3e51b44",
        "name": "PIRQUEN ❌ SIN CONEXION",
        "info": "",
        "x": 150,
        "y": 340,
        "wires": []
    },
    {
        "id": "1c3d8ff530583714",
        "type": "http in",
        "z": "db3871cde3e51b44",
        "name": "NIO",
        "url": "/api/spotter/rollizofenix",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 540,
        "wires": [
            [
                "f62b804b1cec7afb"
            ]
        ]
    },
    {
        "id": "f62b804b1cec7afb",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 540,
        "wires": [
            [
                "1d83803aa59cdc32"
            ]
        ]
    },
    {
        "id": "5d57686daedfaa03",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 540,
        "wires": [
            [
                "ad0c39c40733fce0"
            ]
        ]
    },
    {
        "id": "1d83803aa59cdc32",
        "type": "change",
        "z": "db3871cde3e51b44",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Rollizo Fenix",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "111",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 540,
        "wires": [
            [
                "4853fa79db099a38"
            ]
        ]
    },
    {
        "id": "4853fa79db099a38",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '9305f291-816e-4a7b-6b9c-61b0c0d84108') {\n            nombreModuloZona = '200';\n        } else if (currentItem.zones[0] === '8d69834a-470f-4cd8-4101-cd11fc353bca') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '2586cc68-525e-4630-6a33-c195a6ada8e8') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === 'd2d23ee2-0354-4202-73cb-022e0731c54c') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        }else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n                \n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                \n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '200') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 540,
        "wires": [
            [
                "5d57686daedfaa03"
            ]
        ]
    },
    {
        "id": "5cd431d20104a975",
        "type": "comment",
        "z": "db3871cde3e51b44",
        "name": "ROLLIZO-FENIX 🐟 🟢",
        "info": "",
        "x": 130,
        "y": 500,
        "wires": []
    },
    {
        "id": "cf4c51d301d756ca",
        "type": "http in",
        "z": "db3871cde3e51b44",
        "name": "NIO",
        "url": "/api/spotter/rollizodonmiguel",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 460,
        "wires": [
            [
                "77a4a750fdc138fe"
            ]
        ]
    },
    {
        "id": "77a4a750fdc138fe",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 460,
        "wires": [
            [
                "2410d572fb13263d"
            ]
        ]
    },
    {
        "id": "02473fd056c439b8",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 460,
        "wires": [
            [
                "ad0c39c40733fce0"
            ]
        ]
    },
    {
        "id": "2410d572fb13263d",
        "type": "change",
        "z": "db3871cde3e51b44",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Rollizo Don Miguel",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "110",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 460,
        "wires": [
            [
                "0c41b4099d974a96"
            ]
        ]
    },
    {
        "id": "0c41b4099d974a96",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '43bf1cec-ea21-44ea-5ef5-2902c9a38614') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '9afdc2d1-827a-4e5a-5cf2-9da3e36d98fb') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'b7e87ac0-22fd-4179-6caa-66c27bab61cc') {\n            nombreModuloZona = 'EXTERIOR';\n        }else if (currentItem.zones[0] === 'f0941e86-1c97-4fc2-7df3-cfbad573d93b') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n            \n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration,\n                snr: currentItem.stats?.localSnr || '',\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR' || nombreModuloZona === 'ACTIVE_TRACKING') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }    \n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 460,
        "wires": [
            [
                "02473fd056c439b8"
            ]
        ]
    },
    {
        "id": "65df27757e74c123",
        "type": "comment",
        "z": "db3871cde3e51b44",
        "name": "ROLLIZO-DON MIGUEL 🐟 🟢",
        "info": "",
        "x": 150,
        "y": 420,
        "wires": []
    },
    {
        "id": "99064c72c35d9c65",
        "type": "http in",
        "z": "db3871cde3e51b44",
        "name": "NIO",
        "url": "/api/spotter/quillaipe",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 620,
        "wires": [
            [
                "750dafc721ab8633"
            ]
        ]
    },
    {
        "id": "750dafc721ab8633",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 620,
        "wires": [
            [
                "faa168ad68f35131"
            ]
        ]
    },
    {
        "id": "dc1d373b9ee71995",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 620,
        "wires": [
            [
                "ad0c39c40733fce0"
            ]
        ]
    },
    {
        "id": "faa168ad68f35131",
        "type": "change",
        "z": "db3871cde3e51b44",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Quillaipe",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "112",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 620,
        "wires": [
            [
                "786de7c46f22e886"
            ]
        ]
    },
    {
        "id": "786de7c46f22e886",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '8121fee9-fa99-4816-77ac-d9bbcca8d3a3') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '44b3577b-0418-4b14-7af7-d3d58cb17b2a') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'c9973fc9-54b8-4bca-7768-ef36663d3d43') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '833695f9-42a3-4aba-4820-91b67203b9fc') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null ;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 620,
        "wires": [
            [
                "dc1d373b9ee71995"
            ]
        ]
    },
    {
        "id": "02468f9e2fc8f50d",
        "type": "comment",
        "z": "db3871cde3e51b44",
        "name": "QUILLAIPE 🐟 🔴",
        "info": "",
        "x": 110,
        "y": 580,
        "wires": []
    },
    {
        "id": "de44ef2c3fccafe9",
        "type": "http in",
        "z": "db3871cde3e51b44",
        "name": "NIO",
        "url": "/api/spotter/polocuhe",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 700,
        "wires": [
            [
                "431ab6b16d0e1c88"
            ]
        ]
    },
    {
        "id": "431ab6b16d0e1c88",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 700,
        "wires": [
            [
                "e53df0d9f4f60677"
            ]
        ]
    },
    {
        "id": "4c78f91d7ca81177",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 700,
        "wires": [
            [
                "ad0c39c40733fce0"
            ]
        ]
    },
    {
        "id": "e53df0d9f4f60677",
        "type": "change",
        "z": "db3871cde3e51b44",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Polocuhe",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "113",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 700,
        "wires": [
            [
                "800b4a64c9725195"
            ]
        ]
    },
    {
        "id": "800b4a64c9725195",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '648c6588-f02f-40a2-7cd1-de8456a5f59f') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '6e32f572-8f85-47d4-78ea-68aff0b4fe82') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '9b3b94d0-1103-42b4-4ab6-56174f94d805') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 700,
        "wires": [
            [
                "4c78f91d7ca81177"
            ]
        ]
    },
    {
        "id": "de95823254c7e4b9",
        "type": "comment",
        "z": "db3871cde3e51b44",
        "name": "POLOCUHE 🐟 🔴",
        "info": "",
        "x": 110,
        "y": 660,
        "wires": []
    },
    {
        "id": "8f63ed2a91fdc283",
        "type": "http in",
        "z": "db3871cde3e51b44",
        "name": "NIO",
        "url": "/api/spotter/ilque",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 780,
        "wires": [
            [
                "f7266d1c5bbcaeac"
            ]
        ]
    },
    {
        "id": "f7266d1c5bbcaeac",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 780,
        "wires": [
            [
                "d5dd43591fa915b8"
            ]
        ]
    },
    {
        "id": "bde57c3d1477f6b2",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 780,
        "wires": [
            [
                "ad0c39c40733fce0"
            ]
        ]
    },
    {
        "id": "d5dd43591fa915b8",
        "type": "change",
        "z": "db3871cde3e51b44",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Ilque",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "114",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 780,
        "wires": [
            [
                "f0901366eed2f82f"
            ]
        ]
    },
    {
        "id": "f0901366eed2f82f",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === 'c620e427-713e-4215-72d7-5921d28f59e0') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '61a2ed50-7875-4516-5c8a-62ae8ec45290') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '97569ac4-fa36-47c8-4331-7f9a3316b450') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 780,
        "wires": [
            [
                "bde57c3d1477f6b2"
            ]
        ]
    },
    {
        "id": "3f128eb0a34e959c",
        "type": "comment",
        "z": "db3871cde3e51b44",
        "name": "ILQUE 🐟 🔴",
        "info": "",
        "x": 90,
        "y": 740,
        "wires": []
    },
    {
        "id": "ed92785424d4f219",
        "type": "http in",
        "z": "db3871cde3e51b44",
        "name": "NIO",
        "url": "/api/spotter/lenca",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 860,
        "wires": [
            [
                "067752e7f10b291f"
            ]
        ]
    },
    {
        "id": "067752e7f10b291f",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 860,
        "wires": [
            [
                "9bbef20e52e04c29"
            ]
        ]
    },
    {
        "id": "baa3db3153c76293",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 860,
        "wires": [
            [
                "ad0c39c40733fce0"
            ]
        ]
    },
    {
        "id": "9bbef20e52e04c29",
        "type": "change",
        "z": "db3871cde3e51b44",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Lenca",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "115",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 860,
        "wires": [
            [
                "8f809d362a763a78"
            ]
        ]
    },
    {
        "id": "8f809d362a763a78",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n\n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n\n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nvar newMsg = []; // Arreglo donde almacenaremos los datos a enviar\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '89bcf991-d1cf-4554-6b33-a22146bf18d9b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === '428daded-561e-42a9-6b5f-d5eab68af911') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '116ba791-595b-40b3-5c91-c67f644c1970') {\n            nombreModuloZona = 'EXTERIOR';\n        } else if (currentItem.zones[0] === '537429d1-bd24-4ced-49d9-3f921244070d') {\n            nombreModuloZona = 'ACTIVE_TRACKING';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n        // Agregar una condición para omitir cuando nombreModuloZona es 'ACTIVE_TRACKING'\n        if (nombreModuloZona !== 'ACTIVE_TRACKING') {\n            var cabecera = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                model: model || '',\n                serial: serial || '',\n            };\n            // Agregar \"id_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.id_modulo = currentItem.zones[0];\n            } else {\n                // Agregar \"id_zona\" solo cuando es una zona\n                cabecera.id_zona = currentItem.zones[0];\n            }\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                cabecera.modulo = nombreModuloZona;\n            }\n\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                cabecera.zona = nombreModuloZona;\n            }\n            cabecera.id_usuario = null;\n            cabecera.comentario = '';\n            cabecera.observacion = '';\n            cabecera.confirmado = false;\n            cabecera.estado_enviado = false;\n\n\n            var detalle = {\n                track_id: currentItem.id,\n                seccion: 'seguridad_detalle',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                centro: msg.centro,\n                codigo_centro: msg.codigo_centro,\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n                heading: currentItem.geolocation.heading,\n                velocidad: currentItem.geolocation.speed,\n                distancia: currentItem.totalDistance,\n                duracion: currentItem.duration + \"s\",\n                desplazamiento: currentItem.displacement,\n                aceleracion: currentItem.acceleration\n            };\n            // Agrega \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                detalle.modulo = nombreModuloZona;\n            }\n\n            // Agrega \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                detalle.zona = nombreModuloZona;\n            }\n            detalle.estado_enviado = false;\n\n            var movil = {\n                track_id: currentItem.id,\n                seccion: 'seguridad',\n                codigo_empresa: msg.codigo_empresa,\n                empresa: msg.empresa,\n                codigo_centro: msg.codigo_centro,\n                centro: msg.centro,\n                clasificacion: currentItem.classification?.type?.value || '',\n                fecha: formattedDateTime.fecha,\n                hora: formattedDateTime.hora,\n                latitud: currentItem.geolocation.latitude,\n                longitud: currentItem.geolocation.longitude,\n            };\n            // Agregar \"nombre_modulo\" solo cuando es un módulo\n            if (nombreModuloZona === '100') {\n                movil.modulo = nombreModuloZona;\n            }\n            // Agregar \"nombre_zona\" solo cuando es una zona\n            if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n                movil.zona = nombreModuloZona;\n            }\n            movil.estado_enviado = false;\n\n            newMsg.push({\n                search: currentItem.id,\n                cabecera: cabecera,\n                detalle: detalle,\n                movil: movil\n            });\n        }\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 860,
        "wires": [
            [
                "baa3db3153c76293"
            ]
        ]
    },
    {
        "id": "2045a96f464828d2",
        "type": "comment",
        "z": "db3871cde3e51b44",
        "name": "LENCA 🐟 🔴",
        "info": "",
        "x": 100,
        "y": 820,
        "wires": []
    },
    {
        "id": "5923cc538390d242",
        "type": "http in",
        "z": "db3871cde3e51b44",
        "name": "NIO",
        "url": "/api/spotter/traiguen",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 940,
        "wires": [
            [
                "73deb001e70fec2a"
            ]
        ]
    },
    {
        "id": "73deb001e70fec2a",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 940,
        "wires": [
            [
                "2c6911f03ff7dcf1"
            ]
        ]
    },
    {
        "id": "2032af8247da74e7",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 940,
        "wires": [
            [
                "ad0c39c40733fce0"
            ]
        ]
    },
    {
        "id": "2c6911f03ff7dcf1",
        "type": "change",
        "z": "db3871cde3e51b44",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Traiguen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "116",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 940,
        "wires": [
            [
                "eb84e139236eb407"
            ]
        ]
    },
    {
        "id": "eb84e139236eb407",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '19a64f20-8ed4-4025-7ae4-008fb8d5b10b') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'f03dba75-4eff-45ac-6bed-ee90688833d3') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === 'fd38f08b-5a6e-409b-69d2-2b5986b90107') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 940,
        "wires": [
            [
                "2032af8247da74e7"
            ]
        ]
    },
    {
        "id": "9838934119bc6306",
        "type": "comment",
        "z": "db3871cde3e51b44",
        "name": "TRAIGUEN 🐟 🔴",
        "info": "",
        "x": 110,
        "y": 900,
        "wires": []
    },
    {
        "id": "cc73c1902f634569",
        "type": "http in",
        "z": "db3871cde3e51b44",
        "name": "NIO",
        "url": "/api/spotter/verdugo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 1020,
        "wires": [
            [
                "6ccda11bb96e5f02"
            ]
        ]
    },
    {
        "id": "6ccda11bb96e5f02",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1020,
        "wires": [
            [
                "8738e40e92eb3d14"
            ]
        ]
    },
    {
        "id": "02f4df71d74ea82b",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "findCabecera",
        "func": "msg.query = { \"track_id\": msg.search };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1020,
        "wires": [
            [
                "ad0c39c40733fce0"
            ]
        ]
    },
    {
        "id": "8738e40e92eb3d14",
        "type": "change",
        "z": "db3871cde3e51b44",
        "name": "Parametros",
        "rules": [
            {
                "t": "set",
                "p": "codigo_empresa",
                "pt": "msg",
                "to": "005",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "empresa",
                "pt": "msg",
                "to": "Salmones Austral",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "centro",
                "pt": "msg",
                "to": "Traiguen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "codigo_centro",
                "pt": "msg",
                "to": "117",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1020,
        "wires": [
            [
                "cee2ea81815d06d5"
            ]
        ]
    },
    {
        "id": "cee2ea81815d06d5",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "loop data cabecera",
        "func": "var newMsg = [];\n\n/**\n* @param {Date} timestamp\n* @returns {{fecha: string, hora: string}} - Objeto con propiedades 'fecha' y 'hora'.\n*/\nfunction formatDateTime(timestamp) {\n    \n    if (!timestamp) {\n        // Manejar el caso cuando timestamp es undefined o null\n        return {\n            fecha: '',\n            hora: ''\n        };\n    }\n    \n    var formattedDate = timestamp.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });\n    var formattedTime = timestamp.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n    return {\n        fecha: formattedDate,\n        hora: formattedTime\n    };\n}\n\nvar arr = msg.payload.result;\nvar serial = msg.payload.serial;\nvar model = msg.payload.model;\n\nfor (var i = 0; i < arr.length; i++) {\n    var currentItem = arr[i];\n    if (currentItem.id !== undefined && currentItem.id !== null) {\n        var timestamp = new Date(currentItem.timestamp);\n        var formattedDateTime = formatDateTime(timestamp);\n\n        var nombreModuloZona;\n\n        if (currentItem.zones[0] === '3c1f5685-6fc1-458a-5cd4-f41c3d9d6850') {\n            nombreModuloZona = '100';\n        } else if (currentItem.zones[0] === 'f8f1302a-a787-42ca-795a-2067f535aad7') {\n            nombreModuloZona = 'INTERIOR';\n        } else if (currentItem.zones[0] === '9cc50831-d829-4ede-6219-735cbc595b02') {\n            nombreModuloZona = 'EXTERIOR';\n        } else {\n            nombreModuloZona = currentItem.zones[0];\n        }\n\n        var cabecera = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            model: model || '',\n            serial: serial || '',\n        };\n        // Agregar \"id_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.id_modulo = currentItem.zones[0];\n        } else {\n            // Agregar \"id_zona\" solo cuando es una zona\n            cabecera.id_zona = currentItem.zones[0];\n        }\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            cabecera.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            cabecera.zona = nombreModuloZona;\n        }\n        cabecera.id_usuario = null ;\n        cabecera.comentario = '';\n        cabecera.observacion = '';\n        cabecera.confirmado = false;\n        cabecera.estado_enviado = false;\n\n        var detalle = {\n            track_id: currentItem.id,\n            seccion: 'seguridad_detalle',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            centro: msg.centro,\n            codigo_centro: msg.codigo_centro,\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n            heading: currentItem.geolocation.heading,\n            velocidad: currentItem.geolocation.speed,\n            distancia: currentItem.totalDistance,\n            duracion: currentItem.duration + \"s\",\n            desplazamiento: currentItem.displacement,\n            aceleracion: currentItem.acceleration\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            detalle.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            detalle.zona = nombreModuloZona;\n        }\n        detalle.estado_enviado = false;\n\n        var movil = {\n            track_id: currentItem.id,\n            seccion: 'seguridad',\n            codigo_empresa: msg.codigo_empresa,\n            empresa: msg.empresa,\n            codigo_centro: msg.codigo_centro,\n            centro: msg.centro,\n            clasificacion: currentItem.classification?.type?.value || '',\n            fecha: formattedDateTime.fecha,\n            hora: formattedDateTime.hora,\n            latitud: currentItem.geolocation.latitude,\n            longitud: currentItem.geolocation.longitude,\n        };\n        // Agregar \"nombre_modulo\" solo cuando es un módulo\n        if (nombreModuloZona === '100') {\n            movil.modulo = nombreModuloZona;\n        }\n\n        // Agregar \"nombre_zona\" solo cuando es una zona\n        if (nombreModuloZona === 'INTERIOR' || nombreModuloZona === 'EXTERIOR') {\n            movil.zona = nombreModuloZona;\n        }\n        movil.estado_enviado = false;\n\n        newMsg.push({\n            search: currentItem.id,\n            cabecera: cabecera,\n            detalle: detalle,\n            movil: movil\n        });\n    }\n}\n\nreturn [newMsg];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 550,
        "y": 1020,
        "wires": [
            [
                "02f4df71d74ea82b"
            ]
        ]
    },
    {
        "id": "19514367903e7e5c",
        "type": "comment",
        "z": "db3871cde3e51b44",
        "name": "VERDUGO 🐟 🔴",
        "info": "",
        "x": 110,
        "y": 980,
        "wires": []
    },
    {
        "id": "fa1b5b574ea87cd4",
        "type": "change",
        "z": "db3871cde3e51b44",
        "name": "delete msg.red",
        "rules": [
            {
                "t": "delete",
                "p": "red",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 880,
        "wires": [
            [
                "17b8da9f2afa9694"
            ]
        ]
    },
    {
        "id": "17b8da9f2afa9694",
        "type": "switch",
        "z": "db3871cde3e51b44",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 880,
        "wires": [
            [
                "2c1b8bc88f5a3de7",
                "cb4a528182387d69"
            ],
            [
                "2c1b8bc88f5a3de7",
                "e5c7421cb1a7fa93",
                "c9949e4980320932",
                "cb4a528182387d69",
                "3501b4c9d841d90e"
            ]
        ]
    },
    {
        "id": "e5c7421cb1a7fa93",
        "type": "mongodb-collection",
        "z": "db3871cde3e51b44",
        "name": "insert_seguridad",
        "config": "9addc59c88d87879",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "cabecera",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1590,
        "y": 780,
        "wires": [
            [
                "7b50268545634433"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "ad0c39c40733fce0",
        "type": "mongodb-collection",
        "z": "db3871cde3e51b44",
        "name": "findDB",
        "config": "9addc59c88d87879",
        "collection": "seguridad",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 930,
        "y": 680,
        "wires": [
            [
                "9bba1647cce83672"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "2c1b8bc88f5a3de7",
        "type": "mongodb-collection",
        "z": "db3871cde3e51b44",
        "name": "insert_seguridad_detalle",
        "config": "9addc59c88d87879",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "detalle",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1570,
        "y": 740,
        "wires": [
            [
                "7b50268545634433"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "9bba1647cce83672",
        "type": "function",
        "z": "db3871cde3e51b44",
        "name": "check status mqtt",
        "func": "let status = flow.get(\"mqtt_status\") || {};\n\n\nif (status.text == 'node-red:common.status.connected') {\n    msg.red = 'online';\n    msg.cabecera.estado_enviado = true;\n    msg.detalle.estado_enviado = true;\n    msg.movil.estado_enviado = true;\n    msg.fecha = new Date();\n} else {\n    msg.red = 'offline';\n    msg.cabecera.estado_enviado = false;\n    msg.detalle.estado_enviado = false;\n    msg.movil.estado_enviado = false;\n    msg.fecha = new Date();\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 680,
        "wires": [
            [
                "600312e73b554279"
            ]
        ]
    },
    {
        "id": "600312e73b554279",
        "type": "switch",
        "z": "db3871cde3e51b44",
        "name": "",
        "property": "red",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 880,
        "wires": [
            [
                "fa1b5b574ea87cd4"
            ],
            [
                "fa1b5b574ea87cd4"
            ]
        ]
    },
    {
        "id": "1f0e26938099f77e",
        "type": "mqtt out",
        "z": "db3871cde3e51b44",
        "name": "envioMQTT",
        "topic": "mqtt_salmonesaustral_seguridad",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9f945835b1447245",
        "x": 1750,
        "y": 940,
        "wires": []
    },
    {
        "id": "cb4a528182387d69",
        "type": "change",
        "z": "db3871cde3e51b44",
        "name": "send detalle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "detalle",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 900,
        "wires": [
            [
                "1f0e26938099f77e"
            ]
        ]
    },
    {
        "id": "c9949e4980320932",
        "type": "change",
        "z": "db3871cde3e51b44",
        "name": "send cabecera",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cabecera",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 940,
        "wires": [
            [
                "1f0e26938099f77e"
            ]
        ]
    },
    {
        "id": "7b50268545634433",
        "type": "debug",
        "z": "db3871cde3e51b44",
        "name": "debug 225",
        "active": false,
        "tosidebar": false,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 760,
        "wires": []
    },
    {
        "id": "2b2ee637426587b7",
        "type": "inject",
        "z": "db3871cde3e51b44",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "conectado desde Traiguen",
        "payloadType": "str",
        "x": 1610,
        "y": 980,
        "wires": [
            [
                "1f0e26938099f77e",
                "e8760796b7493430"
            ]
        ]
    },
    {
        "id": "e8760796b7493430",
        "type": "debug",
        "z": "db3871cde3e51b44",
        "name": "debug 226",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1740,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e5c846cc164a98f6",
        "type": "mqtt in",
        "z": "db3871cde3e51b44",
        "name": "",
        "topic": "mqtt_salmonesaustral_seguridad",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9f945835b1447245",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1550,
        "y": 700,
        "wires": [
            [
                "699f9dce3e8c1c09"
            ]
        ]
    },
    {
        "id": "699f9dce3e8c1c09",
        "type": "debug",
        "z": "db3871cde3e51b44",
        "name": "debug 227",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1760,
        "y": 700,
        "wires": []
    },
    {
        "id": "3501b4c9d841d90e",
        "type": "mongodb-collection",
        "z": "db3871cde3e51b44",
        "name": "insert_seguridad_movil",
        "config": "9addc59c88d87879",
        "collection": "seguridad_movil",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "movil",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1570,
        "y": 820,
        "wires": [
            [
                "7b50268545634433"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    }
]